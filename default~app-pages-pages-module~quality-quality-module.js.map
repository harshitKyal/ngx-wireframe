{"version":3,"sources":["webpack:///./src/app/@theme/model/quality-class.ts","webpack:///./src/app/@theme/services/qz-tray.service.ts","webpack:///./src/app/pages/quality/add-edit-quality/add-edit-quality.component.html","webpack:///./src/app/pages/quality/add-edit-quality/add-edit-quality.component.scss","webpack:///./src/app/pages/quality/add-edit-quality/add-edit-quality.component.ts","webpack:///./src/app/pages/quality/quality-routing.module.ts","webpack:///./src/app/pages/quality/quality.component.html","webpack:///./src/app/pages/quality/quality.component.scss","webpack:///./src/app/pages/quality/quality.component.ts","webpack:///./src/app/pages/quality/quality.module.ts","webpack:///./src/app/pages/quality/view-quality/view-quality.component.html","webpack:///./src/app/pages/quality/view-quality/view-quality.component.scss","webpack:///./src/app/pages/quality/view-quality/view-quality.component.ts"],"names":[],"mappings":"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","file":"default~app-pages-pages-module~quality-quality-module.js","sourcesContent":["export class Quality {\r\n    entry_id: any;\r\n    quality_id: any;\r\n    quality_name: any = '';\r\n    quality_type: any = '';\r\n    quality_sub_type: any = '';\r\n    party_name: any = '';\r\n    wt_per100m: any;\r\n    remark: any;\r\n    created_date: any;\r\n    created_by: any;\r\n    updated_by: any;\r\n    updated_date: any;\r\n    quality_date: any;\r\n    user_head_id: any;\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/fromPromise';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/map';\r\n\r\ndeclare var qz: any;\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QzTrayService {\r\n\r\n  constructor() { }\r\n  errorHandler(error: any): Observable<any> {\r\n    return Observable.throw(error);\r\n  }\r\n\r\n  getPrinters(): Observable<string[]> {\r\n    debugger\r\n    return Observable\r\n      .fromPromise(qz.websocket.connect().then(() => qz.printers.find()))\r\n      .map((printers: string[]) => printers)\r\n      .catch(this.errorHandler);\r\n  }\r\n\r\n  getPrinter(printerName: string): Observable<string> {\r\n    return Observable\r\n      .fromPromise(qz.websocket.connect().then(() => qz.printers.find(printerName)))\r\n      .map((printer: string) => printer)\r\n      .catch(this.errorHandler);\r\n  }\r\n\r\n  printData(printer: string, data: any): Observable<any> {\r\n    // Create a default config for the found printer\r\n    const config = qz.configs.create(printer);\r\n    return Observable.fromPromise(qz.print(config, data))\r\n      .map((anything: any) => anything)\r\n      .catch(this.errorHandler);\r\n  }\r\n\r\n  removePrinter(): void {\r\n    qz.websocket.disconnect();\r\n  }\r\n}\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>{{topHeader}}\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form (ngSubmit)=\\\"onCustomFormSubmit(vform)\\\" #vform=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Quality Id</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.quality_id\\\" name=\\\"qualityId\\\"\\r\\n              #QualityId=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"QualityId.invalid && (QualityId.dirty || QualityId.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"QualityId.errors && QualityId.errors.required\\\">\\r\\n                Quality Id is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Quality Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.quality_name\\\" name=\\\"qualityname\\\"\\r\\n              #qualityName=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"qualityName.invalid && (qualityName.dirty || qualityName.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"qualityName.errors && qualityName.errors.required\\\">\\r\\n                Quality Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Quality Type</label>\\r\\n            <!-- pattern -->\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.quality_type\\\" name=\\\"qualitytype\\\"\\r\\n              #qualityType=\\\"ngModel\\\" required (change)=\\\"onTypeChange($event.target.value)\\\">\\r\\n              <option disabled value=\\\"\\\">Select Qulaity Type\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let quality of qualityTypeList\\\" [value]=\\\"quality.quality_type_name\\\">\\r\\n                {{quality.quality_type_name}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"qualityType.invalid && (qualityType.dirty || qualityType.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"qualityType.errors && qualityType.errors.required\\\">\\r\\n                Quality Type is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Quality Sub-Type</label>\\r\\n            <!-- pattern -->\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.quality_sub_type\\\" name=\\\"qualitysubtype\\\"\\r\\n              #qualitySubType=\\\"ngModel\\\">\\r\\n              <option disabled value=\\\"\\\">Select Quality Sub Type\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let quality of qualitySubTypeList\\\" [value]=\\\"quality.quality_sub_type\\\">\\r\\n                {{quality.quality_sub_type}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"qualitySubType.invalid && (qualitySubType.dirty || qualitySubType.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"qualitySubType.errors && qualitySubType.errors.required\\\">\\r\\n                Quality Sub Type is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Party Name</label>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.party_name\\\" name=\\\"partyname\\\" #partyName=\\\"ngModel\\\"\\r\\n              required>\\r\\n              <option disabled value=\\\"\\\">Select Party Name</option>\\r\\n              <option *ngFor=\\\"let p of partyNameList\\\" [value]=\\\"p.ID\\\">{{p.Name}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"partyName.invalid && (partyName.dirty || partyName.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"partyName.errors && partyName.errors.required\\\">\\r\\n                Party Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Wt / 100 mtrs</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.wt_per100m\\\" name=\\\"weight\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Remark</label>\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.remark\\\" name=\\\"remark\\\"> </textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"box-footer\\\">\\r\\n        <button nbButton translate>{{subBtnName}}</button> &nbsp;\\r\\n        <button nbButton type=\\\"reset\\\" routerLink='/pages/quality/view-quality' class=\\\"btn btn-default\\\"\\r\\n          id=\\\"Cancel\\\">Cancel</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\\r\\n\\r\\n<!-- \\r\\n<div class=\\\"row text-left\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"content-header\\\" translate>{{topHeader}}</div>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n<!-- Custom Form Validaton Starts -->\\r\\n<!-- <div class=\\\"row text-left\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"card-block\\\">\\r\\n          <form (ngSubmit)=\\\"onCustomFormSubmit(vform)\\\" #vform=\\\"ngForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Quality Id</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.quality_id\\\" name=\\\"qualityId\\\"\\r\\n                    #QualityId=\\\"ngModel\\\" required />\\r\\n                  <div *ngIf=\\\"QualityId.invalid && (QualityId.dirty || QualityId.touched)\\\" class=\\\"errors\\\">\\r\\n                    <div *ngIf=\\\"QualityId.errors && QualityId.errors.required\\\">\\r\\n                      Quality Id is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Quality Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.quality_name\\\" name=\\\"qualityname\\\"\\r\\n                    #qualityName=\\\"ngModel\\\" required />\\r\\n                  <div *ngIf=\\\"qualityName.invalid && (qualityName.dirty || qualityName.touched)\\\" class=\\\"errors\\\">\\r\\n                    <div *ngIf=\\\"qualityName.errors && qualityName.errors.required\\\">\\r\\n                      Quality Name is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Quality Type</label>\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.quality_type\\\" name=\\\"qualitytype\\\"\\r\\n                    #qualityType=\\\"ngModel\\\" required (change)=\\\"onTypeChange($event.target.value)\\\">\\r\\n                    <option disabled value=\\\"\\\">Select Qulaity Type\\r\\n                    </option>\\r\\n                    <option *ngFor=\\\"let quality of qualityTypeList\\\" [value]=\\\"quality.quality_type_name\\\">\\r\\n                      {{quality.quality_type_name}}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"qualityType.invalid && (qualityType.dirty || qualityType.touched)\\\" class=\\\"errors\\\">\\r\\n                    <div *ngIf=\\\"qualityType.errors && qualityType.errors.required\\\">\\r\\n                      Quality Type is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Quality Sub-Type</label>\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.quality_sub_type\\\" name=\\\"qualitysubtype\\\"\\r\\n                    #qualitySubType=\\\"ngModel\\\">\\r\\n                    <option disabled value=\\\"\\\">Select Quality Sub Type\\r\\n                    </option>\\r\\n                    <option *ngFor=\\\"let quality of qualitySubTypeList\\\" [value]=\\\"quality.quality_sub_type\\\">\\r\\n                      {{quality.quality_sub_type}}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"qualitySubType.invalid && (qualitySubType.dirty || qualitySubType.touched)\\\"\\r\\n                    class=\\\"errors\\\">\\r\\n                    <div *ngIf=\\\"qualitySubType.errors && qualitySubType.errors.required\\\">\\r\\n                      Quality Sub Type is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Party Name</label>\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.party_name\\\" name=\\\"partyname\\\"\\r\\n                    #partyName=\\\"ngModel\\\" required>\\r\\n                    <option disabled value=\\\"\\\">Select Party Name</option>\\r\\n                    <option *ngFor=\\\"let p of partyNameList\\\" [value]=\\\"p.ID\\\">{{p.Name}}</option>\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"partyName.invalid && (partyName.dirty || partyName.touched)\\\" class=\\\"errors\\\">\\r\\n                    <div *ngIf=\\\"partyName.errors && partyName.errors.required\\\">\\r\\n                      Party Name is required.\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Wt / 100 mtrs</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.wt_per100m\\\" name=\\\"weight\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Remark</label>\\r\\n                  <textarea type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"qualityModal.remark\\\"\\r\\n                    name=\\\"remark\\\"> </textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-footer\\\">\\r\\n              <button class=\\\"btn btn-raised btn-primary\\\" translate>{{subBtnName}}</button> &nbsp;\\r\\n              <button type=\\\"reset\\\" routerLink='/quality/view-quality' class=\\\"btn btn-default\\\"\\r\\n                id=\\\"Cancel\\\">Cancel</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\\r\\n<!-- Custom Form Validaton Ends -->\"","module.exports = \".errors {\\n  color: red;\\n  font-size: 13px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcXVhbGl0eS9hZGQtZWRpdC1xdWFsaXR5L0M6XFxVc2Vyc1xcVmFydW5cXERlc2t0b3BcXG5cXG5neC13aXJlZnJhbWUvc3JjXFxhcHBcXHBhZ2VzXFxxdWFsaXR5XFxhZGQtZWRpdC1xdWFsaXR5XFxhZGQtZWRpdC1xdWFsaXR5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVTtFQUNWLGdCQUFlLEVBQ2xCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcXVhbGl0eS9hZGQtZWRpdC1xdWFsaXR5L2FkZC1lZGl0LXF1YWxpdHkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3JzIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Quality } from '../../../@theme/model/quality-class';\r\nimport { QualityService } from '../../../@theme/services/quality.service';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { User, UserPermission } from '../../../@theme/model/user-class';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-quality',\r\n  templateUrl: './add-edit-quality.component.html',\r\n  styleUrls: ['./add-edit-quality.component.scss']\r\n})\r\nexport class AddEditQualityComponent implements OnInit, OnDestroy {\r\n\r\n  qualityModal: Quality;\r\n  id: any;\r\n  qualityTypeList = [];\r\n  // qualityTypeList = [{ 'ID': '1', 'Name': 'Type1' }, { 'ID': '2', 'Name': 'Type2' }];\r\n  partyNameList = [{ 'ID': '1', 'Name': 'Party1' }, { 'ID': '2', 'Name': 'Party2' }];\r\n  qualitySubTypeList = [];\r\n  subBtnName = '';\r\n  topHeader = '';\r\n  currentUserId: any;\r\n  currentUserHeadid: any;\r\n  currentUser$: Subscription;\r\n  currentUser: User;\r\n  currentUserPermission: UserPermission[] = [];\r\n  constructor(private toasterService: ToastrService, private route: ActivatedRoute,\r\n    private router: Router, private qualityService: QualityService, private authService: AuthService) {\r\n    this.qualityModal = new Quality();\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.currentUserHeadid = ele.user.user_head_id;\r\n        this.currentUserPermission = ele.user_permission;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTypeList();\r\n    this.onPageLoad();\r\n  }\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n\r\n  onPageLoad() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    if (this.id != null) {\r\n      this.subBtnName = 'Update';\r\n      this.topHeader = 'Edit Quality';\r\n      this.qualityService.getQualityById(this.id).subscribe(\r\n        data => {\r\n          //console.log(\"sdad\" , data[0])\r\n          // data=data[0]\r\n          console.log(data)\r\n          if (!data[0].error) {\r\n            this.qualityModal = data[0].data[0];\r\n            //console.log(\"hjgh\",this.qualityModal)\r\n            this.getSubTypeList(this.qualityModal.quality_type);\r\n          } else {\r\n            this.toasterService.error(data[0].message);\r\n          }\r\n        }, error => {\r\n          this.toasterService.error(error);\r\n        });\r\n    } else {\r\n      this.subBtnName = 'Save';\r\n      this.topHeader = 'Add Quality';\r\n    }\r\n  }\r\n\r\n  getTypeList() {\r\n    this.qualityTypeList = [];\r\n    this.qualityService.getTypeList().subscribe(\r\n      data => {\r\n        console.log(\"fdsfds\", data)\r\n        if (!data[0].error) {\r\n          this.qualityTypeList = data[0].data;\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error(error);\r\n      });\r\n  }\r\n\r\n  onTypeChange(event) {\r\n    this.getSubTypeList(event);\r\n  }\r\n\r\n  getSubTypeList(type) {\r\n    console.log(type)\r\n    this.qualitySubTypeList = [];\r\n    this.qualityService.getSubTypeListByType(type).subscribe(\r\n      data => {\r\n        // data = data[0]\r\n        console.log(\"in get sub list\")\r\n        console.log(data)\r\n        if (!data[0].error) {\r\n          this.qualitySubTypeList = data[0].data;\r\n          console.log(\"sub\", this.qualitySubTypeList)\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error(error);\r\n      });\r\n  }\r\n\r\n  onCustomFormSubmit(form: NgForm) {\r\n    //for update\r\n    if (this.id) {\r\n      this.qualityModal.updated_by = this.currentUserId;\r\n      this.qualityService.updateQuality(this.qualityModal).subscribe(data => {\r\n        console.log(data)\r\n        // data= data[0].data\r\n        console.log(\"in edit quality\")\r\n        console.log(data)\r\n        if (!data[0].error) {\r\n          this.toasterService.success(\"Updated Successfully\");\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/quality/view-quality']);\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    } else {\r\n      //for add\r\n      this.qualityModal.created_by = this.currentUserId;\r\n      this.qualityModal.user_head_id = this.currentUserHeadid;\r\n      console.log(this.qualityModal)\r\n      this.qualityService.addQuality(this.qualityModal).subscribe(data => {\r\n        // data = data[0]\r\n        if (!data[0].error) {\r\n          this.toasterService.success(data[0].message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/quality/view-quality']);\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { QualityComponent } from './quality.component';\r\nimport { AddEditQualityComponent } from './add-edit-quality/add-edit-quality.component';\r\nimport { ViewQualityComponent } from './view-quality/view-quality.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'view-quality',\r\n        component: ViewQualityComponent,\r\n      },\r\n      {\r\n        path: 'add-quality',\r\n        component: AddEditQualityComponent,\r\n      },\r\n      {\r\n        path: 'edit-quality/:id',\r\n        component: AddEditQualityComponent,\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: 'view-quality',\r\n        pathMatch: 'full',\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\n\r\nexport class QualityRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1YWxpdHkvcXVhbGl0eS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ɵConsole, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { ColDef } from 'ag-grid-community';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { ViewCell, LocalDataSource } from 'ng2-smart-table';\r\nimport * as jspdf from 'jspdf';\r\nimport * as html2canvas from 'html2canvas';\r\nimport { Quality } from '../../@theme/model/quality-class';\r\nimport { QualityService } from '../../@theme/services/quality.service';\r\nimport { PrintService } from '../../@theme/services/print.service';\r\nimport { PermissionService } from '../../@theme/services/permission.service';\r\nimport { QzTrayService } from '../../@theme/services/qz-tray.service';\r\nimport { ConfirmDialogComponent } from '../../@theme/components/confirm-dialog/confirm-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-quality',\r\n  templateUrl: './quality.component.html',\r\n  styleUrls: ['./quality.component.scss']\r\n})\r\nexport class QualityComponent {\r\n\r\n}\r\n\r\n// export class MyLinkRendererComponent implements ViewCell, OnInit {\r\n//   value: any;\r\n//   rowData: any;\r\n//   editQualityPermission = 0;\r\n//   deleteQualityPermission = 0;\r\n\r\n//   constructor(private router: Router, private modalService: NgbModal, private qualityService: QualityService,\r\n//     private toasterService: ToastrService, private permissionService: PermissionService) {\r\n//   }\r\n//   renderValue: string;\r\n//   @Output() save: EventEmitter<any> = new EventEmitter();\r\n\r\n//   ngOnInit() {\r\n//     this.editQualityPermission = parseInt(JSON.parse(localStorage.getItem('currentUser')).can_edit_quality);\r\n//     this.deleteQualityPermission = parseInt(JSON.parse(localStorage.getItem('currentUser')).can_delete_quality);\r\n//   }\r\n\r\n//   editQuality() {\r\n//     if (this.editQualityPermission) {\r\n//       this.router.navigate(['/quality/edit-quality/' + this.value]);\r\n//     } else {\r\n//       const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to edit quality. If you want to edit quality ask admin for permission.');\r\n//       if (res) {\r\n\r\n//       } else {\r\n\r\n//       }\r\n//     }\r\n//   }\r\n//   onDeleteQuality() {\r\n//     if (this.deleteQualityPermission) {\r\n//       const dialogRef = this.modalService.open(ConfirmDialogComponent);\r\n//       dialogRef.componentInstance.message = 'Are you sure you want to delete quality ?';\r\n//       dialogRef.componentInstance.titleFrom = 'Delete Quality'\r\n//       dialogRef.result.then((result: any) => {\r\n//         if (result) {\r\n//           const id = this.value;\r\n//           this.qualityService.deleteQualityById(id).subscribe(data => {\r\n//             if (!data[0].error) {\r\n//               this.save.emit(true);\r\n//               this.toasterService.success(data[0].message);\r\n//             } else {\r\n//               this.toasterService.error(data[0].message);\r\n//             }\r\n//           });\r\n//         }\r\n//       });\r\n//     } else {\r\n//       const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to delete quality. If you want to delete quality ask admin for permission.');\r\n//       if (res) {\r\n\r\n//       } else {\r\n\r\n//       }\r\n//     }\r\n//   }\r\n// }","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { QualityRoutingModule } from './quality-routing.module';\r\nimport { AddEditQualityComponent } from './add-edit-quality/add-edit-quality.component';\r\nimport { QualityComponent } from './quality.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ViewQualityComponent, MyLinkRendererComponent } from './view-quality/view-quality.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AgGridModule,\r\n    NgxDatatableModule,\r\n    NgSelectModule,\r\n    ThemeModule,\r\n    QualityRoutingModule,\r\n    NgbModule,\r\n    Ng2SmartTableModule\r\n  ],\r\n  declarations: [AddEditQualityComponent, QualityComponent,MyLinkRendererComponent, ViewQualityComponent],\r\n  entryComponents: [MyLinkRendererComponent]\r\n})\r\nexport class QualityModule { }\r\n","module.exports = \"<nb-card>\\r\\n    <nb-card-header>Quality\\r\\n        <button style=\\\"float: right;margin-left: 10px\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onAddQuality()\\\">\\r\\n            Add Quality\\r\\n        </button>\\r\\n        <button style=\\\"float: right;margin-left: 10px\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\"\\r\\n            (click)=\\\"onPrintInvoice(true)\\\">Export Invoice</button>\\r\\n        <button style=\\\"float: right;\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onPrintInvoice(false)\\\">Print\\r\\n            Invoice</button>\\r\\n    </nb-card-header>\\r\\n    <nb-card-body>\\r\\n        <div *ngIf=\\\"viewGroupDataPermission && !viewAllDataPermission\\\">\\r\\n            <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getQualityData($event)\\\">\\r\\n                <nb-radio [value]=\\\"1\\\">\\r\\n                    View Own\\r\\n                </nb-radio>\\r\\n                <nb-radio [value]=\\\"2\\\">\\r\\n                    View Group\\r\\n                </nb-radio>\\r\\n            </nb-radio-group>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"viewGroupDataPermission && viewAllDataPermission\\\">\\r\\n            <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getQualityData($event)\\\">\\r\\n                <nb-radio class=\\\"radio-inline\\\" [value]=\\\"1\\\">\\r\\n                    View Own\\r\\n                </nb-radio>\\r\\n                <nb-radio class=\\\"radio-inline\\\" [value]=\\\"2\\\">\\r\\n                    View Group\\r\\n                </nb-radio>\\r\\n                <nb-radio class=\\\"radio-inline\\\" [value]=\\\"3\\\">\\r\\n                    View All\\r\\n                </nb-radio>\\r\\n            </nb-radio-group>\\r\\n        </div>\\r\\n        <ag-grid-angular style=\\\"width: 100%; height:500px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowData\\\"\\r\\n            [columnDefs]=\\\"columnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='100'>\\r\\n        </ag-grid-angular>\\r\\n    </nb-card-body>\\r\\n</nb-card>\\r\\n<!-- <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <div class=\\\"content-header text-left\\\">Quality</div>\\r\\n        <p class=\\\"content-sub-header\\\"></p>\\r\\n    </div>\\r\\n</div>\\r\\n<section id=\\\"advanced\\\">\\r\\n    <div class=\\\"row text-left\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"card-block\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                                <button class=\\\"btn btn-raised btn-primary\\\" (click)=\\\"onAddQuality()\\\">\\r\\n                                    Add Quality\\r\\n                                </button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-5\\\"></div>\\r\\n                            <div class=\\\"col-md-2\\\">\\r\\n                                <button class=\\\"btn btn-raised btn-primary\\\" (click)=\\\"onPrintInvoice(true)\\\">Export\\r\\n                                    Invoice</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-2\\\">\\r\\n                                <button class=\\\"btn btn-raised btn-primary\\\" (click)=\\\"onPrintInvoice(false)\\\">Print\\r\\n                                    Invoice</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row table table-responsive\\\">\\r\\n\\r\\n                            <ag-grid-angular style=\\\"width: 100%; height:500px\\\" class=\\\"ag-theme-balham\\\"\\r\\n                                [rowData]=\\\"rowData\\\" [columnDefs]=\\\"columnDefs\\\" [pagination]=\\\"true\\\"\\r\\n                                [paginationPageSize]='100'>\\r\\n                            </ag-grid-angular>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1YWxpdHkvdmlldy1xdWFsaXR5L3ZpZXctcXVhbGl0eS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Quality } from '../../../@theme/model/quality-class';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PermissionService } from '../../../@theme/services/permission.service';\r\nimport { Router } from '@angular/router';\r\nimport { QualityService } from '../../../@theme/services/quality.service';\r\nimport { PrintService } from '../../../@theme/services/print.service';\r\nimport { QzTrayService } from '../../../@theme/services/qz-tray.service';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ngx-view-quality',\r\n  templateUrl: './view-quality.component.html',\r\n  styleUrls: ['./view-quality.component.scss']\r\n})\r\nexport class ViewQualityComponent implements OnInit, OnDestroy {\r\n\r\n  columnDefs = [\r\n    { headerName: 'Actions', field: 'entry_id', width: 100 },\r\n    { headerName: 'Quality Id', field: 'quality_id', sortable: true, filter: 'agNumberColumnFilter' },\r\n    { headerName: 'Quality Name', field: 'quality_name', sortable: true, filter: 'agDateColumnFilter' },\r\n    { headerName: 'Quality Type', field: 'quality_type', sortable: true, filter: true },\r\n    { headerName: 'Quality Sub Type', field: 'quality_sub_type', sortable: true, filter: true },\r\n    { headerName: 'Party Name', field: 'party_name', sortable: true, filter: true },\r\n  ];\r\n  addQualityPermission = 0;\r\n  rowData: any;\r\n  settings = {\r\n    actions: false,\r\n    hideSubHeader: true,\r\n    pagination: true,\r\n    columns: {\r\n      quality_id: {\r\n        title: 'Quality Id',\r\n        filter: false,\r\n      },\r\n      quality_name: {\r\n        title: 'Quality Name',\r\n        filter: false,\r\n      },\r\n      quality_type: {\r\n        title: 'Quality Type',\r\n        filter: false,\r\n      },\r\n      quality_sub_type: {\r\n        title: 'Quality Sub Type',\r\n        filter: false,\r\n      },\r\n      party_name: {\r\n        title: 'Party Name',\r\n        filter: false,\r\n      },\r\n      entry_id: {\r\n        title: 'Action',\r\n        filter: false,\r\n        type: 'custom',\r\n        sort: false,\r\n        renderComponent: MyLinkRendererComponent,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.save.subscribe(row => {\r\n            if (row) {\r\n              this.getQualityData();\r\n            }\r\n          });\r\n        }\r\n      }\r\n    },\r\n    pager: {\r\n      perPage: 2\r\n    }\r\n  };\r\n\r\n  qualityList: Quality[] = [];\r\n  source: LocalDataSource;\r\n  currentUser$: Subscription;\r\n  currentUserPermission = [];\r\n  currentUser;\r\n  currentUserId: any;\r\n  viewAllDataPermission: any = false;\r\n  viewOwnDataPermission: any = false;\r\n  viewGroupDataPermission = false;\r\n  radioSelected: any = 1;\r\n  constructor(private toasterService: ToastrService, private _http: HttpClient, private permissionService: PermissionService,\r\n    private router: Router, private qualityService: QualityService, public printService: PrintService, private qzService: QzTrayService,\r\n    private authService: AuthService) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.currentUserPermission = ele.user_permission;\r\n      }\r\n    });\r\n    this.setColumns();\r\n\r\n  }\r\n  ngOnInit() {\r\n    if (this.currentUserPermission.length) {\r\n      this.currentUserPermission.forEach(ele => {\r\n        if (ele.form_name === 'Quality') {\r\n          // this.addUserPermission = ele.can_add;\r\n          this.viewAllDataPermission = ele.can_view_all;\r\n          this.viewGroupDataPermission = ele.can_view_group;\r\n          this.viewOwnDataPermission = ele.can_view;\r\n          this.addQualityPermission = 1;\r\n        }\r\n      });\r\n    } this.getQualityData();\r\n  }\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n  setColumns() {\r\n    this.columnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'entry_id') {\r\n        column.cellRendererFramework = MyLinkRendererComponent;\r\n        column.cellRendererParams = {\r\n          inRouterLink: '/pages/quality/edit-quality/',\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddQuality() {\r\n    if (this.addQualityPermission) {\r\n      this.router.navigate(['/pages/quality/add-quality']);\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to add quality. If you want to add quality ask admin for permission.');\r\n\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n  onPrintInvoice(data) {\r\n    const invoiceIds = ['101', '102'];\r\n    this.printService\r\n      .printDocument('invoice', invoiceIds, data);\r\n  }\r\n  getQualityData(value?): any {\r\n    let body = {\r\n      created_by: null,\r\n      user_head_id: null\r\n    };\r\n    if (value) {\r\n      this.radioSelected = value;\r\n    }\r\n    if (this.viewOwnDataPermission && this.radioSelected == 1) {\r\n      body.created_by = this.currentUserId;\r\n    }\r\n    if (this.viewGroupDataPermission && this.radioSelected == 2) {\r\n      body.created_by = this.currentUserId;\r\n      body.user_head_id = this.currentUser.user_head_id;\r\n    }\r\n    if (this.viewAllDataPermission && this.radioSelected == 3) {\r\n      body.created_by = null;\r\n      body.user_head_id = null;\r\n    }\r\n    this.qualityService.getAllQualityData(body).subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.rowData = data[0].data;\r\n        this.qualityList = data[0].data;\r\n        this.source = new LocalDataSource(this.qualityList);\r\n      } else\r\n        this.toasterService.error(data[0].message)\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\"  style=\"color:#4ca6ff\" (click)=\"editQuality()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteQuality()\"></i>`,\r\n  styleUrls: ['./view-quality.component.scss']\r\n})\r\n\r\nexport class MyLinkRendererComponent implements AgRendererComponent {\r\n  params: any;\r\n  editQualityPermission = 0;\r\n  deleteQualityPermission = 0;\r\n  currentUser$: Subscription;\r\n  currentUserPermission = [];\r\n  currentUser;\r\n\r\n  constructor(private router: Router, private modalService: NgbModal, private qualityService: QualityService,\r\n    private toasterService: ToastrService, private permissionService: PermissionService, private authService: AuthService) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserPermission = ele.user_permission;\r\n      }\r\n    });\r\n  }\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.currentUserPermission.forEach(ele => {\r\n      if (ele.form_name === 'Quality') {\r\n        if (this.params.action.radioSelected == 1) {\r\n          this.editQualityPermission = ele.can_edit;\r\n          this.deleteQualityPermission = ele.can_delete;\r\n        } else if (this.params.action.radioSelected == 2) {\r\n          this.editQualityPermission = ele.can_edit_group;\r\n          this.deleteQualityPermission = ele.can_delete_group;\r\n        } else if (this.params.action.radioSelected == 3) {\r\n          this.editQualityPermission = ele.can_edit_all;\r\n          this.deleteQualityPermission = ele.can_delete_all;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n  editQuality() {\r\n    if (this.editQualityPermission) {\r\n      this.router.navigate([this.params.inRouterLink + this.params.value]);\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to edit quality. If you want to edit quality ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n  onDeleteQuality() {\r\n    if (this.deleteQualityPermission) {\r\n      const dialogRef = this.modalService.open(ConfirmDialogComponent);\r\n      dialogRef.componentInstance.message = 'Are you sure you want to delete quality ?';\r\n      dialogRef.componentInstance.titleFrom = 'Delete Quality'\r\n      dialogRef.result.then((result: any) => {\r\n        if (result) {\r\n          const id = this.params.value;\r\n          this.qualityService.deleteQualityById(id).subscribe(data => {\r\n            if (!data[0].error) {\r\n              this.params.action.getQualityData();\r\n              this.toasterService.success(data[0].message);\r\n            } else {\r\n              this.toasterService.error(data[0].message);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to delete quality. If you want to delete quality ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n}"],"sourceRoot":""}