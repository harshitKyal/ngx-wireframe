{"version":3,"sources":["webpack:///./src/app/@theme/model/bill-class.ts","webpack:///./src/app/@theme/services/bill-in.service.ts","webpack:///./src/app/@theme/services/party.service.ts","webpack:///./src/app/@theme/services/quality.service.ts","webpack:///./src/app/pages/bill-in/add-edit-bill-in/add-edit-bill-in.component.html","webpack:///./src/app/pages/bill-in/add-edit-bill-in/add-edit-bill-in.component.scss","webpack:///./src/app/pages/bill-in/add-edit-bill-in/add-edit-bill-in.component.ts"],"names":[],"mappings":"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","file":"default~app-pages-pages-module~bill-in-bill-in-module~supplier-supplier-module.js","sourcesContent":["export class Bill {\r\n    entry_id: any;\r\n    stock_id: any;\r\n    stock_in_type: any;\r\n    transfer_challan_no: any;\r\n    party_name: any;\r\n    date: any;\r\n    bill_no: any;\r\n    chl_no: any;\r\n    bill_date: any;\r\n    chl_date: any;\r\n    batch_no: any;\r\n    remark: any;\r\n    bill_id: any;\r\n    bill_record: BillRecord[];\r\n    record_count: any;\r\n    created_date: any;\r\n    updated_date: any;\r\n    created_by: any;\r\n    updated_by: any;\r\n}\r\n\r\nexport class BillRecord {\r\n    index: any;\r\n    entry_id: any;\r\n    contol_id: any;\r\n    gr: any;\r\n    quality_entry_id: any;\r\n    quality_name: any;\r\n    quality_type: any;\r\n    mtr: any;\r\n    wt: any;\r\n    no_of_cones: any;\r\n    no_of_boxes: any;\r\n    created_date: any;\r\n    updated_date: any;\r\n    created_by: any;\r\n    updated_by: any;\r\n}","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BillInService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  getAllBills(billReqObj){\r\n    return this.apiService.apiCaller('post', '/stockList',billReqObj);\r\n  }\r\n\r\n  addBill(bill) {\r\n    return this.apiService.apiCaller('post', '/addStock',bill);\r\n  }\r\n\r\n  getBillById(id) {\r\n    return this.apiService.apiCaller('get', '/getStockById/' + id);\r\n  }\r\n\r\n  updateBill(bill) {\r\n    return this.apiService.apiCaller('post', '/updateStock', bill);\r\n  }\r\n\r\n  deleteBillById(id) {\r\n    return this.apiService.apiCaller('get', '/deleteStock/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Party } from '../model/party-class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PartyService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  getPartyList(obj) {\r\n    return this.apiService.apiCaller('post', '/partyData', obj);\r\n  }\r\n  updateParty(party: Party) {\r\n    return this.apiService.apiCaller('post', '/updateParty', party);\r\n  }\r\n  addParty(party: Party) {\r\n    return this.apiService.apiCaller('post', '/addParty', party);\r\n  }\r\n  deleteParty(id) {\r\n    return this.apiService.apiCaller('get', '/deleteParty/' + id);\r\n  }\r\n  getPartyById(id) {\r\n    return this.apiService.apiCaller('get', '/getPartyById/' + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { id } from '@swimlane/ngx-charts/release/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QualityService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  getAllQualityData(data?) {\r\n    return this.apiService.apiCaller('post', '/qualityData', data);\r\n  }\r\n\r\n  addQuality(quality) {\r\n    return this.apiService.apiCaller('post', '/addQuality', quality);\r\n  }\r\n\r\n  getQualityById(id) {\r\n    return this.apiService.apiCaller('get', '/getQualityDataById/' + id);\r\n  }\r\n\r\n  getTypeList() {\r\n    return this.apiService.apiCaller('get', '/qualityTypeList');\r\n  }\r\n\r\n  getSubTypeListByType(type) {\r\n    return this.apiService.apiCaller('get', '/qualitySubTypeList/' + type);\r\n  }\r\n\r\n  updateQuality(quality) {\r\n    return this.apiService.apiCaller('post', '/updateQuality', quality);\r\n  }\r\n\r\n  deleteQualityById(id) {\r\n    return this.apiService.apiCaller('get', '/qualityData/' + id);\r\n  }\r\n}\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>{{topHeader}}\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form #vform=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Stock Id</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.stock_id\\\" name=\\\"stockId\\\" #StockId=\\\"ngModel\\\"\\r\\n              required />\\r\\n            <div *ngIf=\\\"StockId.invalid && (StockId.dirty || StockId.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"StockId.errors && StockId.errors.required\\\">\\r\\n                Stock Id is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Stock In Type</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.stock_in_type\\\" name=\\\"stockType\\\"\\r\\n              #StockType=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"StockType.invalid && (StockType.dirty || StockType.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"StockType.errors && StockType.errors.required\\\">\\r\\n                Stock In Type is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Party Name</label>\\r\\n            <!-- pattern -->\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.party_name\\\" name=\\\"partyname\\\" #party=\\\"ngModel\\\">\\r\\n              <option disabled value=\\\"\\\">Select Party Name\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let party of partyList\\\" [value]=\\\"party.party_name\\\">{{party.party_name}}</option>\\r\\n            </select>\\r\\n            <!-- <div *ngIf=\\\"party.invalid && (party.dirty || party.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"party.errors && party.errors.required\\\">\\r\\n                    Party Name is required.\\r\\n                  </div>\\r\\n                </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Transfer Challan No.</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.transfer_challan_no\\\" name=\\\"transfer\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <button style=\\\"margin-top: 32px;\\\" class=\\\"btn btn-primary btn-raised\\\">Transfer</button>\\r\\n        </div> -->\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Bill No.</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.bill_no\\\" name=\\\"bill\\\" #Bill=\\\"ngModel\\\"\\r\\n              required />\\r\\n            <div *ngIf=\\\"Bill.invalid && (Bill.dirty || Bill.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"Bill.errors && Bill.errors.required\\\">\\r\\n                Bill No. is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Bill Date</label>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.bill_date\\\" name=\\\"billdate\\\"\\r\\n              #BillDate=\\\"ngModel\\\" required data-trigger=\\\"hover\\\" data-placement=\\\"top\\\" data-title=\\\"Date Opened\\\"\\r\\n              data-toggle=\\\"tooltip\\\" />\\r\\n            <div *ngIf=\\\"BillDate.invalid && (BillDate.dirty || BillDate.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"BillDate.errors && BillDate.errors.required\\\">\\r\\n                Bill Date is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Chl No.</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.chl_no\\\" name=\\\"chl\\\" #Chl=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"Chl.invalid && (Chl.dirty || Chl.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"Chl.errors && Chl.errors.required\\\">\\r\\n                Challan No. is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Chl Date</label>\\r\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.chl_date\\\" name=\\\"chldate\\\"\\r\\n              data-toggle=\\\"tooltip\\\" #ChlDate=\\\"ngModel\\\" data-trigger=\\\"hover\\\" data-placement=\\\"top\\\"\\r\\n              data-title=\\\"Date Opened\\\" required>\\r\\n            <div *ngIf=\\\"ChlDate.invalid && (ChlDate.dirty || ChlDate.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"ChlDate.errors && ChlDate.errors.required\\\">\\r\\n                Challan Date is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Batch</label>\\r\\n            <!-- pattern -->\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.batch_no\\\" name=\\\"batchs\\\" #Batch=\\\"ngModel\\\"\\r\\n              required />\\r\\n            <div *ngIf=\\\"Batch.invalid && (Batch.dirty || Batch.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"Batch.errors && Batch.errors.required\\\">\\r\\n                Batch is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Remark</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"billModal.remark\\\" name=\\\"remark\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n      <div class=\\\"row table table-responsive\\\" *ngIf=\\\"billRecord.length\\\">\\r\\n        <ag-grid-angular style=\\\"width: 100%; height:300px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowData\\\"\\r\\n          [columnDefs]=\\\"columnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'>\\r\\n        </ag-grid-angular>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <form #sform=\\\"ngForm\\\">\\r\\n          <div class=\\\"row col-md-12\\\">\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Gr</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.gr\\\" (keypress)=\\\"numberOnly($event)\\\" digits\\r\\n                  name=\\\"Gr\\\" #GR=\\\"ngModel\\\" required />\\r\\n                <div *ngIf=\\\"GR.invalid && (GR.dirty || GR.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"GR.errors && GR.errors.required\\\">\\r\\n                    Gr is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Quality Id</label>\\r\\n                <!-- pattern -->\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"record.quality_entry_id\\\" name=\\\"quality_id\\\" #quality=\\\"ngModel\\\"\\r\\n                  (change)=\\\"onQualitySelect($event.target.value)\\\" required>\\r\\n                  <option disabled value=\\\"\\\">Select Quality Id\\r\\n                  </option>\\r\\n                  <option *ngFor=\\\"let quality of qualityList\\\" [value]=\\\"quality.entry_id\\\">{{quality.quality_id}}\\r\\n                  </option>\\r\\n                </select>\\r\\n                <div *ngIf=\\\"quality.invalid && (quality.dirty || quality.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"quality.errors && quality.errors.required\\\">\\r\\n                    Quality Id is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Quality Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.quality_name\\\" name=\\\"qualityname\\\"\\r\\n                  #qname=\\\"ngModel\\\" required />\\r\\n                <div *ngIf=\\\"qname.invalid && (qname.dirty || qname.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"qname.errors && qname.errors.required\\\">\\r\\n                    Quality Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Quality Type</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.quality_type\\\" name=\\\"type\\\" #qtype=\\\"ngModel\\\"\\r\\n                  required />\\r\\n                <div *ngIf=\\\"qtype.invalid && (qtype.dirty || qtype.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"qtype.errors && qtype.errors.required\\\">\\r\\n                    Quality Type is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row col-md-12\\\">\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Mtr</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.mtr\\\" name=\\\"Mtr\\\"\\r\\n                  (keypress)=\\\"numberOnly($event)\\\" digits />\\r\\n                <!-- <div *ngIf=\\\"GR.invalid && (GR.dirty || GR.touched)\\\" class=\\\"errors\\\">\\r\\n                    <div *ngIf=\\\"GR.errors && GR.errors.required\\\">\\r\\n                      Gr is required.\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Weight</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.wt\\\" name=\\\"Wt\\\" #weight=\\\"ngModel\\\"\\r\\n                  (keypress)=\\\"numberOnly($event)\\\" digits required />\\r\\n                <div *ngIf=\\\"weight.invalid && (weight.dirty || weight.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"weight.errors && weight.errors.required\\\">\\r\\n                    Weight is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>No. of Cones/ Taka</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.no_of_cones\\\" name=\\\"noOfTaka\\\" #taka=\\\"ngModel\\\"\\r\\n                  (keypress)=\\\"numberOnly($event)\\\" digits required />\\r\\n                <div *ngIf=\\\"taka.invalid && (taka.dirty || taka.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"taka.errors && taka.errors.required\\\">\\r\\n                    No. of Cones/ Taka is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>No. of Boxes</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.no_of_boxes\\\" (keypress)=\\\"numberOnly($event)\\\"\\r\\n                  digits name=\\\"noOfBox\\\" #boxes=\\\"ngModel\\\" />\\r\\n                <!-- <div *ngIf=\\\"qtype.invalid && (qtype.dirty || qtype.touched)\\\" class=\\\"errors\\\">\\r\\n                    <div *ngIf=\\\"qtype.errors && qtype.errors.required\\\">\\r\\n                      Quality Type is required.\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <button [disabled]=\\\"sform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton (click)=\\\"onAddRecord(sform)\\\">Add\\r\\n                Record</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"box-footer\\\">\\r\\n        <button [disabled]=\\\"vform.invalid\\\" nbButton (click)=\\\"onCustomFormSubmit(vform)\\\">{{subBtnName}}</button>\\r\\n        &nbsp;\\r\\n        <button nbButton type=\\\"reset\\\" routerLink='/pages/bill/view-bill-list' id=\\\"Cancel\\\">Cancel</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\"","module.exports = \".errors {\\n  color: red;\\n  font-size: 13px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYmlsbC1pbi9hZGQtZWRpdC1iaWxsLWluL0M6XFxVc2Vyc1xcVmFydW5cXERlc2t0b3BcXG5cXG5neC13aXJlZnJhbWUvc3JjXFxhcHBcXHBhZ2VzXFxiaWxsLWluXFxhZGQtZWRpdC1iaWxsLWluXFxhZGQtZWRpdC1iaWxsLWluLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVTtFQUNWLGdCQUFlLEVBQ2xCIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYmlsbC1pbi9hZGQtZWRpdC1iaWxsLWluL2FkZC1lZGl0LWJpbGwtaW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3JzIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Bill, BillRecord } from '../../../@theme/model/bill-class';\r\nimport { Party } from '../../../@theme/model/party-class';\r\nimport { Quality } from '../../../@theme/model/quality-class';\r\nimport { BillInService } from '../../../@theme/services/bill-in.service';\r\nimport { PartyService } from '../../../@theme/services/party.service';\r\nimport { QualityService } from '../../../@theme/services/quality.service';\r\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\r\nimport { ViewReqObj } from '../../../@theme/model/user-class';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-bill-in',\r\n  templateUrl: './add-edit-bill-in.component.html',\r\n  styleUrls: ['./add-edit-bill-in.component.scss']\r\n})\r\nexport class AddEditBillInComponent implements OnInit {\r\n\r\n  billModal: Bill;\r\n  id: any;\r\n  subBtnName = '';\r\n  topHeader = '';\r\n  viewFlag = false;\r\n  rowData: any;\r\n  partyList: Party[] = [];\r\n  billRecord: BillRecord[] = [];\r\n  record: BillRecord;\r\n  qualityList: Quality[] = [];\r\n  qualityViewReqObj = new ViewReqObj();\r\n  columnDefs = [\r\n    { headerName: 'Actions', field: 'index' },\r\n    { headerName: 'Gr', field: 'gr' },\r\n    { headerName: 'Quality Id', field: 'quality_entry_id' },\r\n    { headerName: 'Quality Name', field: 'quality_name' },\r\n    { headerName: 'Quality Type', field: 'quality_type' },\r\n    { headerName: 'Mtr', field: 'mtr' },\r\n    { headerName: 'Wt', field: 'wt' },\r\n    { headerName: 'No. of Cones/Taka', field: 'no_of_cones' },\r\n    { headerName: 'No. of Boxes', field: 'no_of_boxes' },\r\n\r\n  ];\r\n  partyReqObj = new ViewReqObj();\r\n  constructor(private toasterService: ToastrService, private route: ActivatedRoute, private partyService: PartyService,\r\n    private router: Router, private billService: BillInService, private qualityService: QualityService) {\r\n    this.billModal = new Bill();\r\n    this.record = new BillRecord();\r\n    this.setColumns();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getQuality();\r\n    // this.getPartyList();\r\n    this.onPageLoad();\r\n  }\r\n\r\n  setColumns() {\r\n    this.columnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'index') {\r\n        column.cellRendererFramework = CustomRendererStockRecordComponent;\r\n        column.cellRendererParams = {\r\n          // inRouterLink: '/user/edit-user/',\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  getQuality() {\r\n    this.qualityService.getAllQualityData(this.qualityViewReqObj).subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.qualityList = data[0].data;\r\n      }\r\n    })\r\n  }\r\n\r\n  onQualitySelect(value) {\r\n    let i = this.qualityList.findIndex(v => v.entry_id == value);\r\n    this.record.quality_name = this.qualityList[i].quality_name;\r\n    this.record.quality_type = this.qualityList[i].quality_type;\r\n  }\r\n  getPartyList() {\r\n    this.partyReqObj = new ViewReqObj();\r\n\r\n    this.partyService.getPartyList(this.partyReqObj).subscribe(\r\n      data => {\r\n        if (!data[0].error) {\r\n          this.partyList = data[0].data;\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n  }\r\n\r\n  onPageLoad() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    if (this.id != null) {\r\n      if (this.id) {\r\n        this.subBtnName = 'Update';\r\n        this.topHeader = 'Edit Bill';\r\n\r\n      } else {\r\n        this.topHeader = 'Bill View';\r\n        this.viewFlag = true;\r\n      }\r\n      this.billService.getBillById(this.id).subscribe(\r\n        data => {\r\n          if (!data[0].error) {\r\n            this.billModal = data[0].data.stock[0];\r\n            this.billRecord = data[0].data.bill_record\r\n            this.billRecord.forEach((ele, index) => {\r\n              ele.index = index + 1;\r\n              let i = this.qualityList.findIndex(v => v.entry_id == ele.quality_entry_id);\r\n              ele.quality_name = this.qualityList[i].quality_name;\r\n              ele.quality_type = this.qualityList[i].quality_type;\r\n            })\r\n            this.rowData = [...this.billRecord]\r\n            this.billModal.bill_record = this.billRecord\r\n          } else {\r\n            this.toasterService.error(data.message);\r\n          }\r\n        }, error => {\r\n          this.toasterService.error('Server Error');\r\n        });\r\n    } else {\r\n      this.subBtnName = 'Save';\r\n      this.topHeader = 'Add Bill';\r\n    }\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  onAddRecord(form: NgForm) {\r\n    let flag = 0;\r\n    let j = 1;\r\n    if (this.billRecord.length) {\r\n      this.record.index = j;\r\n    } else {\r\n      this.record.index = this.billRecord.length + 1;\r\n    }\r\n    this.billRecord.forEach(ele => {\r\n      if (ele.gr == this.record.gr) {\r\n        ele = this.record\r\n        flag = 1;\r\n      }\r\n    });\r\n    if (!flag) {\r\n      this.billRecord.push(this.record);\r\n    }\r\n    this.rowData = [...this.billRecord];\r\n    this.record = new BillRecord();\r\n    form.resetForm();\r\n  }\r\n\r\n  onEditRecord(data) {\r\n    let i = this.billRecord.findIndex(v => v.index == data);\r\n    this.record = this.billRecord[i];\r\n  }\r\n\r\n  deleteRecord(data) {\r\n    let i = this.billRecord.findIndex(v => v.index == data);\r\n    this.billRecord.splice(i, 1);\r\n    this.rowData = [...this.billRecord]\r\n  }\r\n\r\n  onCustomFormSubmit(form: NgForm) {\r\n    this.billModal.bill_record = this.billRecord;\r\n    console.log('bill', this.billModal);\r\n    // for update\r\n    if (this.id) {\r\n      this.billService.updateBill(this.billModal).subscribe(data => {\r\n        console.log(data)\r\n        // data = data[0].data\r\n        // console.log(data)\r\n        if (!data[0].error) {\r\n          this.toasterService.success(data[0].message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/bill/view-bill-list']);\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    } else {\r\n      //for add\r\n      console.log(this.billModal)\r\n      this.billService.addBill(this.billModal).subscribe(data => {\r\n        data = data[0]\r\n        if (!data.error) {\r\n          this.toasterService.success(data.message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/bill/view-bill-list']);\r\n        } else {\r\n          this.toasterService.error(data.message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    }\r\n  }\r\n}\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\r\n  styleUrls: ['./add-edit-bill-in.component.scss']\r\n})\r\n\r\nexport class CustomRendererStockRecordComponent implements AgRendererComponent {\r\n  params: any;\r\n\r\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  editRecord() {\r\n    this.params.action.onEditRecord(this.params.value)\r\n  }\r\n  onDeleteRecord() {\r\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n    modalRef.componentInstance.titleFrom = 'Delete record ';\r\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          this.params.action.deleteRecord(this.params.value)\r\n        }\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":""}