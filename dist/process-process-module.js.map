{"version":3,"sources":["webpack:///./src/app/@theme/model/process-class.ts","webpack:///./src/app/pages/process/add-edit-function/add-edit-function.component.html","webpack:///./src/app/pages/process/add-edit-function/add-edit-function.component.scss","webpack:///./src/app/pages/process/add-edit-function/add-edit-function.component.ts","webpack:///./src/app/pages/process/add-edit-process/add-edit-process.component.html","webpack:///./src/app/pages/process/add-edit-process/add-edit-process.component.scss","webpack:///./src/app/pages/process/add-edit-process/add-edit-process.component.ts","webpack:///./src/app/pages/process/add-step/add-step.component.html","webpack:///./src/app/pages/process/add-step/add-step.component.scss","webpack:///./src/app/pages/process/add-step/add-step.component.ts","webpack:///./src/app/pages/process/dynamic-process/dynamic-process.component.html","webpack:///./src/app/pages/process/dynamic-process/dynamic-process.component.scss","webpack:///./src/app/pages/process/dynamic-process/dynamic-process.component.ts","webpack:///./src/app/pages/process/process-routing.module.ts","webpack:///./src/app/pages/process/process.component.html","webpack:///./src/app/pages/process/process.component.scss","webpack:///./src/app/pages/process/process.component.ts","webpack:///./src/app/pages/process/process.module.ts","webpack:///./src/app/pages/process/view-process/view-process.component.html","webpack:///./src/app/pages/process/view-process/view-process.component.scss","webpack:///./src/app/pages/process/view-process/view-process.component.ts"],"names":[],"mappings":"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","file":"process-process-module.js","sourcesContent":["export class Process {\r\n    process_name: any;\r\n    entry_id: any;\r\n    no_dying_bath: any;\r\n    dc_multiplying_fac: any;\r\n    created_by: any;\r\n    updated_by: any;\r\n    created_date: any;\r\n    updated_date: any;\r\n    user_head_id: any;\r\n    process_record: ProcessRecord[];\r\n}\r\nexport class ProcessRecord {\r\n    control_id: any;\r\n    type: any;\r\n    temperature: any;\r\n    plc_program_no: any;\r\n    hold_time: any;\r\n    rate_temperature: any;\r\n    process_sub_record: ProcessSubRecord[];\r\n}\r\n\r\nexport class ProcessSubRecord {\r\n    entry_id: any;\r\n    index: any;\r\n    item_id: any;\r\n    item_name: any;\r\n    concentration: any;\r\n    item_by: any;\r\n    supplier_name: any;\r\n    lr_or_fabric_wt: any;\r\n}\r\n\r\nexport class ProcessReq {\r\n    process_name: any;\r\n    entry_id: any;\r\n    no_dying_bath: any;\r\n    dc_multiplying_fac: any;\r\n    created_by: any;\r\n    user_head_id: any;\r\n    updated_by: any;\r\n    created_date: any;\r\n    updated_date: any;\r\n    process_req_record: ProcessReqRecord[];\r\n}\r\nexport class ProcessReqRecord {\r\n    control_id: any;\r\n    type: any;\r\n    temperature: any;\r\n    plc_program_no: any;\r\n    hold_time: any;\r\n    rate_temperature: any;\r\n    entry_id: any;\r\n    index: any;\r\n    item_id: any;\r\n    item_name: any;\r\n    concentration: any;\r\n    item_by: any;\r\n    supplier_name: any;\r\n}","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Function</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<form #functionForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 form-group\\\">\\r\\n        <label>Function Name</label>\\r\\n        <select class=\\\"form-control \\\" name=\\\"function\\\" [(ngModel)]=\\\"funcObj.func_value\\\" #func=\\\"ngModel\\\">\\r\\n          <option disabled value=\\\"\\\">Select Function</option>\\r\\n          <option *ngFor=\\\"let function of functionDropdown\\\" [value]=\\\"function.id\\\">{{function.name}}</option>\\r\\n        </select>\\r\\n        <div *ngIf=\\\"func.invalid && (func.dirty || func.touched)\\\" class=\\\"errors\\\">\\r\\n          <div *ngIf=\\\"func.errors && func.errors.required\\\">\\r\\n            Function Name is required.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Function Position</label>\\r\\n          <select [disabled]=\\\"editFunction\\\" class=\\\"form-control \\\" [(ngModel)]=\\\"funcObj.func_position\\\" name=\\\"stepNo\\\"\\r\\n            #position=\\\"ngModel\\\" required>\\r\\n            <option *ngFor=\\\"let p of positionValues\\\" [value]=\\\"p\\\">{{p}}</option>\\r\\n          </select>\\r\\n          <div *ngIf=\\\"position.invalid && (position.dirty || position.touched)\\\" class=\\\"errors\\\">\\r\\n            <div *ngIf=\\\"position.errors && position.errors.required\\\">\\r\\n              Function Position is required.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-5\\\" *ngIf=\\\"functionList.length\\\">\\r\\n        <h5>Current Functions:</h5>\\r\\n        <div *ngFor=\\\"let i of functionList;let z=index\\\">\\r\\n          <span>{{z+1}}.</span>&nbsp;<span>{{i.func_name}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"funcObj.func_value==='pump'\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Pump Speed(%)</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"pumpObj.pump_speed\\\" name=\\\"pumpspeed\\\" #Speed=\\\"ngModel\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"funcObj.func_value==='water'\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Control Type</label>\\r\\n            <nb-radio-group (change)=\\\"onWaterTypeChange()\\\" fieldSize=\\\"small\\\" class=\\\"form-control inline-block\\\"\\r\\n              name=\\\"watertype\\\" [(ngModel)]=\\\"waterObj.type\\\">\\r\\n              <nb-radio value=\\\"water\\\">Water</nb-radio>\\r\\n              <nb-radio value=\\\"drain\\\">Drain</nb-radio>\\r\\n            </nb-radio-group>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <span *ngIf=\\\"waterObj.type === 'water'\\\">IN</span> -->\\r\\n      <div *ngIf=\\\"waterObj.type === 'water'\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Water Type</label>\\r\\n            <nb-radio-group fieldSize=\\\"small\\\" class=\\\"form-control inline-block\\\" name=\\\"water\\\"\\r\\n              [(ngModel)]=\\\"waterObj.water_type\\\">\\r\\n              <nb-radio *ngFor=\\\"let w of waterList\\\" [value]=\\\"w.id\\\">{{w.name}}</nb-radio>\\r\\n            </nb-radio-group>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"waterObj.type === 'water'\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Fill By Fabric Ratio</label>\\r\\n            <input nbInput fullWidth type=\\\"number\\\" fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              (keypress)=\\\"numberOnly($event)\\\" max='10' [(ngModel)]=\\\"waterObj.fabric_ratio\\\" name=\\\"fabricRatio\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <nb-checkbox style=\\\"margin-top:13px\\\" name=\\\"jet\\\" [(ngModel)]=\\\"waterObj.jet_level\\\">Jet Level</nb-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <!-- <span *ngIf=\\\"waterObj.type !== 'water'\\\">DRAIN</span> -->\\r\\n      <div *ngIf=\\\"waterObj.type !== 'water'\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Drain Type</label>\\r\\n            <nb-radio-group fieldSize=\\\"small\\\" name=\\\"water_drain\\\" class=\\\"form-control inline-block\\\"\\r\\n              [(ngModel)]=\\\"waterObj.drain_type\\\">\\r\\n              <nb-radio *ngFor=\\\"let d of drainTypeList\\\" [value]=\\\"d.id\\\">{{d.name}}</nb-radio>\\r\\n            </nb-radio-group>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"funcObj.func_value==='temp'\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>S V (Set Value)(C)</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              (keypress)=\\\"numberOnly($event)\\\" (change)=\\\"onSetValueChange()\\\" [(ngModel)]=\\\"tempObj.set_value\\\"\\r\\n              name=\\\"setValue\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Rate of Rise (C/minute)</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"tempObj.rate_of_rise\\\" name=\\\"rateRise\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Hold Time</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"tempObj.hold_time\\\" name=\\\"holdTime\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <nb-checkbox name=\\\"pressure\\\" [(ngModel)]=\\\"tempObj.pressure\\\">Pressure (Above 80 C)</nb-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"funcObj.func_value==='dosing'\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Fill Side Tank </label>\\r\\n            <select class=\\\"form-control\\\" name=\\\"fill\\\" [(ngModel)]=\\\"dosingObj.fill_type\\\">\\r\\n              <option *ngFor=\\\"let fill of fillList\\\" [value]=\\\"fill.id\\\">{{fill.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Fill Side Tank Level</label>\\r\\n            <select class=\\\"form-control \\\" name=\\\"filllevel\\\" [(ngModel)]=\\\"dosingObj.dosing_percentage\\\">\\r\\n              <option *ngFor=\\\"let level of fillLevelList\\\" [value]=\\\"level.id\\\">{{level.name}}</option>\\r\\n            </select>\\r\\n            <!-- <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              [(ngModel)]=\\\"dosingObj.dosing_percentage\\\" name=\\\"dosingpercentage\\\" /> -->\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      (Will dose after Operator Confirmation)\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <nb-checkbox name=\\\"dose\\\" [(ngModel)]=\\\"dosingObj.have_dose\\\"> dose at Temp\\r\\n              (C) <input fieldSize=\\\"small\\\" class=\\\"col-md-3\\\" nbInput name=\\\"tempDosing\\\"\\r\\n                [(ngModel)]=\\\"dosingObj.dose_at_temp\\\"></nb-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\" *ngIf=\\\"dosingObj.dose_type !== 'color'\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <nb-checkbox name=\\\"doseHeat\\\" [(ngModel)]=\\\"dosingObj.dose_while_heating\\\"> Dose while Heating\\r\\n            </nb-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Dose Type</label>\\r\\n            <nb-radio-group fieldSize=\\\"small\\\" class=\\\"form-control inline-block\\\" name=\\\"dosetype\\\"\\r\\n              [(ngModel)]=\\\"dosingObj.dose_type\\\" (change)=\\\"onDoseTypeChange()\\\">\\r\\n              <nb-radio value=\\\"chemical\\\">Chemical</nb-radio>\\r\\n              <nb-radio value=\\\"color\\\">Color</nb-radio>\\r\\n            </nb-radio-group>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"dosingObj.dose_type != undefined && dosingObj.dose_type === 'chemical'\\\">\\r\\n        <div class=\\\"row col-md-12 table table-responsive\\\">\\r\\n          <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowChemicalData\\\"\\r\\n            [columnDefs]=\\\"chemicalcolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\r\\n            *ngIf=\\\"chemicalSubRecordArray.length\\\">\\r\\n          </ag-grid-angular>\\r\\n        </div>\\r\\n        <form #chemicalform=\\\"ngForm\\\" class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"row col-md-12\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Item Name</label>\\r\\n                <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                  placeholder=\\\"Select Item Name\\\" name=\\\"chemicalitemName\\\" autocomplete=\\\"off\\\"\\r\\n                  [(ngModel)]=\\\"chemicalSubRecord.item_name\\\" (click)=\\\"HideShowSForm()\\\" required\\r\\n                  #chemicalItemName=\\\"ngModel\\\">\\r\\n                <div *ngIf=\\\"flagDivSForm\\\" class=\\\"dropdown\\\">\\r\\n                  <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowSForm()\\\" class=\\\"float-right\\\">[X]</a>\\r\\n                  <table class=\\\"table table-bordered pointer table-responsive\\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th>Item Name</th>\\r\\n                        <th>Supplier Name</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'chemical')\\\"\\r\\n                        class=\\\"pointer\\\">\\r\\n                        <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\r\\n                        <td>{{item.item_name}}</td>\\r\\n                        <td>{{item.supplier_name}}</td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"chemicalItemName.invalid && (chemicalItemName.dirty || chemicalItemName.touched)\\\"\\r\\n                  class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"chemicalItemName.errors && chemicalItemName.errors.required\\\">\\r\\n                    Item Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Supplier Name</label>\\r\\n                <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                  disabled [(ngModel)]=\\\"chemicalSubRecord.supplier_name\\\" name=\\\"chemicalSuppName\\\"\\r\\n                  #ChemicalSuppName=\\\"ngModel\\\" required />\\r\\n                <div *ngIf=\\\"ChemicalSuppName.invalid && (ChemicalSuppName.dirty || ChemicalSuppName.touched)\\\"\\r\\n                  class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"ChemicalSuppName.errors && ChemicalSuppName.errors.required\\\">\\r\\n                    Supplier Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row col-md-12\\\">\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Concentration</label>\\r\\n                <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" (keypress)=\\\"numberOnly($event)\\\"\\r\\n                  class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"chemicalSubRecord.concentration\\\"\\r\\n                  name=\\\"chemicalConcentration\\\" #ChemicalConcentration=\\\"ngModel\\\" required />\\r\\n                <div\\r\\n                  *ngIf=\\\"ChemicalConcentration.invalid && (ChemicalConcentration.dirty || ChemicalConcentration.touched)\\\"\\r\\n                  class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"ChemicalConcentration.errors && ChemicalConcentration.errors.required\\\">\\r\\n                    Concentration is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-5\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>LR/F.WT</label>\\r\\n                <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                  [(ngModel)]=\\\"chemicalSubRecord.lr_or_fabric_wt\\\" name=\\\"chemicalBy\\\" #ChemicalBy=\\\"ngModel\\\" required />\\r\\n                <div *ngIf=\\\"ChemicalBy.invalid && (ChemicalBy.dirty || ChemicalBy.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"ChemicalBy.errors && ChemicalBy.errors.required\\\">\\r\\n                    LR/F.WT is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <button size=\\\"small\\\" [disabled]=\\\"chemicalform.invalid\\\" style=\\\"margin-top: 21px;\\\" nbButton\\r\\n                (click)=\\\"onAddChemicalRecord(chemicalform)\\\">Add</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"funcObj.func_value==='operator'\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Operator Message </label>\\r\\n            <select class=\\\"form-control\\\" name=\\\"fill\\\" [(ngModel)]=\\\"operatorObj.operator_code\\\">\\r\\n              <option *ngFor=\\\"let message of operatorMessageList\\\" [value]=\\\"message.id\\\">{{message.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Start at Temp</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              [(ngModel)]=\\\"operatorObj.start_at_temp\\\" name=\\\"startat\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"operatorObj.operator_code == '4'\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Custom Message</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              [(ngModel)]=\\\"operatorObj.operator_message\\\" name=\\\"operatorMsg\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button nbButton [disabled]=\\\"functionForm.invalid\\\" (click)=\\\"onSubmit()\\\">{{submitButton}}</button>\\r\\n    <button nbButton (click)=\\\"activeModal.close(false)\\\">Cancel</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \".inline-block {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex; }\\n\\n.select.btn-mini {\\n  height: auto !important;\\n  line-height: 14px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvY2Vzcy9hZGQtZWRpdC1mdW5jdGlvbi9DOlxcVXNlcnNcXFBDXFxEZXNrdG9wXFxnZmxcXGdmbC1mcm9udC1lbmRcXG5neC13aXJlZnJhbWUvc3JjXFxhcHBcXHBhZ2VzXFxwcm9jZXNzXFxhZGQtZWRpdC1mdW5jdGlvblxcYWRkLWVkaXQtZnVuY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw0QkFBb0I7RUFBcEIsNEJBQW9CO0VBQXBCLHFCQUFvQixFQUN2Qjs7QUFFRDtFQUNJLHdCQUF1QjtFQUN2Qiw2QkFBNEIsRUFDL0IiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcm9jZXNzL2FkZC1lZGl0LWZ1bmN0aW9uL2FkZC1lZGl0LWZ1bmN0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlubGluZS1ibG9jayB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxufVxyXG5cclxuLnNlbGVjdC5idG4tbWluaSB7XHJcbiAgICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxNHB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FunctionObj, PumpMotorFunctionObj, WaterDrainFunctionObj, TempFunctionObj, DosingFunctionObj, OperatorMessageObj, ChemicalReq } from '../../../@theme/model/process-planning-class';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\r\nimport { ProcessSubRecord } from '../../../@theme/model/process-class';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ColDef } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'ngx-add-edit-function',\r\n  templateUrl: './add-edit-function.component.html',\r\n  styleUrls: ['./add-edit-function.component.scss']\r\n})\r\nexport class AddEditFunctionComponent implements OnInit {\r\n  @Input() position;\r\n  @Input() functionList = [];\r\n  @Input() editFunction: any;\r\n  submitButton = 'Add';\r\n  positionValues = [];\r\n  funcObj = new FunctionObj();\r\n  pumpObj = new PumpMotorFunctionObj();\r\n  waterObj = new WaterDrainFunctionObj();\r\n  tempObj = new TempFunctionObj();\r\n  dosingObj = new DosingFunctionObj();\r\n  operatorObj = new OperatorMessageObj();\r\n  waterList = [{ 'id': 'water1', 'name': 'water1' }, { 'id': 'water2', 'name': 'water2' }];\r\n  drainTypeList = [{ 'id': 'Complete Drain (at 0 bar)', 'name': 'Complete Drain (at 0 bar)' }, { 'id': 'Pressurize Drain (at 1 bar)', 'name': 'Pressurize Drain (at 1 bar)' }];\r\n  fillList = [{ 'id': 'Post Fill Fresh Water', 'name': 'Post Fill Fresh Water' }, { 'id': 'Pre Fill Fresh Water', 'name': 'Pre Fill Fresh Water' }, { 'id': 'Post Fill Machine Water', 'name': 'Post Fill Machine Water' }, { 'id': 'Pre Fill Machine Water', 'name': 'Pre Fill Machine Water' }]\r\n  functionDropdown = [{ 'id': 'dosing', 'name': 'Dosing' }, { 'id': 'temp', 'name': 'Temperature Control' }, { 'id': 'pump', 'name': 'Pump Control' }, { 'id': 'water', 'name': 'Water Control' }, { 'id': 'operator', 'name': 'Operator Message' }];\r\n  fillLevelList = [{ 'id': 'Level 1', 'name': 'Level 1' }, { 'id': 'Level 2', 'name': 'Level 2' }];\r\n  operatorMessageList = [{ 'id': '1', 'name': 'Load Fabric' }, { 'id': '2', 'name': 'UnLoad Fabric' }, { 'id': '3', 'name': 'Close the Door' }, { 'id': '4', 'name': 'Custom Message' }]\r\n  chemicalSubRecordArray: ChemicalReq[] = [];\r\n  chemicalSubRecord: ChemicalReq;\r\n  rowChemicalData: any;\r\n  chemicalcolumnDefs = [\r\n    { headerName: 'Actions', field: 'index', width: 70 },\r\n    { headerName: 'Item Name', field: 'item_name', width: 90 },\r\n    { headerName: 'Concentration', field: 'concentration', width: 90 },\r\n    { headerName: 'LR/F_WT', field: 'lr_or_fabric_wt', width: 90 },\r\n    { headerName: 'Supplier Name', field: 'supplier_name', width: 90 },\r\n  ];\r\n  flagDivSForm = false;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {\r\n    this.chemicalSubRecord = new ChemicalReq();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.chemicalcolumnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'index') {\r\n        column.cellRendererFramework = CustomRendererChemicalRecordComponent;\r\n        column.cellRendererParams = {\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n    if (!this.editFunction) {\r\n      if (this.position > 0) {\r\n        this.funcObj.func_position = this.position;\r\n        for (let i = 1; i <= this.position; i++) {\r\n          this.positionValues.push(i);\r\n        }\r\n      }\r\n    } else {\r\n      this.submitButton = \"Update\";\r\n      if (this.position > 0) {\r\n        this.funcObj.func_position = this.position;\r\n        let index = this.functionList.findIndex(v => v.func_position == this.position);\r\n        if (index > -1) {\r\n          let ele = this.functionList[index];\r\n          console.log('ele.dos', ele.dosingFunction)\r\n          this.funcObj.func_name = ele.func_name;\r\n          this.funcObj.func_position = ele.func_position;\r\n          this.funcObj.func_value = ele.func_value;\r\n          this.dosingObj = ele.dosingFunction;\r\n          if (this.dosingObj.dosing_chemical.length) {\r\n            this.dosingObj.dosing_chemical.forEach((ele, index) => {\r\n              ele.index = index + 1;\r\n            });\r\n            this.chemicalSubRecordArray = this.dosingObj.dosing_chemical;\r\n            this.rowChemicalData = [...this.chemicalSubRecordArray];\r\n\r\n          }\r\n          this.waterObj = ele.waterDrainFunction;\r\n          this.tempObj = ele.tempFunction;\r\n          this.pumpObj = ele.pumpMotorFunction;\r\n          this.operatorObj = ele.operatorFunction;\r\n        }\r\n        for (let i = 1; i <= this.functionList.length; i++) {\r\n          this.positionValues.push(i);\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  onDoseTypeChange() {\r\n    if (this.dosingObj.dose_type == 'color') {\r\n      this.dosingObj.dose_while_heating = false;\r\n    }\r\n  }\r\n  onWaterTypeChange() {\r\n    if (this.waterObj.type == 'water') {\r\n      this.waterObj.drain_type = null;\r\n    } else {\r\n      this.waterObj.jet_level = 0;\r\n      this.waterObj.fabric_ratio = null;\r\n      this.waterObj.water_type = null;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    let i = this.functionDropdown.findIndex(v => v.id === this.funcObj.func_value);\r\n    if (i > -1) {\r\n      this.funcObj.func_name = this.functionDropdown[i].name;\r\n    } else {\r\n      this.funcObj.func_name = '';\r\n    }\r\n    if (this.funcObj.func_value === 'temp') {\r\n      this.funcObj.tempFunction = this.tempObj;\r\n    } else if (this.funcObj.func_value === 'water') {\r\n      this.funcObj.waterDrainFunction = this.waterObj;\r\n    } else if (this.funcObj.func_value === 'dosing') {\r\n      this.funcObj.dosingFunction = this.dosingObj;\r\n      console.log('chemical', this.chemicalSubRecordArray);\r\n      this.funcObj.dosingFunction.dosing_chemical = this.chemicalSubRecordArray;\r\n    } else if (this.funcObj.func_value === 'pump') {\r\n      this.funcObj.pumpMotorFunction = this.pumpObj;\r\n    } else if (this.funcObj.func_value === 'operator') {\r\n      let i = this.operatorMessageList.findIndex(v => v.id === this.operatorObj.operator_code);\r\n      if (i > -1 && i != 3) {\r\n        this.operatorObj.operator_message = this.operatorMessageList[i].name;\r\n      }\r\n      this.funcObj.operatorFunction = this.operatorObj;\r\n    }\r\n    this.activeModal.close(this.funcObj);\r\n  }\r\n  onSetValueChange() {\r\n    if (this.tempObj.set_value > 100) {\r\n      this.tempObj.pressure = true;\r\n    } else {\r\n      this.tempObj.pressure = false;\r\n    }\r\n  }\r\n  HideShowSForm() {\r\n    this.flagDivSForm = !this.flagDivSForm;\r\n  }\r\n  onAddChemicalRecord(form: NgForm) {\r\n    let flag = 0;\r\n    let j = 1;\r\n    if (!this.chemicalSubRecordArray.length) {\r\n      this.chemicalSubRecord.index = j;\r\n    } else if (this.chemicalSubRecord.index == undefined) {\r\n      this.chemicalSubRecord.index = this.chemicalSubRecordArray.length + 1;\r\n    }\r\n    this.chemicalSubRecordArray.forEach(ele => {\r\n      if (ele.index == this.chemicalSubRecord.index) {\r\n        ele = this.chemicalSubRecord\r\n        flag = 1;\r\n      }\r\n    });\r\n    if (!flag) {\r\n      this.chemicalSubRecordArray.push(this.chemicalSubRecord);\r\n    }\r\n    this.rowChemicalData = [...this.chemicalSubRecordArray];\r\n    this.chemicalSubRecord = new ChemicalReq();\r\n    form.resetForm();\r\n  }\r\n  onEditChemicalRecord(data) {\r\n    let i = this.chemicalSubRecordArray.findIndex(v => v.index == data);\r\n    this.chemicalSubRecord = this.chemicalSubRecordArray[i];\r\n  }\r\n\r\n  deleteChemicalRecord(data) {\r\n    let i = this.chemicalSubRecordArray.findIndex(v => v.index == data);\r\n    this.chemicalSubRecordArray.splice(i, 1);\r\n    this.rowChemicalData = [...this.chemicalSubRecordArray]\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && ((charCode < 46 || charCode > 57) || charCode == 47)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\r\n  styleUrls: ['./add-edit-function.component.scss']\r\n})\r\n\r\nexport class CustomRendererChemicalRecordComponent implements AgRendererComponent {\r\n  params: any;\r\n\r\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  editRecord() {\r\n    this.params.action.onEditChemicalRecord(this.params.value)\r\n  }\r\n  onDeleteRecord() {\r\n    this.params.action.deleteChemicalRecord(this.params.value)\r\n  }\r\n}","module.exports = \"<nb-card>\\r\\n  <nb-card-header>{{topHeader}}\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form #vform=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Process Name</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              [(ngModel)]=\\\"processModal.process_name\\\" name=\\\"processName\\\" #processname=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                Process Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>No. of Dying Bath</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"processModal.no_dying_bath\\\" name=\\\"dyingBath\\\"\\r\\n              #dyingbath=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\r\\n                No. of Dying Bath is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>DC Mulitplying Fac.</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"processModal.dc_multiplying_fac\\\" name=\\\"dc\\\" #Dc=\\\"ngModel\\\"\\r\\n              required />\\r\\n            <div *ngIf=\\\"Dc.invalid && (Dc.dirty || Dc.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"Dc.errors && Dc.errors.required\\\">\\r\\n                DC Mulitplying Fac is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row col-md-12\\\">\\r\\n\\r\\n        <nb-accordion>\\r\\n          <nb-accordion-item #item>\\r\\n            <nb-accordion-item-header>\\r\\n              SCOURING\\r\\n            </nb-accordion-item-header>\\r\\n            <nb-accordion-item-body>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Temperature</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"scouringRecord.temperature\\\" name=\\\"scouringTemp\\\"\\r\\n                      #ScouringTemp=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                Process Name is required.\\r\\n                              </div>\\r\\n                            </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Plc Program No.</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"scouringRecord.plc_program_no\\\"\\r\\n                      name=\\\"scouring_program_no\\\" #ScouringProgram=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\r\\n                                <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\r\\n                                  No. of Dying Bath is required.\\r\\n                                </div>\\r\\n                              </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Hold Time</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"scouringRecord.hold_time\\\" name=\\\"scouringTime\\\"\\r\\n                      #ScouringTime=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                Process Name is required.\\r\\n                              </div>\\r\\n                            </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Rate Temperature</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"scouringRecord.rate_temperature\\\"\\r\\n                      name=\\\"scouringRateTemp\\\" #ScouringRateTemp=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                Process Name is required.\\r\\n                              </div>\\r\\n                            </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row table table-responsive\\\">\\r\\n                <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowScouringData\\\"\\r\\n                  [columnDefs]=\\\"scouringcolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\r\\n                  *ngIf=\\\"scouringSubRecordArray.length\\\">\\r\\n                </ag-grid-angular>\\r\\n              </div>\\r\\n              <form #scouringform=\\\"ngForm\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Item Name</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" placeholder=\\\"Select Item Name\\\"\\r\\n                        name=\\\"scouringitemName\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"scouringSubRecord.item_name\\\"\\r\\n                        (click)=\\\"HideShowSForm()\\\" required #scouringItemName=\\\"ngModel\\\">\\r\\n                      <div *ngIf=\\\"flagDivSForm\\\" class=\\\"dropdown\\\">\\r\\n                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowSForm()\\\" class=\\\"float-right\\\">[X]</a>\\r\\n                        <table class=\\\"table table-bordered pointer table-responsive\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Item Name</th>\\r\\n                              <th>Supplier Name</th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'scouring')\\\"\\r\\n                              class=\\\"pointer\\\">\\r\\n                              <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\r\\n                              <td>{{item.item_name}}</td>\\r\\n                              <td>{{item.supplier_name}}</td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"scouringItemName.invalid && (scouringItemName.dirty || scouringItemName.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"scouringItemName.errors && scouringItemName.errors.required\\\">\\r\\n                          Item Name is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Concentration</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" (keypress)=\\\"numberOnly($event)\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"scouringSubRecord.concentration\\\"\\r\\n                        name=\\\"scouringConcentration\\\" #ScouringConcentration=\\\"ngModel\\\" required />\\r\\n                      <div\\r\\n                        *ngIf=\\\"ScouringConcentration.invalid && (ScouringConcentration.dirty || ScouringConcentration.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"ScouringConcentration.errors && ScouringConcentration.errors.required\\\">\\r\\n                          Concentration is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>By</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"scouringSubRecord.item_by\\\"\\r\\n                        name=\\\"scouringBy\\\" #ScouringBy=\\\"ngModel\\\" required />\\r\\n                      <div *ngIf=\\\"ScouringBy.invalid && (ScouringBy.dirty || ScouringBy.touched)\\\" class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"ScouringBy.errors && ScouringBy.errors.required\\\">\\r\\n                          By is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Supplier Name</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" disabled\\r\\n                        [(ngModel)]=\\\"scouringSubRecord.supplier_name\\\" name=\\\"scouringSuppName\\\"\\r\\n                        #ScouringSuppName=\\\"ngModel\\\" required />\\r\\n                      <div *ngIf=\\\"ScouringSuppName.invalid && (ScouringSuppName.dirty || ScouringSuppName.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"ScouringSuppName.errors && ScouringSuppName.errors.required\\\">\\r\\n                          Supplier Name is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <button size=\\\"small\\\" [disabled]=\\\"scouringform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton\\r\\n                      (click)=\\\"onAddScouringRecord(scouringform)\\\">Add</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </nb-accordion-item-body>\\r\\n          </nb-accordion-item>\\r\\n        </nb-accordion>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row col-md-12\\\">\\r\\n        <nb-accordion>\\r\\n          <nb-accordion-item #item>\\r\\n            <nb-accordion-item-header>\\r\\n              DYING\\r\\n            </nb-accordion-item-header>\\r\\n            <nb-accordion-item-body>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Temperature</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"dyingRecord.temperature\\\" name=\\\"dyingTemp\\\"\\r\\n                      #DyingTemp=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                  Process Name is required.\\r\\n                                </div>\\r\\n                              </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Plc Program No.</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"dyingRecord.plc_program_no\\\" name=\\\"dying_program_no\\\"\\r\\n                      #dyingProgram=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\r\\n                                  <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\r\\n                                    No. of Dying Bath is required.\\r\\n                                  </div>\\r\\n                                </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Hold Time</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"dyingRecord.hold_time\\\" name=\\\"dyingTime\\\"\\r\\n                      #DyingTime=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                  Process Name is required.\\r\\n                                </div>\\r\\n                              </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Rate Temperature</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"dyingRecord.rate_temperature\\\" name=\\\"dyingRateTemp\\\"\\r\\n                      #DyringRateTemp=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                  Process Name is required.\\r\\n                                </div>\\r\\n                              </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row table table-responsive\\\">\\r\\n                <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowDyingData\\\"\\r\\n                  [columnDefs]=\\\"dyingcolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\r\\n                  *ngIf=\\\"dyingSubRecordArray.length\\\">\\r\\n                </ag-grid-angular>\\r\\n              </div>\\r\\n              <form #dyingform=\\\"ngForm\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Item Name</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" placeholder=\\\"Select Item Name\\\"\\r\\n                        name=\\\"dyingitemName\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"dyingSubRecord.item_name\\\"\\r\\n                        (click)=\\\"HideShowDForm()\\\" required #dyingItemName=\\\"ngModel\\\">\\r\\n                      <div *ngIf=\\\"flagDivDForm\\\" class=\\\"dropdown\\\">\\r\\n                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowDForm()\\\" class=\\\"float-right\\\">[X]</a>\\r\\n                        <table class=\\\"table table-bordered pointer table-responsive\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Item Name</th>\\r\\n                              <th>Supplier Name</th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'dying')\\\"\\r\\n                              class=\\\"pointer\\\">\\r\\n                              <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\r\\n                              <td>{{item.item_name}}</td>\\r\\n                              <td>{{item.supplier_name}}</td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"dyingItemName.invalid && (dyingItemName.dirty || dyingItemName.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"dyingItemName.errors && dyingItemName.errors.required\\\">\\r\\n                          Item Name is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Concentration</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"dyingSubRecord.concentration\\\"\\r\\n                        (keypress)=\\\"numberOnly($event)\\\" name=\\\"dyingConcentration\\\" #DyingConcentration=\\\"ngModel\\\"\\r\\n                        required />\\r\\n                      <div\\r\\n                        *ngIf=\\\"DyingConcentration.invalid && (DyingConcentration.dirty || DyingConcentration.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"DyingConcentration.errors && DyingConcentration.errors.required\\\">\\r\\n                          Concentration is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>By</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"dyingSubRecord.item_by\\\"\\r\\n                        name=\\\"dyingBy\\\" #DyingBy=\\\"ngModel\\\" required />\\r\\n                      <div *ngIf=\\\"DyingBy.invalid && (DyingBy.dirty || DyingBy.touched)\\\" class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"DyingBy.errors && DyingBy.errors.required\\\">\\r\\n                          By is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Supplier Name</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" disabled\\r\\n                        [(ngModel)]=\\\"dyingSubRecord.supplier_name\\\" name=\\\"dyingSuppName\\\" #DyingSuppName=\\\"ngModel\\\"\\r\\n                        required />\\r\\n                      <div *ngIf=\\\"DyingSuppName.invalid && (DyingSuppName.dirty || DyingSuppName.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"DyingSuppName.errors && DyingSuppName.errors.required\\\">\\r\\n                          Supplier Name is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <button size=\\\"small\\\" [disabled]=\\\"dyingform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton\\r\\n                      (click)=\\\"onAddDyingRecord(dyingform)\\\">Add</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </nb-accordion-item-body>\\r\\n          </nb-accordion-item>\\r\\n        </nb-accordion>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row col-md-12\\\">\\r\\n        <nb-accordion>\\r\\n          <nb-accordion-item #item>\\r\\n            <nb-accordion-item-header>\\r\\n              RC\\r\\n            </nb-accordion-item-header>\\r\\n            <nb-accordion-item-body>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Temperature</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"rcRecord.temperature\\\" name=\\\"rcTemp\\\"\\r\\n                      #RcTemp=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                  Process Name is required.\\r\\n                                </div>\\r\\n                              </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Plc Program No.</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"rcRecord.plc_program_no\\\" name=\\\"rc_program_no\\\"\\r\\n                      #RcProgram=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\r\\n                                  <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\r\\n                                    No. of Dying Bath is required.\\r\\n                                  </div>\\r\\n                                </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Hold Time</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"rcRecord.hold_time\\\" name=\\\"rcTime\\\"\\r\\n                      #RcTime=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                  Process Name is required.\\r\\n                                </div>\\r\\n                              </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Rate Temperature</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"rcRecord.rate_temperature\\\" name=\\\"rcRateTemp\\\"\\r\\n                      #RcRateTemp=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                                <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                  Process Name is required.\\r\\n                                </div>\\r\\n                              </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row table table-responsive\\\">\\r\\n                <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowRCData\\\"\\r\\n                  [columnDefs]=\\\"rccolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\r\\n                  *ngIf=\\\"rcSubRecordArray.length\\\">\\r\\n                </ag-grid-angular>\\r\\n              </div>\\r\\n              <form #rcform=\\\"ngForm\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Item Name</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" placeholder=\\\"Select Item Name\\\" name=\\\"rcitemName\\\"\\r\\n                        autocomplete=\\\"off\\\" [(ngModel)]=\\\"rcSubRecord.item_name\\\" (click)=\\\"HideShowRForm()\\\" required\\r\\n                        #rcItemName=\\\"ngModel\\\">\\r\\n                      <div *ngIf=\\\"flagDivRForm\\\" class=\\\"dropdown\\\">\\r\\n                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowRForm()\\\" class=\\\"float-right\\\">[X]</a>\\r\\n                        <table class=\\\"table table-bordered pointer table-responsive\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Item Name</th>\\r\\n                              <th>Supplier Name</th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'rc')\\\"\\r\\n                              class=\\\"pointer\\\">\\r\\n                              <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\r\\n                              <td>{{item.item_name}}</td>\\r\\n                              <td>{{item.supplier_name}}</td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"rcItemName.invalid && (rcItemName.dirty || rcItemName.touched)\\\" class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"rcItemName.errors && rcItemName.errors.required\\\">\\r\\n                          Item Name is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Concentration</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" (keypress)=\\\"numberOnly($event)\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"rcSubRecord.concentration\\\"\\r\\n                        name=\\\"rcConcentration\\\" #RcConcentration=\\\"ngModel\\\" required />\\r\\n                      <div *ngIf=\\\"RcConcentration.invalid && (RcConcentration.dirty || RcConcentration.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"RcConcentration.errors && RcConcentration.errors.required\\\">\\r\\n                          Concentration is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>By</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"rcSubRecord.item_by\\\" name=\\\"rcBy\\\"\\r\\n                        #RcBy=\\\"ngModel\\\" required />\\r\\n                      <div *ngIf=\\\"RcBy.invalid && (RcBy.dirty || RcBy.touched)\\\" class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"RcBy.errors && RcBy.errors.required\\\">\\r\\n                          By is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Supplier Name</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" disabled [(ngModel)]=\\\"rcSubRecord.supplier_name\\\"\\r\\n                        name=\\\"rcSuppName\\\" #RcSuppName=\\\"ngModel\\\" required />\\r\\n                      <div *ngIf=\\\"RcSuppName.invalid && (RcSuppName.dirty || RcSuppName.touched)\\\" class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"RcSuppName.errors && RcSuppName.errors.required\\\">\\r\\n                          Supplier Name is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <button size=\\\"small\\\" [disabled]=\\\"rcform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton\\r\\n                      (click)=\\\"onAddRCRecord(rcform)\\\">Add</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </nb-accordion-item-body>\\r\\n          </nb-accordion-item>\\r\\n        </nb-accordion>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"row col-md-12\\\">\\r\\n        <nb-accordion>\\r\\n          <nb-accordion-item #item>\\r\\n            <nb-accordion-item-header>\\r\\n              COLD WASH\\r\\n            </nb-accordion-item-header>\\r\\n            <nb-accordion-item-body>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Temperature</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"coldWashRecord.temperature\\\" name=\\\"coldWashTemp\\\"\\r\\n                      #ColdWashTemp=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                Process Name is required.\\r\\n                              </div>\\r\\n                            </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Plc Program No.</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"coldWashRecord.plc_program_no\\\"\\r\\n                      name=\\\"coldWash_program_no\\\" #coldWashProgram=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"dyingbath.invalid && (dyingbath.dirty || dyingbath.touched)\\\" class=\\\"errors\\\">\\r\\n                                <div *ngIf=\\\"dyingbath.errors && dyingbath.errors.required\\\">\\r\\n                                  No. of Dying Bath is required.\\r\\n                                </div>\\r\\n                              </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Hold Time</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"coldWashRecord.hold_time\\\" name=\\\"coldWashTime\\\"\\r\\n                      #coldWashtime=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                Process Name is required.\\r\\n                              </div>\\r\\n                            </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Rate Temperature</label>\\r\\n                    <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n                      (keypress)=\\\"numberOnly($event)\\\" [(ngModel)]=\\\"coldWashRecord.rate_temperature\\\"\\r\\n                      name=\\\"coldWashRateTemp\\\" #ColdWashRateTemp=\\\"ngModel\\\" />\\r\\n                    <!-- <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n                              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                                Process Name is required.\\r\\n                              </div>\\r\\n                            </div> -->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row table table-responsive\\\">\\r\\n                <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowColdWashData\\\"\\r\\n                  [columnDefs]=\\\"coldwashcolumnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'\\r\\n                  *ngIf=\\\"coldWashSubRecordArray.length\\\">\\r\\n                </ag-grid-angular>\\r\\n              </div>\\r\\n              <form #coldwashform=\\\"ngForm\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Item Name</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" placeholder=\\\"Select Item Name\\\"\\r\\n                        name=\\\"coldWashitemName\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"coldWashSubRecord.item_name\\\"\\r\\n                        (click)=\\\"HideShowCForm()\\\" required #ColdWashItemName=\\\"ngModel\\\">\\r\\n                      <div *ngIf=\\\"flagDivCForm\\\" class=\\\"dropdown\\\">\\r\\n                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowCForm()\\\" class=\\\"float-right\\\">[X]</a>\\r\\n                        <table class=\\\"table table-bordered pointer table-responsive\\\">\\r\\n                          <thead>\\r\\n                            <tr>\\r\\n                              <th>Item Name</th>\\r\\n                              <th>Supplier Name</th>\\r\\n                            </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                            <tr *ngFor=\\\"let item of itemList; let i = index\\\" (click)=\\\"selectItem(item,'cold_wash')\\\"\\r\\n                              class=\\\"pointer\\\">\\r\\n                              <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\r\\n                              <td>{{item.item_name}}</td>\\r\\n                              <td>{{item.supplier_name}}</td>\\r\\n                            </tr>\\r\\n                          </tbody>\\r\\n                        </table>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"ColdWashItemName.invalid && (ColdWashItemName.dirty || ColdWashItemName.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"ColdWashItemName.errors && ColdWashItemName.errors.required\\\">\\r\\n                          Item Name is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Concentration</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\" (keypress)=\\\"numberOnly($event)\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"coldWashSubRecord.concentration\\\"\\r\\n                        name=\\\"coldWashConcentration\\\" #ColdWashConcentration=\\\"ngModel\\\" required />\\r\\n                      <div\\r\\n                        *ngIf=\\\"ColdWashConcentration.invalid && (ColdWashConcentration.dirty || ColdWashConcentration.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"ColdWashConcentration.errors && ColdWashConcentration.errors.required\\\">\\r\\n                          Concentration is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>By</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" [(ngModel)]=\\\"coldWashSubRecord.item_by\\\"\\r\\n                        name=\\\"coldWashBy\\\" #ColdWashBy=\\\"ngModel\\\" required />\\r\\n                      <div *ngIf=\\\"ColdWashBy.invalid && (ColdWashBy.dirty || ColdWashBy.touched)\\\" class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"ColdWashBy.errors && ColdWashBy.errors.required\\\">\\r\\n                          By is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Supplier Name</label>\\r\\n                      <input nbInput fullWidth fieldSize=\\\"small\\\" type=\\\"text\\\"\\r\\n                        class=\\\"form-control input-group input-group-sm\\\" disabled\\r\\n                        [(ngModel)]=\\\"coldWashSubRecord.supplier_name\\\" name=\\\"coldWashSuppName\\\"\\r\\n                        #ColdWashSuppName=\\\"ngModel\\\" required />\\r\\n                      <div *ngIf=\\\"ColdWashSuppName.invalid && (ColdWashSuppName.dirty || ColdWashSuppName.touched)\\\"\\r\\n                        class=\\\"errors\\\">\\r\\n                        <div *ngIf=\\\"ColdWashSuppName.errors && ColdWashSuppName.errors.required\\\">\\r\\n                          Supplier Name is required.\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-2\\\">\\r\\n                    <button size=\\\"small\\\" [disabled]=\\\"coldwashform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton\\r\\n                      (click)=\\\"onAddColdWashRecord(coldwashform)\\\">Add</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n\\r\\n            </nb-accordion-item-body>\\r\\n          </nb-accordion-item>\\r\\n        </nb-accordion>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"box-footer\\\">\\r\\n        <button [disabled]=\\\"vform.invalid\\\" nbButton (click)=\\\"onCustomFormSubmit(vform)\\\">{{subBtnName}}</button>\\r\\n        &nbsp;\\r\\n        <button nbButton type=\\\"reset\\\" routerLink='/pages/process/view-process-list' id=\\\"Cancel\\\">Cancel</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Nlc3MvYWRkLWVkaXQtcHJvY2Vzcy9hZGQtZWRpdC1wcm9jZXNzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgbModal, NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\r\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\r\nimport { Process, ProcessRecord, ProcessSubRecord, ProcessReq, ProcessReqRecord } from '../../../@theme/model/process-class';\r\nimport { ViewReqObj, User } from '../../../@theme/model/user-class';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProcessService } from '../../../@theme/services/process.service';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { SupplierItemRecord } from '../../../@theme/model/supplier-class';\r\nimport { SupplierService } from '../../../@theme/services/supplier.service';\r\n\r\n@Component({\r\n  selector: 'ngx-add-edit-process',\r\n  templateUrl: './add-edit-process.component.html',\r\n  styleUrls: ['./add-edit-process.component.scss']\r\n})\r\nexport class AddEditProcessComponent implements OnInit {\r\n\r\n\r\n  @ViewChild('instance') instance: NgbTypeahead;\r\n  focus$ = new Subject<string>();\r\n  click$ = new Subject<string>();\r\n  processModal: Process;\r\n  flagDivSForm = false;\r\n  flagDivRForm = false;\r\n  flagDivDForm = false;\r\n  flagDivCForm = false;\r\n  id: any;\r\n  subBtnName = '';\r\n  topHeader = '';\r\n  viewFlag = false;\r\n  rowScouringData: any;\r\n  rowRCData: any;\r\n  rowDyingData: any;\r\n  rowColdWashData: any;\r\n  processRecord: ProcessRecord[] = [];\r\n  scouringRecord: ProcessRecord;\r\n  scouringSubRecordArray: ProcessSubRecord[] = [];\r\n  scouringSubRecord: ProcessSubRecord;\r\n  rcRecord: ProcessRecord;\r\n  rcSubRecordArray: ProcessSubRecord[] = [];\r\n  rcSubRecord: ProcessSubRecord;\r\n  dyingRecord: ProcessRecord;\r\n  dyingSubRecordArray: ProcessSubRecord[] = [];\r\n  dyingSubRecord: ProcessSubRecord;\r\n  coldWashRecord: ProcessRecord;\r\n  coldWashSubRecordArray: ProcessSubRecord[] = [];\r\n  coldWashSubRecord: ProcessSubRecord;\r\n  currentUserId: any;\r\n  currentUserHeadid: any;\r\n  currentUser$: Subscription;\r\n  currentUser: User;\r\n  itemList: SupplierItemRecord[] = [];\r\n  processReq: ProcessReq;\r\n  processReqRecord: ProcessReqRecord[] = [];\r\n\r\n  scouringcolumnDefs = [\r\n    { headerName: 'Actions', field: 'index', width: 70 },\r\n    { headerName: 'Item Name', field: 'item_name' },\r\n    { headerName: 'Concentration', field: 'concentration' },\r\n    { headerName: 'By', field: 'item_by' },\r\n    { headerName: 'Supplier Name', field: 'supplier_name' },\r\n  ];\r\n  dyingcolumnDefs = [\r\n    { headerName: 'Actions', field: 'index', width: 70 },\r\n    { headerName: 'Item Name', field: 'item_name' },\r\n    { headerName: 'Concentration', field: 'concentration' },\r\n    { headerName: 'By', field: 'item_by' },\r\n    { headerName: 'Supplier Name', field: 'supplier_name' },\r\n  ];\r\n  rccolumnDefs = [\r\n    { headerName: 'Actions', field: 'index', width: 70 },\r\n    { headerName: 'Item Name', field: 'item_name' },\r\n    { headerName: 'Concentration', field: 'concentration' },\r\n    { headerName: 'By', field: 'item_by' },\r\n    { headerName: 'Supplier Name', field: 'supplier_name' },\r\n  ];\r\n  coldwashcolumnDefs = [\r\n    { headerName: 'Actions', field: 'index', width: 70 },\r\n    { headerName: 'Item Name', field: 'item_name' },\r\n    { headerName: 'Concentration', field: 'concentration' },\r\n    { headerName: 'By', field: 'item_by' },\r\n    { headerName: 'Supplier Name', field: 'supplier_name' },\r\n  ];\r\n  currentUserPermission: any;\r\n  currentUserGroupUserIds: any;\r\n\r\n  constructor(private toasterService: ToastrService, private route: ActivatedRoute,\r\n    private router: Router, private processService: ProcessService,\r\n    private authService: AuthService, private supplierService: SupplierService) {\r\n    this.processModal = new Process();\r\n    this.scouringRecord = new ProcessRecord();\r\n    this.dyingRecord = new ProcessRecord();\r\n    this.rcRecord = new ProcessRecord();\r\n    this.coldWashRecord = new ProcessRecord();\r\n    this.scouringSubRecord = new ProcessSubRecord();\r\n    this.coldWashSubRecord = new ProcessSubRecord();\r\n    this.dyingSubRecord = new ProcessSubRecord();\r\n    this.rcSubRecord = new ProcessSubRecord();\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.currentUserHeadid = ele.user.user_head_id;\r\n        this.currentUserPermission = ele.user_permission;\r\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n  ngOnInit() {\r\n    this.setScouringColumns();\r\n    this.setRCColumns();\r\n    this.setColdWashColumns();\r\n    this.setDyingColumns();\r\n    this.getItemList();\r\n    this.onPageLoad();\r\n  }\r\n  onPageLoad() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    if (this.id != null) {\r\n      if (this.id) {\r\n        this.subBtnName = 'Update';\r\n        this.topHeader = 'Edit Process';\r\n\r\n      } else {\r\n        this.topHeader = 'Process View';\r\n        this.viewFlag = true;\r\n      }\r\n      this.processService.getProcessById(this.id).subscribe(\r\n        data => {\r\n          if (!data[0].error) {\r\n            this.processModal = data[0].data.process[0];\r\n            this.processReqRecord = data[0].data.process_record;\r\n            if (this.processReqRecord.length) {\r\n              let scouringIndex = 0;\r\n              let dyingIndex = 0;\r\n              let rcIndex = 0;\r\n              let coldWashIndex = 0;\r\n              this.processReqRecord.forEach((ele, index) => {\r\n                if (ele.type === 'scouring') {\r\n                  if (!scouringIndex) {\r\n                    this.setProcessRecordOnLoad(this.scouringRecord, ele);\r\n                  }\r\n                  scouringIndex += 1;\r\n                  this.setProcessSubRecordOnLoad(this.scouringSubRecordArray, this.scouringSubRecord, ele, scouringIndex);\r\n                } else if (ele.type === 'rc') {\r\n                  if (!rcIndex) {\r\n                    this.setProcessRecordOnLoad(this.rcRecord, ele);\r\n                  }\r\n                  rcIndex += 1;\r\n                  this.setProcessSubRecordOnLoad(this.rcSubRecordArray, this.rcSubRecord, ele, rcIndex);\r\n                } else if (ele.type === 'cold_wash') {\r\n                  if (!coldWashIndex) {\r\n                    this.setProcessRecordOnLoad(this.coldWashRecord, ele);\r\n                  }\r\n                  coldWashIndex += 1;\r\n                  this.setProcessSubRecordOnLoad(this.coldWashSubRecordArray, this.coldWashSubRecord, ele, coldWashIndex);\r\n                } else if (ele.type === 'dying') {\r\n                  if (!dyingIndex) {\r\n                    this.setProcessRecordOnLoad(this.dyingRecord, ele);\r\n                  }\r\n                  dyingIndex += 1;\r\n                  this.setProcessSubRecordOnLoad(this.dyingSubRecordArray, this.dyingSubRecord, ele, dyingIndex);\r\n                }\r\n              })\r\n            }\r\n            console.log('dying', this.dyingSubRecordArray)\r\n            this.rowColdWashData = this.coldWashSubRecordArray;\r\n            this.rowDyingData = this.dyingSubRecordArray;\r\n            this.rowRCData = this.rcSubRecordArray;\r\n            this.rowScouringData = this.scouringSubRecordArray;\r\n            this.processModal.process_record = this.processRecord\r\n          } else {\r\n            this.toasterService.error(data.message);\r\n          }\r\n        }, error => {\r\n          this.toasterService.error('Server Error');\r\n        });\r\n    } else {\r\n      this.subBtnName = 'Save';\r\n      this.topHeader = 'Add Process';\r\n    }\r\n  }\r\n  setProcessRecordOnLoad(processRecord, ele) {\r\n    processRecord.type = ele.index;\r\n    processRecord.control_id = ele.control_id;\r\n    processRecord.temperature = ele.temperature;\r\n    processRecord.plc_program_no = ele.plc_program_no;\r\n    processRecord.hold_time = ele.hold_time;\r\n    processRecord.rate_temperature = ele.rate_temperature;\r\n  }\r\n  setProcessSubRecordOnLoad(prcoessSubRecordArray, processSubRecordObj, ele, index) {\r\n    processSubRecordObj = new ProcessSubRecord();\r\n    processSubRecordObj.entry_id = ele.entry_id;\r\n    processSubRecordObj.index = index;\r\n    processSubRecordObj.item_id = ele.item_id;\r\n    processSubRecordObj.item_name = ele.item_name;\r\n    processSubRecordObj.concentration = ele.concentration;\r\n    processSubRecordObj.item_by = ele.item_by;\r\n    processSubRecordObj.supplier_name = ele.supplier_name;\r\n    prcoessSubRecordArray.push(processSubRecordObj);\r\n  }\r\n  setScouringColumns() {\r\n    this.scouringcolumnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'index') {\r\n        column.cellRendererFramework = CustomRendererScouringRecordComponent;\r\n        column.cellRendererParams = {\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n  setRCColumns() {\r\n    this.rccolumnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'index') {\r\n        column.cellRendererFramework = CustomRendererRCRecordComponent;\r\n        column.cellRendererParams = {\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n  setColdWashColumns() {\r\n    this.coldwashcolumnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'index') {\r\n        column.cellRendererFramework = CustomRendererColdWashRecordComponent;\r\n        column.cellRendererParams = {\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n  setDyingColumns() {\r\n    this.dyingcolumnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'index') {\r\n        column.cellRendererFramework = CustomRendererDyingRecordComponent;\r\n        column.cellRendererParams = {\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  getItemList() {\r\n    console.log('dsae');\r\n    this.supplierService.getAllSupplierItemData().subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.itemList = data[0].data;\r\n      }\r\n    })\r\n  }\r\n  selectItem(value, table_name) {\r\n    this.flagDivSForm = false;\r\n    this.flagDivCForm = false;\r\n    this.flagDivDForm = false;\r\n    this.flagDivRForm = false;\r\n    if (table_name === 'scouring') {\r\n      this.scouringSubRecord.item_id = value.entry_id;\r\n      this.scouringSubRecord.item_name = value.item_name;\r\n      this.scouringSubRecord.supplier_name = value.supplier_name;\r\n    } else if (table_name === 'rc') {\r\n      this.rcSubRecord.item_id = value.entry_id;\r\n      this.rcSubRecord.item_name = value.item_name;\r\n      this.rcSubRecord.supplier_name = value.supplier_name;\r\n    } else if (table_name === 'dying') {\r\n      this.dyingSubRecord.item_id = value.entry_id;\r\n      this.dyingSubRecord.item_name = value.item_name;\r\n      this.dyingSubRecord.supplier_name = value.supplier_name;\r\n    } else if (table_name === 'cold_wash') {\r\n      this.coldWashSubRecord.item_id = value.entry_id;\r\n      this.coldWashSubRecord.item_name = value.item_name;\r\n      this.coldWashSubRecord.supplier_name = value.supplier_name;\r\n    }\r\n  }\r\n  HideShowSForm() {\r\n    this.flagDivSForm = !this.flagDivSForm;\r\n  }\r\n  HideShowRForm() {\r\n    this.flagDivRForm = !this.flagDivRForm;\r\n  }\r\n  HideShowDForm() {\r\n    this.flagDivDForm = !this.flagDivDForm;\r\n  }\r\n  HideShowCForm() {\r\n    this.flagDivCForm = !this.flagDivCForm;\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && ((charCode < 46 || charCode > 57) || charCode == 47)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  onAddScouringRecord(form: NgForm) {\r\n    let flag = 0;\r\n    let j = 1;\r\n    if (!this.scouringSubRecordArray.length) {\r\n      this.scouringSubRecord.index = j;\r\n    } else if (this.scouringSubRecord.index == undefined) {\r\n      this.scouringSubRecord.index = this.scouringSubRecordArray.length + 1;\r\n    }\r\n    this.scouringSubRecordArray.forEach(ele => {\r\n      if (ele.index == this.scouringSubRecord.index) {\r\n        ele = this.scouringSubRecord\r\n        flag = 1;\r\n      }\r\n    });\r\n    if (!flag) {\r\n      this.scouringSubRecordArray.push(this.scouringSubRecord);\r\n    }\r\n    this.rowScouringData = [...this.scouringSubRecordArray];\r\n    this.scouringSubRecord = new ProcessSubRecord();\r\n    form.resetForm();\r\n  }\r\n\r\n  onEditScouringRecord(data) {\r\n    console.log('data', data);\r\n    let i = this.scouringSubRecordArray.findIndex(v => v.index == data);\r\n    console.log('index', i);\r\n    console.log('record', this.scouringSubRecordArray)\r\n    this.scouringSubRecord = this.scouringSubRecordArray[i];\r\n  }\r\n\r\n  deleteScouringRecord(data) {\r\n    console.log(data);\r\n    let i = this.scouringSubRecordArray.findIndex(v => v.index == data);\r\n    console.log('index', i);\r\n    this.scouringSubRecordArray.splice(i, 1);\r\n    this.rowScouringData = [...this.scouringSubRecordArray]\r\n  }\r\n\r\n  onAddRCRecord(form: NgForm) {\r\n    let flag = 0;\r\n    let j = 1;\r\n    if (!this.rcSubRecordArray.length) {\r\n      this.rcSubRecord.index = j;\r\n    } else if (this.rcSubRecord.index == undefined) {\r\n      this.rcSubRecord.index = this.rcSubRecordArray.length + 1;\r\n    }\r\n    this.rcSubRecordArray.forEach(ele => {\r\n      if (ele.index == this.rcSubRecord.index) {\r\n        ele = this.rcSubRecord\r\n        flag = 1;\r\n      }\r\n    });\r\n    if (!flag) {\r\n      this.rcSubRecordArray.push(this.rcSubRecord);\r\n    }\r\n    this.rowRCData = [...this.rcSubRecordArray];\r\n    this.rcSubRecord = new ProcessSubRecord();\r\n    form.resetForm();\r\n  }\r\n\r\n  onEditRCRecord(data) {\r\n    let i = this.rcSubRecordArray.findIndex(v => v.index == data);\r\n    this.rcSubRecord = this.rcSubRecordArray[i];\r\n  }\r\n\r\n  deleteRCRecord(data) {\r\n    let i = this.rcSubRecordArray.findIndex(v => v.index == data);\r\n    this.rcSubRecordArray.splice(i, 1);\r\n    this.rowRCData = [...this.rcSubRecordArray]\r\n  }\r\n  onAddDyingRecord(form: NgForm) {\r\n    let flag = 0;\r\n    let j = 1;\r\n    if (!this.dyingSubRecordArray.length) {\r\n      this.dyingSubRecord.index = j;\r\n    } else if (this.dyingSubRecord.index == undefined) {\r\n      this.dyingSubRecord.index = this.dyingSubRecordArray.length + 1;\r\n    }\r\n    this.dyingSubRecordArray.forEach(ele => {\r\n      if (ele.index == this.dyingSubRecord.index) {\r\n        ele = this.dyingSubRecord\r\n        flag = 1;\r\n      }\r\n    });\r\n    if (!flag) {\r\n      this.dyingSubRecordArray.push(this.dyingSubRecord);\r\n    }\r\n    this.rowDyingData = [...this.dyingSubRecordArray];\r\n    this.dyingSubRecord = new ProcessSubRecord();\r\n    form.resetForm();\r\n  }\r\n\r\n  onEditDyingRecord(data) {\r\n    console.log('data', data);\r\n    let i = this.dyingSubRecordArray.findIndex(v => v.index == data);\r\n    this.dyingSubRecord = this.dyingSubRecordArray[i];\r\n  }\r\n\r\n  deleteDyingRecord(data) {\r\n    let i = this.dyingSubRecordArray.findIndex(v => v.index == data);\r\n    this.dyingSubRecordArray.splice(i, 1);\r\n    this.rowDyingData = [...this.dyingSubRecordArray]\r\n  }\r\n  onAddColdWashRecord(form: NgForm) {\r\n    let flag = 0;\r\n    let j = 1;\r\n    if (!this.coldWashSubRecordArray.length) {\r\n      this.coldWashSubRecord.index = j;\r\n    } else if (this.coldWashSubRecord.index == undefined) {\r\n      this.coldWashSubRecord.index = this.coldWashSubRecordArray.length + 1;\r\n    }\r\n    this.coldWashSubRecordArray.forEach(ele => {\r\n      if (ele.index == this.coldWashSubRecord.index) {\r\n        ele = this.coldWashSubRecord\r\n        flag = 1;\r\n      }\r\n    });\r\n    if (!flag) {\r\n      this.coldWashSubRecordArray.push(this.coldWashSubRecord);\r\n    }\r\n    this.rowColdWashData = [...this.coldWashSubRecordArray];\r\n    this.coldWashSubRecord = new ProcessSubRecord();\r\n    form.resetForm();\r\n  }\r\n\r\n  onEditColdWashRecord(data) {\r\n    let i = this.coldWashSubRecordArray.findIndex(v => v.index == data);\r\n    this.coldWashSubRecord = this.coldWashSubRecordArray[i];\r\n  }\r\n\r\n  deleteColdWashRecord(data) {\r\n    let i = this.coldWashSubRecordArray.findIndex(v => v.index == data);\r\n    this.coldWashSubRecordArray.splice(i, 1);\r\n    this.rowColdWashData = [...this.coldWashSubRecordArray]\r\n  }\r\n\r\n  onCustomFormSubmit(form: NgForm) {\r\n    this.processReq = new ProcessReq();\r\n    this.processReqRecord = [];\r\n    this.processReq.entry_id = this.processModal.entry_id;\r\n    this.processReq.process_name = this.processModal.process_name;\r\n    this.processReq.no_dying_bath = this.processModal.no_dying_bath;\r\n    this.processReq.dc_multiplying_fac = this.processModal.dc_multiplying_fac;\r\n    this.processReq.created_by = this.processModal.created_by;\r\n    this.processReq.created_date = this.processModal.created_date;\r\n    this.processReq.updated_by = this.processModal.updated_by;\r\n    this.processReq.updated_date = this.processModal.updated_date;\r\n    if (this.scouringSubRecordArray.length) {\r\n      this.scouringSubRecordArray.forEach(ele => {\r\n        this.getProcessReqRecord(ele, this.scouringRecord, 'scouring');\r\n      })\r\n    }\r\n    if (this.dyingSubRecordArray.length) {\r\n      this.dyingSubRecordArray.forEach(ele => {\r\n        this.getProcessReqRecord(ele, this.dyingRecord, 'dying');\r\n      })\r\n    }\r\n    if (this.rcSubRecordArray.length) {\r\n      this.rcSubRecordArray.forEach(ele => {\r\n        this.getProcessReqRecord(ele, this.rcRecord, 'rc');\r\n      })\r\n    }\r\n    if (this.coldWashSubRecordArray.length) {\r\n      this.coldWashSubRecordArray.forEach(ele => {\r\n        this.getProcessReqRecord(ele, this.coldWashRecord, 'cold_wash');\r\n      })\r\n    }\r\n    if (this.processReqRecord.length) {\r\n      this.processReq.process_req_record = this.processReqRecord;\r\n    }\r\n    console.log('process', this.processReq);\r\n\r\n    // for update\r\n    if (this.id) {\r\n      this.processReq.updated_by = this.currentUserId;\r\n      this.processService.updateProcess(this.processReq).subscribe(data => {\r\n        console.log(data)\r\n        if (!data[0].error) {\r\n          this.toasterService.success(data[0].message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/process/view-process-list']);\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    } else {\r\n      this.processReq.created_by = this.currentUserId;\r\n      this.processReq.user_head_id = this.currentUserHeadid;\r\n      console.log(this.processReq)\r\n      this.processService.addProcess(this.processReq).subscribe(data => {\r\n        data = data[0]\r\n        if (!data.error) {\r\n          this.toasterService.success(data.message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/process/view-process-list']);\r\n        } else {\r\n          this.toasterService.error(data.message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    }\r\n  }\r\n\r\n  getProcessReqRecord(ele, record, type) {\r\n    let processSingleReqRecord = new ProcessReqRecord();\r\n    processSingleReqRecord.entry_id = ele.entry_id;\r\n    processSingleReqRecord.index = ele.index;\r\n    processSingleReqRecord.item_id = ele.item_id;\r\n    processSingleReqRecord.item_name = ele.item_name;\r\n    processSingleReqRecord.concentration = ele.concentration;\r\n    processSingleReqRecord.supplier_name = ele.supplier_name;\r\n    processSingleReqRecord.item_by = ele.item_by;\r\n    processSingleReqRecord.control_id = record.control_id;\r\n    processSingleReqRecord.type = type;\r\n    processSingleReqRecord.temperature = record.temperature;\r\n    processSingleReqRecord.plc_program_no = record.plc_program_no;\r\n    processSingleReqRecord.hold_time = record.hold_time;\r\n    processSingleReqRecord.rate_temperature = record.rate_temperature;\r\n    this.processReqRecord.push(processSingleReqRecord);\r\n  }\r\n}\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\r\n  styleUrls: ['./add-edit-process.component.scss']\r\n})\r\n\r\nexport class CustomRendererScouringRecordComponent implements AgRendererComponent {\r\n  params: any;\r\n\r\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  editRecord() {\r\n    console.log('this', this.params.value)\r\n    this.params.action.onEditScouringRecord(this.params.value)\r\n  }\r\n  onDeleteRecord() {\r\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n    modalRef.componentInstance.titleFrom = 'Delete record ';\r\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\r\n    modalRef.result\r\n      .then((res) => {\r\n        console.log('rex', res);\r\n        if (res) {\r\n          this.params.action.deleteScouringRecord(this.params.value)\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\r\n  styleUrls: ['./add-edit-process.component.scss']\r\n})\r\n\r\nexport class CustomRendererRCRecordComponent implements AgRendererComponent {\r\n  params: any;\r\n\r\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  editRecord() {\r\n    this.params.action.onEditRCRecord(this.params.value)\r\n  }\r\n  onDeleteRecord() {\r\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n    modalRef.componentInstance.titleFrom = 'Delete record ';\r\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          this.params.action.deleteRCRecord(this.params.value)\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\r\n  styleUrls: ['./add-edit-process.component.scss']\r\n})\r\n\r\nexport class CustomRendererColdWashRecordComponent implements AgRendererComponent {\r\n  params: any;\r\n\r\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  editRecord() {\r\n    this.params.action.onEditColdWashRecord(this.params.value)\r\n  }\r\n  onDeleteRecord() {\r\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n    modalRef.componentInstance.titleFrom = 'Delete record ';\r\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          this.params.action.deleteColdWashRecord(this.params.value)\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\r\n  styleUrls: ['./add-edit-process.component.scss']\r\n})\r\n\r\nexport class CustomRendererDyingRecordComponent implements AgRendererComponent {\r\n  params: any;\r\n\r\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  editRecord() {\r\n    console.log('this.params', this.params.action);\r\n    this.params.action.onEditDyingRecord(this.params.value)\r\n  }\r\n  onDeleteRecord() {\r\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n    modalRef.componentInstance.titleFrom = 'Delete record ';\r\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          this.params.action.deleteDyingRecord(this.params.value)\r\n        }\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Step</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close(false)\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<form #stepForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 form-group\\\">\\r\\n        <label>Step Name</label>\\r\\n        <input class=\\\"form-control input-group\\\" type=\\\"text\\\" name=\\\"stepName\\\" [(ngModel)]=\\\"step_name\\\" #name=\\\"ngModel\\\">\\r\\n        <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"errors\\\">\\r\\n          <div *ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n            Step Name is required.\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-5\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Step Position</label>\\r\\n          <select [disabled]=\\\"editStep\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"step_position\\\" name=\\\"stepNo\\\"\\r\\n            #position=\\\"ngModel\\\" required>\\r\\n            <option *ngFor=\\\"let p of positionValues\\\" [value]=\\\"p\\\">{{p}}</option>\\r\\n          </select>\\r\\n          <div *ngIf=\\\"position.invalid && (position.dirty || position.touched)\\\" class=\\\"errors\\\">\\r\\n            <div *ngIf=\\\"position.errors && position.errors.required\\\">\\r\\n              Step Position is required.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-5\\\" *ngIf=\\\"stepList.length\\\">\\r\\n        <h5>Current Steps:</h5>\\r\\n        <div *ngFor=\\\"let i of stepList;let z=index\\\">\\r\\n          <span>{{z+1}}.</span>&nbsp;<span>{{i.step_name}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button nbButton [disabled]=\\\"stepForm.invalid\\\" (click)=\\\"onCreate()\\\">{{submitButton}}</button>\\r\\n    <button nbButton (click)=\\\"activeModal.close(false)\\\">Cancel</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \".select.btn-mini {\\n  height: auto !important;\\n  line-height: 14px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvY2Vzcy9hZGQtc3RlcC9DOlxcVXNlcnNcXFBDXFxEZXNrdG9wXFxnZmxcXGdmbC1mcm9udC1lbmRcXG5neC13aXJlZnJhbWUvc3JjXFxhcHBcXHBhZ2VzXFxwcm9jZXNzXFxhZGQtc3RlcFxcYWRkLXN0ZXAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx3QkFBdUI7RUFDdkIsNkJBQTRCLEVBQy9CIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJvY2Vzcy9hZGQtc3RlcC9hZGQtc3RlcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWxlY3QuYnRuLW1pbmkge1xyXG4gICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XHJcbiAgICBsaW5lLWhlaWdodDogMTRweCAhaW1wb3J0YW50O1xyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { position } from 'html2canvas/dist/types/css/property-descriptors/position';\r\n\r\n@Component({\r\n  selector: 'ngx-add-step',\r\n  templateUrl: './add-step.component.html',\r\n  styleUrls: ['./add-step.component.scss']\r\n})\r\nexport class AddStepComponent implements OnInit {\r\n\r\n  step_name = '';\r\n  @Input() position;\r\n  step_position = 1;\r\n  positionValues = [];\r\n  @Input() stepList = [];\r\n  @Input() editStep: any;\r\n  submitButton = \"Add\";\r\n\r\n  constructor(public activeModal: NgbActiveModal) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.editStep) {\r\n      if (this.position > 0) {\r\n        this.step_position = this.position;\r\n        for (let i = 1; i <= this.position; i++) {\r\n          this.positionValues.push(i);\r\n        }\r\n      }\r\n    } else {\r\n      this.submitButton = \"Update\";\r\n      if (this.position > 0) {\r\n        this.step_position = this.position;\r\n        this.step_name = this.stepList[this.position - 1].step_name;\r\n        for (let i = 1; i <= this.stepList.length; i++) {\r\n          this.positionValues.push(i);\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  onCreate() {\r\n    let obj = { 'name': this.step_name, 'position': this.step_position };\r\n    this.activeModal.close(obj);\r\n  }\r\n}\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>Dynamic Process\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form #vform=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3 ml-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Process Name</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              [(ngModel)]=\\\"processModal.process_name\\\" name=\\\"processName\\\" #processname=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"processname.invalid && (processname.dirty || processname.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"processname.errors && processname.errors.required\\\">\\r\\n                Process Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3 ml-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Time (minutes)</label>\\r\\n            <input nbInput fullWidth fieldSize=\\\"small\\\" class=\\\"form-control input-group input-group-sm\\\"\\r\\n              [(ngModel)]=\\\"processModal.time\\\" name=\\\"timeMin\\\" #processtime=\\\"ngModel\\\" required (keypress)=\\\"numberOnly($event)\\\"/>\\r\\n            <div *ngIf=\\\"processtime.invalid && (processtime.dirty || processtime.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"processtime.errors && processtime.errors.required\\\">\\r\\n                Process Time is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <i class=\\\"fa fa-plus-circle mr-2\\\" style=\\\"color:#4ca6ff;font-size:25px;cursor: pointer;margin: 23px;\\\"\\r\\n            (click)=\\\"onAddStep()\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <br> -->\\r\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"stepList.length\\\">\\r\\n        <div cdkDropList class=\\\"example-list\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\r\\n\\r\\n          <nb-accordion *ngFor=\\\"let step of stepList\\\" cdkDragLockAxis=\\\"y\\\" cdkDrag>\\r\\n            <nb-accordion-item #item (click)=\\\"onStepClick(step)\\\">\\r\\n              <nb-accordion-item-header class=\\\"item-header\\\">\\r\\n                {{step.step_name}}\\r\\n                <i class=\\\"fa fa-plus-circle\\\" style=\\\"color:green;font-size:25px;cursor: pointer;margin-right: 69px;\\\"\\r\\n                  (click)=\\\"onAddFunction(step)\\\"></i>\\r\\n                <i class=\\\"ft-edit-2 font-medium-1\\\" style=\\\"color:#4ca6ff;margin-right: 41px;\\\" (click)=\\\"onEditStep(step)\\\">\\r\\n                </i>\\r\\n                <i class=\\\"ft-trash font-medium-1\\\" style=\\\"color:red;margin-right: 17px;\\\" (click)=\\\"onDeleteStep(step)\\\">\\r\\n                </i>\\r\\n              </nb-accordion-item-header>\\r\\n              <nb-accordion-item-body>\\r\\n                <div *ngIf=\\\"step.functionList && step.functionList.length\\\">\\r\\n                  <!-- <br> -->\\r\\n                  <nb-list cdkDropList class=\\\"example-list\\\"\\r\\n                    (cdkDropListDropped)=\\\"dropFunction($event,step.step_position)\\\">\\r\\n                    <nb-list-item *ngFor=\\\"let func of step.functionList\\\" cdkDragLockAxis=\\\"y\\\" cdkDrag>\\r\\n                      <div>\\r\\n                        {{func.func_name}}\\r\\n                        <i class=\\\"ft-trash font-medium-1\\\" style=\\\"color:red;float: right;\\\"\\r\\n                          (click)=\\\"onDeleteFunction(func)\\\">\\r\\n                        </i>\\r\\n                        <i class=\\\"ft-edit-2 font-medium-1\\\" style=\\\"color:#4ca6ff;float: right;margin-right: 1.5%;\\\"\\r\\n                          (click)=\\\"onEditFunction(func)\\\">\\r\\n                        </i>\\r\\n                        <div *ngIf=\\\"func.func_value==='temp'\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                              <label><b>S V (Set Value)(C) :</b> {{func.tempFunction.set_value}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                              <label><b>Rate of Rise (C/minute) :</b> {{func.tempFunction.rate_of_rise}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                              <label><b>Hold Time :</b> {{func.tempFunction.hold_time}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\">\\r\\n                              <label><b>Pressure (Above 80 C) :</b> {{func.tempFunction.pressure}}</label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"func.func_value==='pump'\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                              <label><b>Pump Speed (%) : </b>{{func.pumpMotorFunction.pump_speed}}</label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"func.func_value==='dosing'\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                              <label><b>Fill Side Tank :</b> {{func.dosingFunction.fill_type}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                              <label><b>Fill Side Tank (%) :</b> {{func.dosingFunction.dosing_percentage}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\" *ngIf=\\\"func.dosingFunction.have_dose\\\">\\r\\n                              <label><b>Dose at Temp (C) :</b> {{func.dosingFunction.dose_at_temp}}</label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                              <label><b>Dose Type :</b> {{func.dosingFunction.dose_type}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                              <label><b>Dose While Heating :</b> {{func.dosingFunction.dose_while_heating}}</label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\"\\r\\n                            *ngIf=\\\"func.dosingFunction.dose_type != undefined && func.dosingFunction.dose_type === 'chemical'\\\">\\r\\n                            <div class=\\\"col-md-6 table table-responsive\\\">\\r\\n                              <ag-grid-angular style=\\\"width: 100%; height:170px\\\" class=\\\"ag-theme-balham\\\"\\r\\n                                [rowData]=\\\"func.dosingFunction.dosing_chemical\\\" [columnDefs]=\\\"chemicalcolumnDefs\\\"\\r\\n                                [pagination]=\\\"true\\\" [paginationPageSize]='10'\\r\\n                                *ngIf=\\\"func.dosingFunction.dosing_chemical.length\\\">\\r\\n                              </ag-grid-angular>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"func.func_value==='operator'\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                              <label><b>Operator Code :</b> {{func.operatorFunction.operator_code}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                              <label><b>Operator Message :</b> {{func.operatorFunction.operator_message}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                              <label><b>Start At Temp :</b> {{func.operatorFunction.start_at_temp}}</label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"func.func_value==='water'\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-3\\\" *ngIf=\\\"func.waterDrainFunction.type === 'water'\\\">\\r\\n                              <label><b>Water Type :</b> {{func.waterDrainFunction.water_type}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\" *ngIf=\\\"func.waterDrainFunction.type === 'water'\\\">\\r\\n                              <label><b>Fabric Ratio :</b> {{func.waterDrainFunction.fabric_ratio}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\" *ngIf=\\\"func.waterDrainFunction.type === 'water'\\\">\\r\\n                              <label><b>Jet Level :</b> {{func.waterDrainFunction.jet_level}}</label>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-3\\\" *ngIf=\\\"func.waterDrainFunction.type !== 'water'\\\">\\r\\n                              <label><b>Drain Type :</b> {{func.waterDrainFunction.drain_type}}</label>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </nb-list-item>\\r\\n                  </nb-list>\\r\\n                  <i *ngIf=\\\"step.functionList.length>1\\\" class=\\\"fa fa-plus-circle\\\"\\r\\n                    style=\\\"color:green;font-size:25px;cursor: pointer;margin-left: 91%;margin-top: 1%;\\\"\\r\\n                    (click)=\\\"onAddFunction()\\\"></i>\\r\\n                </div>\\r\\n              </nb-accordion-item-body>\\r\\n            </nb-accordion-item>\\r\\n            <!-- <hr> -->\\r\\n          </nb-accordion>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"box-footer\\\">\\r\\n        <button [disabled]=\\\"vform.invalid\\\" nbButton (click)=\\\"onCustomFormSubmit(vform)\\\">Save</button>\\r\\n        &nbsp;\\r\\n        <button nbButton type=\\\"reset\\\" routerLink='/pages/process/view-process-list' id=\\\"Cancel\\\">Cancel</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\"","module.exports = \":host /deep/ nb-theme-default nb-list-item {\\n  padding: 0rem !important;\\n  border-bottom: 0px !important; }\\n\\n:host /deep/ nb-theme-default nb-accordion nb-accordion-item-header {\\n  padding: 0.75rem !important; }\\n\\n.item-header {\\n  background-color: lightgray;\\n  border-radius: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvY2Vzcy9keW5hbWljLXByb2Nlc3MvQzpcXFVzZXJzXFxQQ1xcRGVza3RvcFxcZ2ZsXFxnZmwtZnJvbnQtZW5kXFxuZ3gtd2lyZWZyYW1lL3NyY1xcYXBwXFxwYWdlc1xccHJvY2Vzc1xcZHluYW1pYy1wcm9jZXNzXFxkeW5hbWljLXByb2Nlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUM7RUFDSSx5QkFBd0I7RUFDeEIsOEJBQTZCLEVBQ2hDOztBQUVEO0VBQ0ksNEJBQTJCLEVBQzlCOztBQUVEO0VBQ0ksNEJBQTJCO0VBQzNCLG1CQUFrQixFQUNyQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Nlc3MvZHluYW1pYy1wcm9jZXNzL2R5bmFtaWMtcHJvY2Vzcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiA6aG9zdCAvZGVlcC8gbmItdGhlbWUtZGVmYXVsdCBuYi1saXN0LWl0ZW0ge1xyXG4gICAgIHBhZGRpbmc6IDByZW0gIWltcG9ydGFudDtcclxuICAgICBib3JkZXItYm90dG9tOiAwcHggIWltcG9ydGFudDtcclxuIH1cclxuXHJcbiA6aG9zdCAvZGVlcC8gbmItdGhlbWUtZGVmYXVsdCBuYi1hY2NvcmRpb24gbmItYWNjb3JkaW9uLWl0ZW0taGVhZGVyIHtcclxuICAgICBwYWRkaW5nOiAwLjc1cmVtICFpbXBvcnRhbnQ7XHJcbiB9XHJcblxyXG4gLml0ZW0taGVhZGVyIHtcclxuICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XHJcbiAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gfSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddStepComponent } from '../add-step/add-step.component';\r\nimport { Step, FunctionObj, DynamicProcessReq, DynamicProcessRecordReq, TempFunctionObj, DosingFunctionObj, PumpMotorFunctionObj, WaterDrainFunctionObj, OperatorMessageObj } from '../../../@theme/model/process-planning-class';\r\nimport { AddEditFunctionComponent } from '../add-edit-function/add-edit-function.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { User } from '../../../@theme/model/user-class';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\nimport { ProcessService } from '../../../@theme/services/process.service';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'ngx-dynamic-process',\r\n  templateUrl: './dynamic-process.component.html',\r\n  styleUrls: ['./dynamic-process.component.scss']\r\n})\r\nexport class DynamicProcessComponent implements OnInit, OnDestroy {\r\n\r\n  processModal = new DynamicProcessReq();\r\n  stepList: Step[] = [];\r\n  addFunctionFlag = false;\r\n  currentSelectedFunction = '';\r\n  selectedStep: any;\r\n  id: any;\r\n  currentUserId: any;\r\n  currentUserHeadid: any;\r\n  currentUser$: Subscription;\r\n  currentUser: User;\r\n  currentUserGroupUserIds: any;\r\n  dynamicProcessRecordReq: DynamicProcessRecordReq[] = [];\r\n  subBtnName = '';\r\n  topHeader = '';\r\n  chemicalcolumnDefs = [\r\n    { headerName: 'Item Name', field: 'item_name', width: 100 },\r\n    { headerName: 'Concentration', field: 'concentration', width: 130 },\r\n    { headerName: 'LR/F_WT', field: 'lr_or_fabric_wt', width: 100 },\r\n    { headerName: 'Supplier Name', field: 'supplier_name', width: 130 },\r\n  ];\r\n  rowChemicalData: any;\r\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService, private router: Router,\r\n    private authService: AuthService, private processService: ProcessService, private route: ActivatedRoute) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.currentUserHeadid = ele.user.user_head_id;\r\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\r\n      }\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n  ngOnInit() {\r\n    this.onPageLoad();\r\n  }\r\n  onPageLoad() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    if (this.id != null) {\r\n      if (this.id) {\r\n        this.subBtnName = 'Update';\r\n        this.topHeader = 'Edit Process';\r\n\r\n      }\r\n      this.processService.getDynamicProcessById(this.id).subscribe(\r\n        data => {\r\n          if (!data[0].error) {\r\n            this.processModal = data[0].data.process[0];\r\n            this.dynamicProcessRecordReq = data[0].data.process_record;\r\n            if (this.dynamicProcessRecordReq.length) {\r\n              let stepArray = [];\r\n              this.stepList = [];\r\n              this.dynamicProcessRecordReq.forEach((ele, index) => {\r\n                if (stepArray.findIndex(v => v == ele.step_name) == -1) {\r\n                  stepArray.push(ele.step_name);\r\n                  let obj = new Step();\r\n                  obj.step_name = ele.step_name;\r\n                  obj.step_position = ele.step_position;\r\n                  obj.control_id = ele.control_id;\r\n                  obj.functionList = [];\r\n                  this.stepList.push(obj)\r\n                }\r\n              })\r\n              this.dynamicProcessRecordReq.forEach((ele, index) => {\r\n                let stepIndex = this.stepList.findIndex(v => v.step_name == ele.step_name);\r\n                if (stepIndex > -1) {\r\n                  let wfuncObj = new WaterDrainFunctionObj();\r\n                  let tfuncObj = new TempFunctionObj();\r\n                  let dfuncObj = new DosingFunctionObj();\r\n                  let pfuncObj = new PumpMotorFunctionObj();\r\n                  let ofuncObj = new OperatorMessageObj();\r\n                  if (ele.func_value === 'temp') {\r\n                    tfuncObj.pressure = ele.pressure;\r\n                    tfuncObj.set_value = ele.set_value;\r\n                    tfuncObj.hold_time = ele.hold_time;\r\n                    tfuncObj.rate_of_rise = ele.rate_of_rise;\r\n                  } else if (ele.func_value === 'dosing') {\r\n                    dfuncObj.have_dose = ele.have_dose;\r\n                    dfuncObj.dose_at_temp = ele.dose_at_temp;\r\n                    dfuncObj.dosing_percentage = ele.dosing_percentage;\r\n                    dfuncObj.fill_type = ele.fill_type;\r\n                    dfuncObj.dose_type = ele.dose_type;\r\n                    dfuncObj.dose_while_heating = ele.dose_while_heating;\r\n                    dfuncObj.dosing_chemical = ele.dosing_chemical;\r\n                    this.rowChemicalData = [...dfuncObj.dosing_chemical];\r\n                  } else if (ele.func_value === 'pump') {\r\n                    pfuncObj.pump_speed = ele.pump_speed;\r\n                  } else if (ele.func_value === 'water') {\r\n                    wfuncObj.water_type = ele.water_type;\r\n                    wfuncObj.drain_type = ele.drain_type;\r\n                    wfuncObj.fabric_ratio = ele.fabric_ratio;\r\n                    wfuncObj.jet_level = ele.jet_level;\r\n                  } else if (ele.func_value === 'operator') {\r\n                    ofuncObj.operator_message = ele.operator_message;\r\n                    ofuncObj.operator_code = ele.operator_code;\r\n                    ofuncObj.start_at_temp = ele.start_at_temp;\r\n                  }\r\n                  let funcObj = new FunctionObj();\r\n                  funcObj.func_value = ele.func_value;\r\n                  funcObj.func_position = ele.func_position;\r\n                  funcObj.func_name = ele.func_name;\r\n                  funcObj.dosingFunction = dfuncObj;\r\n                  funcObj.waterDrainFunction = wfuncObj;\r\n                  funcObj.tempFunction = tfuncObj;\r\n                  funcObj.pumpMotorFunction = pfuncObj;\r\n                  funcObj.operatorFunction = ofuncObj;\r\n                  this.stepList[stepIndex].functionList.push(funcObj);\r\n                }\r\n              })\r\n            }\r\n          } else {\r\n            this.toasterService.error(data.message);\r\n          }\r\n        }, error => {\r\n          this.toasterService.error('Server Error');\r\n        });\r\n    } else {\r\n      this.subBtnName = 'Save';\r\n      this.topHeader = 'Add Process';\r\n    }\r\n  }\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.stepList, event.previousIndex, event.currentIndex);\r\n    this.stepList.forEach((ele, index) => {\r\n      ele.step_position = index + 1;\r\n    })\r\n  }\r\n  dropFunction(event: CdkDragDrop<string[]>, step_position) {\r\n    moveItemInArray(this.stepList[step_position - 1].functionList, event.previousIndex, event.currentIndex);\r\n    this.stepList[step_position - 1].functionList.forEach((ele, index) => {\r\n      ele.func_position = index + 1;\r\n    })\r\n  }\r\n  onEditStep(step) {\r\n    const modalRef = this._modalService.open(AddStepComponent);\r\n    modalRef.componentInstance.position = step.step_position;\r\n    modalRef.componentInstance.stepList = this.stepList;\r\n    modalRef.componentInstance.editStep = true;\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          this.stepList[step.step_position - 1].step_name = result.name;\r\n        }\r\n      });\r\n  }\r\n  onEditFunction(func) {\r\n    const modalRef = this._modalService.open(AddEditFunctionComponent);\r\n    let functionList = this.stepList[this.selectedStep - 1].functionList;\r\n    modalRef.componentInstance.position = func.func_position;\r\n    modalRef.componentInstance.functionList = functionList;\r\n    modalRef.componentInstance.editFunction = true;\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          functionList[func.func_position - 1] = result;\r\n        }\r\n      });\r\n  }\r\n  onDeleteStep(step) {\r\n    let i = this.stepList.findIndex(v => v.step_position == step.step_position);\r\n    this.stepList.splice(i, 1);\r\n    // this.rowData = [...this.colourStockRecord]\r\n  }\r\n  onDeleteFunction(func) {\r\n    let functionList = this.stepList[this.selectedStep - 1].functionList;\r\n    let i = functionList.findIndex(v => v.func_position == func.func_position);\r\n    functionList.splice(i, 1);\r\n  }\r\n  onFunctionSelect(value) {\r\n    this.currentSelectedFunction = value;\r\n    this.addFunctionFlag = false;\r\n  }\r\n  onAddFunction(step?) {\r\n    if (step) {\r\n      this.selectedStep = step.step_position;\r\n    }\r\n    const modalRef = this._modalService.open(AddEditFunctionComponent);\r\n    let functionList = this.stepList[this.selectedStep - 1].functionList;\r\n    modalRef.componentInstance.position = functionList.length + 1;\r\n    modalRef.componentInstance.functionList = functionList;\r\n    modalRef.componentInstance.editFunction = false;\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          let func = new FunctionObj();\r\n          func = result;\r\n          if (!functionList.length || result.func_position == functionList.length + 1) {\r\n            functionList.push(func);\r\n          } else {\r\n            functionList.splice(result.func_position - 1, 0, func);\r\n          }\r\n        }\r\n      });\r\n  }\r\n  onAddStep() {\r\n    const modalRef = this._modalService.open(AddStepComponent);\r\n    modalRef.componentInstance.position = this.stepList.length + 1;\r\n    modalRef.componentInstance.stepList = this.stepList;\r\n    modalRef.componentInstance.editStep = false;\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          let step = new Step();\r\n          step.step_name = result.name;\r\n          step.step_position = result.position;\r\n          step.functionList = [];\r\n          if (!this.stepList.length || result.position == this.stepList.length + 1) {\r\n            this.stepList.push(step);\r\n          } else {\r\n            this.stepList.splice(result.position - 1, 0, step);\r\n          }\r\n        }\r\n      });\r\n  }\r\n  onStepClick(step) {\r\n    this.selectedStep = step.step_position;\r\n  }\r\n  onCustomFormSubmit(form: NgForm) {\r\n    this.dynamicProcessRecordReq = [];\r\n    if (this.stepList.length) {\r\n      this.stepList.forEach(step => {\r\n        if (step.functionList.length) {\r\n          step.functionList.forEach(func => {\r\n            let record = new DynamicProcessRecordReq();\r\n            record.control_id = step.control_id;\r\n            record.step_name = step.step_name;\r\n            record.step_position = step.step_position;\r\n            record.func_name = func.func_name;\r\n            record.func_value = func.func_value;\r\n            record.func_position = func.func_position;\r\n            record.water_type = func.waterDrainFunction ? func.waterDrainFunction.water_type : '';\r\n            record.fabric_ratio = func.waterDrainFunction ? func.waterDrainFunction.fabric_ratio : '';\r\n            record.jet_level = func.waterDrainFunction ? func.waterDrainFunction.jet_level : '';\r\n            record.drain_type = func.waterDrainFunction ? func.waterDrainFunction.drain_type : '';\r\n            record.set_value = func.tempFunction ? func.tempFunction.set_value : '';\r\n            record.rate_of_rise = func.tempFunction ? func.tempFunction.rate_of_rise : '';\r\n            record.hold_time = func.tempFunction ? func.tempFunction.hold_time : '';\r\n            record.pressure = func.tempFunction ? func.tempFunction.pressure : '';\r\n            record.pump_speed = func.pumpMotorFunction ? func.pumpMotorFunction.pump_speed : \"\";\r\n            record.fill_type = func.dosingFunction ? func.dosingFunction.fill_type : '';\r\n            record.dosing_percentage = func.dosingFunction ? func.dosingFunction.dosing_percentage : '';\r\n            record.have_dose = func.dosingFunction ? func.dosingFunction.have_dose : '';\r\n            record.dose_at_temp = func.dosingFunction ? func.dosingFunction.dose_at_temp : '';\r\n            record.dose_type = func.dosingFunction ? func.dosingFunction.dose_type : '';\r\n            record.dose_while_heating = func.dosingFunction ? func.dosingFunction.dose_while_heating : false;\r\n            record.operator_code = func.operatorFunction ? func.operatorFunction.operator_code : '';\r\n            record.operator_message = func.operatorFunction ? func.operatorFunction.operator_message : '';\r\n            record.start_at_temp = func.operatorFunction ? func.operatorFunction.start_at_temp : '';\r\n            record.dosing_chemical = func.dosingFunction ? func.dosingFunction.dosing_chemical : [];\r\n            this.dynamicProcessRecordReq.push(record)\r\n          })\r\n        }\r\n      });\r\n    }\r\n    this.processModal.process_req_record = [];\r\n    this.processModal.process_req_record = this.dynamicProcessRecordReq;\r\n    // for update\r\n    if (this.id) {\r\n      this.processModal.updated_by = this.currentUserId;\r\n      this.processService.updateDynamicProcess(this.processModal).subscribe(data => {\r\n        console.log(data)\r\n        if (!data[0].error) {\r\n          this.toasterService.success(data[0].message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/process/view-process-list']);\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    } else {\r\n      this.processModal.created_by = this.currentUserId;\r\n      this.processModal.user_head_id = this.currentUserHeadid;\r\n      console.log(this.processModal)\r\n      this.processService.addDynamicProcess(this.processModal).subscribe(data => {\r\n        data = data[0]\r\n        if (!data.error) {\r\n          this.toasterService.success(data.message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/process/view-process-list']);\r\n        } else {\r\n          this.toasterService.error(data.message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    }\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && ((charCode < 46 || charCode > 57) || charCode == 47)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProcessComponent } from './process.component';\r\nimport { ViewProcessComponent } from './view-process/view-process.component';\r\nimport { AddEditProcessComponent } from './add-edit-process/add-edit-process.component';\r\nimport { DynamicProcessComponent } from './dynamic-process/dynamic-process.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProcessComponent,\r\n    children: [\r\n      {\r\n        path: 'view-process-list',\r\n        component: ViewProcessComponent\r\n      },\r\n      {\r\n        path: 'add-process',\r\n        component: AddEditProcessComponent,\r\n      },\r\n      {\r\n        path: 'add-dynamic-process',\r\n        component: DynamicProcessComponent,\r\n      },\r\n      {\r\n        path: 'edit-dynamic-process/:id',\r\n        component: DynamicProcessComponent,\r\n      },\r\n      {\r\n        path: 'edit-process/:id',\r\n        component: AddEditProcessComponent,\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: 'view-process-list',\r\n        pathMatch: 'full',\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\n\r\nexport class ProcessRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Nlc3MvcHJvY2Vzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-process',\r\n  templateUrl: './process.component.html',\r\n  styleUrls: ['./process.component.scss']\r\n})\r\nexport class ProcessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ViewProcessComponent, CustomRendererProcessComponent } from './view-process/view-process.component';\r\nimport { ProcessComponent } from './process.component';\r\nimport { AddEditProcessComponent, CustomRendererScouringRecordComponent, CustomRendererColdWashRecordComponent, CustomRendererDyingRecordComponent, CustomRendererRCRecordComponent } from './add-edit-process/add-edit-process.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { ProcessRoutingModule } from './process-routing.module';\r\nimport { DynamicProcessComponent } from './dynamic-process/dynamic-process.component';\r\nimport { AddStepComponent } from './add-step/add-step.component';\r\nimport { AddEditFunctionComponent, CustomRendererChemicalRecordComponent } from './add-edit-function/add-edit-function.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProcessComponent,\r\n    AddEditProcessComponent,\r\n    ViewProcessComponent,\r\n    CustomRendererProcessComponent,\r\n    // CustomRendererScouringRecordComponent,\r\n    // CustomRendererColdWashRecordComponent,\r\n    // CustomRendererDyingRecordComponent,\r\n    // CustomRendererRCRecordComponent,\r\n    DynamicProcessComponent,\r\n    AddStepComponent,\r\n    AddEditFunctionComponent,\r\n    CustomRendererChemicalRecordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AgGridModule,\r\n    NgbModule,\r\n    Ng2SmartTableModule,\r\n    NgxDatatableModule,\r\n    NgSelectModule,\r\n    ThemeModule,\r\n    ProcessRoutingModule\r\n  ],\r\n  entryComponents: [\r\n    AddStepComponent,\r\n    CustomRendererProcessComponent,\r\n    // CustomRendererScouringRecordComponent,\r\n    // CustomRendererColdWashRecordComponent,\r\n    // CustomRendererDyingRecordComponent,\r\n    // CustomRendererRCRecordComponent,\r\n    AddEditFunctionComponent,\r\n    CustomRendererChemicalRecordComponent\r\n  ]\r\n})\r\nexport class ProcessModule { }\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>Process\\r\\n    <button style=\\\"float: right;margin-left: 10px\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onAddProcess()\\\">\\r\\n      Add Process\\r\\n    </button>\\r\\n    <button style=\\\"float: right;\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onExport()\\\">Export</button>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <div *ngIf=\\\"viewGroupDataPermission && !viewAllDataPermission\\\">\\r\\n      <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getProcessData($event)\\\">\\r\\n        <nb-radio [value]=\\\"1\\\">\\r\\n          View Own\\r\\n        </nb-radio>\\r\\n        <nb-radio [value]=\\\"2\\\">\\r\\n          View Group\\r\\n        </nb-radio>\\r\\n      </nb-radio-group>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"viewGroupDataPermission && viewAllDataPermission\\\">\\r\\n      <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getProcessData($event)\\\">\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"1\\\">\\r\\n          View Own\\r\\n        </nb-radio>\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"2\\\">\\r\\n          View Group\\r\\n        </nb-radio>\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"3\\\">\\r\\n          View All\\r\\n        </nb-radio>\\r\\n      </nb-radio-group>\\r\\n    </div>\\r\\n    <ag-grid-angular style=\\\"width: 100%; height:500px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowData\\\"\\r\\n      [columnDefs]=\\\"columnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='100' (gridReady)=\\\"onGridReady($event)\\\">\\r\\n    </ag-grid-angular>\\r\\n  </nb-card-body>\\r\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2Nlc3Mvdmlldy1wcm9jZXNzL3ZpZXctcHJvY2Vzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ViewReqObj } from '../../../@theme/model/user-class';\r\nimport { Quality } from '../../../@theme/model/quality-class';\r\nimport { Party } from '../../../@theme/model/party-class';\r\nimport { ProcessService } from '../../../@theme/services/process.service';\r\nimport { PermissionService } from '../../../@theme/services/permission.service';\r\nimport { QualityService } from '../../../@theme/services/quality.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Papa } from 'ngx-papaparse';\r\nimport { PartyService } from '../../../@theme/services/party.service';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport * as XLSX from 'xlsx';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\r\nimport { DynamicProcessReq } from '../../../@theme/model/process-planning-class';\r\n\r\n@Component({\r\n  selector: 'ngx-view-process',\r\n  templateUrl: './view-process.component.html',\r\n  styleUrls: ['./view-process.component.scss']\r\n})\r\nexport class ViewProcessComponent implements OnInit {\r\n\r\n  // processList: Process[] = [];\r\n  processList: DynamicProcessReq[] = [];\r\n  rowData;\r\n  gridApi;\r\n  gridColumnApi;\r\n  addProcessPermission = 1;\r\n  columnDefs = [\r\n    { headerName: 'Actions', field: 'entry_id', sortable: false, width: 120 },\r\n    { headerName: 'Process Name', field: 'process_name', sortable: true, filter: true },\r\n    { headerName: 'Process Time(Minutes)', field: 'time', sortable: true, filter: true },\r\n    { headerName: 'Created By', field: 'created_by', sortable: true, filter: true },\r\n    { headerName: 'Updated By', field: 'updated_by', sortable: true, filter: true },\r\n  ];\r\n  columnExportDefs = [\r\n    'process_name', 'no_dying_bath', 'dc_multiplying_fac', 'created_by', 'updated_by'];\r\n  currentUserId: any;\r\n  currentUser$: Subscription;\r\n  currentUserPermission = [];\r\n  currentUser;\r\n  viewAllDataPermission: any = false;\r\n  viewOwnDataPermission: any = false;\r\n  viewGroupDataPermission = false;\r\n  radioSelected: any = 1;\r\n  currentUserGroupUserIds: any;\r\n  processReqObj = new ViewReqObj();\r\n  qualityViewReqObj = new ViewReqObj();\r\n  qualityList: Quality[] = [];\r\n  partyNameList: Party[] = [];\r\n  viewPartyReqOb = new ViewReqObj();\r\n\r\n  constructor(private processService: ProcessService, private router: Router, private tosterService: ToastrService\r\n    , private permissionService: PermissionService, private papa: Papa, private authService: AuthService,\r\n    private qualityService: QualityService, private partyService: PartyService) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.currentUserPermission = ele.user_permission;\r\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\r\n      }\r\n    });\r\n    this.setColumns();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    if (this.currentUserPermission.length) {\r\n      this.currentUserPermission.forEach(ele => {\r\n        if (ele.form_name === 'Process') {\r\n          this.addProcessPermission = 1;\r\n          this.viewAllDataPermission = ele.can_view_all;\r\n          this.viewGroupDataPermission = ele.can_view_group;\r\n          this.viewOwnDataPermission = ele.can_view;\r\n\r\n          this.processReqObj.current_user_id = this.currentUserId;\r\n          this.processReqObj.user_head_id = this.currentUser.user_head_id;\r\n          this.processReqObj.group_user_ids = this.currentUserGroupUserIds;\r\n        }\r\n      })\r\n    }\r\n    this.getQualityData();\r\n    this.getPartyList();\r\n    this.getProcessData();\r\n  }\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n  getPartyList() {\r\n    this.partyNameList = [];\r\n    this.viewPartyReqOb.view_group = true;\r\n    this.viewPartyReqOb.current_user_id = this.currentUserId;\r\n    this.viewPartyReqOb.user_head_id = this.currentUser.user_head_id;\r\n    this.viewPartyReqOb.group_user_ids = this.currentUserGroupUserIds;\r\n    this.partyService.getPartyList(this.viewPartyReqOb).subscribe(\r\n      data => {\r\n        if (!data[0].error) {\r\n          this.partyNameList = data[0].data;\r\n        } else {\r\n          this.tosterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.tosterService.error(error);\r\n      });\r\n  }\r\n  getQualityData() {\r\n    this.qualityViewReqObj.current_user_id = this.currentUserId;\r\n    this.qualityViewReqObj.user_head_id = this.currentUser.user_head_id;\r\n    this.qualityViewReqObj.group_user_ids = this.currentUserGroupUserIds;\r\n    this.qualityViewReqObj.view_group = true;\r\n    this.qualityService.getAllQualityData(this.qualityViewReqObj).subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.qualityList = data[0].data;\r\n      }\r\n    })\r\n  }\r\n  getProcessData(value?) {\r\n    this.processReqObj.view_all = false;\r\n    this.processReqObj.view_group = false;\r\n    this.processReqObj.view_own = false;\r\n\r\n    if (value)\r\n      this.radioSelected = value;\r\n\r\n    //check which radio button is selected\r\n    if (this.radioSelected == 1)\r\n      this.processReqObj.view_own = true;\r\n    else if (this.radioSelected == 2)\r\n      this.processReqObj.view_group = true;\r\n    else if (this.radioSelected == 3)\r\n      this.processReqObj.view_all = true;\r\n\r\n    this.processService.getAllDynamicProcesss(this.processReqObj).subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.processList = data[0].data;\r\n        this.rowData = this.processList;\r\n      } else {\r\n        this.tosterService.error(data[0].message);\r\n      }\r\n    });\r\n  }\r\n  setColumns() {\r\n    this.columnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'entry_id') {\r\n        column.cellRendererFramework = CustomRendererProcessComponent;\r\n        column.cellRendererParams = {\r\n          inRouterLink: '/pages/process/edit-dynamic-process/',\r\n          inViewLink: '/pages/process/view-process/',\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    // this.getUserList(this.currentUserId);\r\n  }\r\n  onAddProcess() {\r\n    if (this.addProcessPermission) {\r\n      this.router.navigate(['/pages/process/add-dynamic-process']);\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to add process. If you want to add process ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n  onExport() {\r\n    var params = {\r\n      columnKeys: this.columnExportDefs\r\n    };\r\n    var data = this.gridApi.getDataAsCsv(params);\r\n    this.papa.parse(data, {\r\n      complete: (result) => {\r\n        this.exportExcel(result.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  exportExcel(data) {\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    XLSX.writeFile(workbook, 'my_file.xls', { bookType: 'xls', type: 'buffer' });\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editProcess()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteProcess()\"></i>`,\r\n  styleUrls: ['./view-process.component.scss']\r\n})\r\n\r\nexport class CustomRendererProcessComponent implements AgRendererComponent, OnDestroy {\r\n  params: any;\r\n  editProcessPermission = 1;\r\n  deleteProcessPermission = 1;\r\n  currentUserId: any;\r\n  currentUser$: Subscription;\r\n  currentUserPermission = [];\r\n  currentUser;\r\n\r\n  constructor(private router: Router, private _modalService: NgbModal, private processService: ProcessService,\r\n    private toasterService: ToastrService, private permissionService: PermissionService, private authService: AuthService) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserPermission = ele.user_permission;\r\n      }\r\n    });\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.currentUserPermission.forEach(ele => {\r\n      if (ele.form_name === 'Process') {\r\n        if (this.params.action.radioSelected == 1) {\r\n          this.editProcessPermission = ele.can_edit;\r\n          this.deleteProcessPermission = ele.can_delete;\r\n        } else if (this.params.action.radioSelected == 2) {\r\n          this.editProcessPermission = ele.can_edit_group;\r\n          this.deleteProcessPermission = ele.can_delete_group;\r\n        } else if (this.params.action.radioSelected == 3) {\r\n          this.editProcessPermission = ele.can_edit_all;\r\n          this.deleteProcessPermission = ele.can_delete_all;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  viewProcess() {\r\n  }\r\n\r\n  editProcess() {\r\n    if (this.editProcessPermission) {\r\n      this.router.navigate([this.params.inRouterLink + this.params.value]);\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to edit process. If you want to edit process ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n  onDeleteProcess() {\r\n    if (this.deleteProcessPermission) {\r\n      const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n      modalRef.componentInstance.titleFrom = 'Delete Process ';\r\n      modalRef.componentInstance.message = 'Are you sure you want to delete this process?';\r\n      modalRef.result\r\n        .then((result) => {\r\n          if (result) {\r\n            const id = this.params.value;\r\n            this.processService.deleteDynamicProcessById(id).subscribe(data => {\r\n              if (!data[0].error) {\r\n                this.params.action.getProcessData();\r\n                this.toasterService.success(data[0].message);\r\n              } else {\r\n                this.toasterService.error(data[0].message);\r\n              }\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to delete process. If you want to delete process ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}