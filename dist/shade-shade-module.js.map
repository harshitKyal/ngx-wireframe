{"version":3,"sources":["webpack:///./src/app/@theme/model/shade-class.ts","webpack:///./src/app/@theme/services/shade.service.ts","webpack:///./src/app/pages/shade/add-edit-shade/add-edit-shade.component.html","webpack:///./src/app/pages/shade/add-edit-shade/add-edit-shade.component.scss","webpack:///./src/app/pages/shade/add-edit-shade/add-edit-shade.component.ts","webpack:///./src/app/pages/shade/shade-routing.module.ts","webpack:///./src/app/pages/shade/shade.component.html","webpack:///./src/app/pages/shade/shade.component.scss","webpack:///./src/app/pages/shade/shade.component.ts","webpack:///./src/app/pages/shade/shade.module.ts","webpack:///./src/app/pages/shade/view-shade-list/view-shade-list.component.html","webpack:///./src/app/pages/shade/view-shade-list/view-shade-list.component.scss","webpack:///./src/app/pages/shade/view-shade-list/view-shade-list.component.ts"],"names":[],"mappings":"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","file":"shade-shade-module.js","sourcesContent":["export class Shade {\r\n    entry_id: any;\r\n    party_shade_no: any;\r\n    process_id: any;\r\n    quality_id: any;\r\n    quality_entry_id: any;\r\n    quality_name: any;\r\n    process_name:any;\r\n    quality_type: any;\r\n    party_name: any;\r\n    colour_tone: any;\r\n    shade_record: ShadeRecord[];\r\n    created_date: any;\r\n    updated_date: any;\r\n    created_by: any;\r\n    updated_by: any;\r\n    cutting_id: any;\r\n    lab_colour_no: any;\r\n    category: any;\r\n    remark: any;\r\n    user_head_id: any;\r\n}\r\n\r\nexport class ShadeRecord {\r\n    index: any;\r\n    entry_id: any;\r\n    control_id: any;\r\n    supplier_item_id: any;\r\n    item_name: any;\r\n    supplier_name: any;\r\n    concentration: any;\r\n    rate: any;\r\n    amount: any;\r\n    created_date: any;\r\n    updated_date: any;\r\n    created_by: any;\r\n    updated_by: any;\r\n}","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShadeService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  getAllShades(shadeReqObj) {\r\n    return this.apiService.apiCaller('post', '/shadeList', shadeReqObj);\r\n  }\r\n  getShadesByFilter(shadeReqObj) {\r\n    return this.apiService.apiCaller('post', '/shadeFilterList', shadeReqObj);\r\n  }\r\n\r\n  getShadesByQualityId(shadeReqObj) {\r\n    return this.apiService.apiCaller('post', '/shadeListByQualityId', shadeReqObj);\r\n  }\r\n\r\n  addShade(shade) {\r\n    return this.apiService.apiCaller('post', '/addShade', shade);\r\n  }\r\n\r\n  getShadeById(id) {\r\n    return this.apiService.apiCaller('get', '/getShadeById/' + id);\r\n  }\r\n\r\n  checkPartyShadeNo(id) {\r\n    return this.apiService.apiCaller('get', '/checkPartyShadeNo/' + id);\r\n  }\r\n\r\n  updateShade(shade) {\r\n    return this.apiService.apiCaller('post', '/updateShade', shade);\r\n  }\r\n\r\n  deleteShadeById(id) {\r\n    return this.apiService.apiCaller('get', '/deleteShade/' + id);\r\n  }\r\n}\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>{{topHeader}}\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form #vform=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Party Shade No.</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"shadeModal.party_shade_no\\\" name=\\\"partyShadeNo\\\"\\r\\n            (change)=\\\"onPartyShadeChange($event.target.value)\\\"  #ShadeNo=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"ShadeNo.invalid && (ShadeNo.dirty || ShadeNo.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"ShadeNo.errors && ShadeNo.errors.required\\\">\\r\\n                Party Shade No. is required.\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"(ShadeNo.dirty || ShadeNo.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"isSamePartyShadeNo\\\">\\r\\n                Party Shade No. already Exists.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Process Name</label>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"shadeModal.process_id\\\" name=\\\"processId\\\" #ProcessName=\\\"ngModel\\\"\\r\\n              required>\\r\\n              <option disabled value=\\\"\\\">Select Process\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let process of processNameList\\\" [value]=\\\"process.entry_id\\\">\\r\\n                {{process.process_name}}\\r\\n              </option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"ProcessName.invalid && (ProcessName.dirty || ProcessName.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"ProcessName.errors && ProcessName.errors.required\\\">\\r\\n                Process Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Quality Id</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Select Quality Id\\\" name=\\\"ID\\\" autocomplete=\\\"off\\\"\\r\\n              [(ngModel)]=\\\"shadeModal.quality_id\\\" (click)=\\\"HideShow()\\\">\\r\\n            <div *ngIf=\\\"flagDiv\\\" class=\\\"dropdown\\\">\\r\\n              <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShow()\\\" class=\\\"float-right\\\">[X]</a>\\r\\n              <table class=\\\"table table-bordered pointer table-responsive\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Quality Id</th>\\r\\n                    <th>Quality Name</th>\\r\\n                    <th>Quality Type</th>\\r\\n                    <th>Party Name</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let quality of qualityList; let i = index\\\" (click)=\\\"selectQualityId(quality)\\\"\\r\\n                    class=\\\"pointer\\\">\\r\\n                    <td style=\\\"display:none;\\\">{{quality.quality_id}}</td>\\r\\n                    <td>{{quality.quality_id}}</td>\\r\\n                    <td>{{quality.quality_name}}</td>\\r\\n                    <td>{{quality.quality_type}}</td>\\r\\n                    <td>{{quality.party_name}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Quality Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled [(ngModel)]=\\\"shadeModal.quality_name\\\" name=\\\"qualityName\\\"\\r\\n              #qualityname=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"qualityname.invalid && (qualityname.dirty || qualityname.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"qualityname.errors && qualityname.errors.required\\\">\\r\\n                Quality Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Quality Type</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled [(ngModel)]=\\\"shadeModal.quality_type\\\" name=\\\"qualityType\\\"\\r\\n              #qualitytype=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"qualitytype.invalid && (qualitytype.dirty || qualitytype.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"qualitytype.errors && qualitytype.errors.required\\\">\\r\\n                Quality Type is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Party Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled [(ngModel)]=\\\"shadeModal.party_name\\\" name=\\\"partyName\\\"\\r\\n              #partyname=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"partyname.invalid && (partyname.dirty || partyname.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"partyname.errors && partyname.errors.required\\\">\\r\\n                Party Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Color Tone</label>\\r\\n            <!-- pattern -->\\r\\n            <input [(colorPicker)]=\\\"shadeModal.colour_tone\\\" [style.background]=\\\"shadeModal.colour_tone\\\" class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"shadeModal.colour_tone\\\" name=\\\"tone\\\" #colortone=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"colortone.invalid && (colortone.dirty || colortone.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"colortone.errors && colortone.errors.required\\\">\\r\\n                Color Tone is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Lab Colour No.</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"shadeModal.lab_colour_no\\\" name=\\\"labColourNo\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Category</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"shadeModal.category\\\" name=\\\"Category\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Remark</label>\\r\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"shadeModal.remark\\\" name=\\\"Remark\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n      <div class=\\\"row table table-responsive\\\" *ngIf=\\\"shadeRecord.length\\\">\\r\\n        <ag-grid-angular style=\\\"width: 100%; height:300px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowData\\\"\\r\\n          [columnDefs]=\\\"columnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='10'>\\r\\n        </ag-grid-angular>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <form #sform=\\\"ngForm\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Item Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Select Item Name\\\" name=\\\"itemName\\\"\\r\\n                  autocomplete=\\\"off\\\" [(ngModel)]=\\\"record.item_name\\\" (click)=\\\"HideShowSubForm()\\\" required\\r\\n                  #itemname=\\\"ngModel\\\">\\r\\n                <div *ngIf=\\\"flagDivSubForm\\\" class=\\\"dropdown\\\">\\r\\n                  <a href=\\\"javascript:void(0)\\\" (click)=\\\"HideShowSubForm()\\\" class=\\\"float-right\\\">[X]</a>\\r\\n                  <table class=\\\"table table-bordered pointer table-responsive\\\">\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th>Item Name</th>\\r\\n                        <th>Supplier Name</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let item of supplierItemList; let i = index\\\" (click)=\\\"selectItem(item)\\\"\\r\\n                        class=\\\"pointer\\\">\\r\\n                        <td style=\\\"display:none;\\\">{{item.entry_id}}</td>\\r\\n                        <td>{{item.item_name}}</td>\\r\\n                        <td>{{item.supplier_name}}</td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"itemname.invalid && (itemname.dirty || itemname.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"itemname.errors && itemname.errors.required\\\">\\r\\n                    Item Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Concentration</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.concentration\\\" name=\\\"conctration\\\"\\r\\n                  #Concentration=\\\"ngModel\\\" required (change)=\\\"onConcentrationChange($event.target.value)\\\" />\\r\\n                <div *ngIf=\\\"Concentration.invalid && (Concentration.dirty || Concentration.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"Concentration.errors && Concentration.errors.required\\\">\\r\\n                    Concentration is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Supplier Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" disabled [(ngModel)]=\\\"record.supplier_name\\\" name=\\\"supplerName\\\"\\r\\n                  #SupplierName=\\\"ngModel\\\" required />\\r\\n                <div *ngIf=\\\"SupplierName.invalid && (SupplierName.dirty || SupplierName.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"SupplierName.SupplierName && SupplierName.errors.required\\\">\\r\\n                    Supplier Name is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"isAdmin\\\" class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Rate</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.rate\\\" name=\\\"rt\\\" #Rate=\\\"ngModel\\\" disabled\\r\\n                  (keypress)=\\\"numberOnly($event)\\\" digits required />\\r\\n                <div *ngIf=\\\"Rate.invalid && (Rate.dirty || Rate.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"Rate.errors && Rate.errors.required\\\">\\r\\n                    Rate is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"isAdmin\\\" class=\\\"col-md-2\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Amount</label>\\r\\n                <input disabled type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"record.amount\\\" name=\\\"Amnt\\\"\\r\\n                  #Amount=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\" digits required />\\r\\n                <div *ngIf=\\\"Amount.invalid && (Amount.dirty || Amount.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"Amount.errors && Amount.errors.required\\\">\\r\\n                    Amount is required.\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n              <button [disabled]=\\\"sform.invalid\\\" style=\\\"margin-top: 32px;\\\" nbButton (click)=\\\"onAddRecord(sform)\\\">Add\\r\\n                Record</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"box-footer\\\">\\r\\n        <button [disabled]=\\\"vform.invalid || isSamePartyShadeNo\\\" nbButton (click)=\\\"onCustomFormSubmit(vform)\\\">{{subBtnName}}</button>\\r\\n        &nbsp;\\r\\n        <button nbButton type=\\\"reset\\\" routerLink='/pages/shade/view-shade-list' id=\\\"Cancel\\\">Cancel</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NoYWRlL2FkZC1lZGl0LXNoYWRlL2FkZC1lZGl0LXNoYWRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { Shade, ShadeRecord } from '../../../@theme/model/shade-class';\r\nimport { Party } from '../../../@theme/model/party-class';\r\nimport { Quality } from '../../../@theme/model/quality-class';\r\nimport { ViewReqObj, User } from '../../../@theme/model/user-class';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PartyService } from '../../../@theme/services/party.service';\r\nimport { QualityService } from '../../../@theme/services/quality.service';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ShadeService } from '../../../@theme/services/shade.service';\r\nimport { Supplier, SupplierItemRecord } from '../../../@theme/model/supplier-class';\r\nimport { SupplierService } from '../../../@theme/services/supplier.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\nimport { Process } from '../../../@theme/model/process-class';\r\nimport { ProcessService } from '../../../@theme/services/process.service';\r\nimport { DynamicProcessReq } from '../../../@theme/model/process-planning-class';\r\n\r\n@Component({\r\n  selector: 'ngx-add-edit-shade',\r\n  templateUrl: './add-edit-shade.component.html',\r\n  styleUrls: ['./add-edit-shade.component.scss']\r\n})\r\nexport class AddEditShadeComponent implements OnInit, OnDestroy {\r\n\r\n  isAdmin = false;\r\n  shadeModal: Shade;\r\n  flagDivSubForm = false;\r\n  flagDiv = false;\r\n  id: any;\r\n  subBtnName = '';\r\n  topHeader = '';\r\n  viewFlag = false;\r\n  rowData: any;\r\n  shadeRecord: ShadeRecord[] = [];\r\n  record: ShadeRecord;\r\n  qualityList: Quality[] = [];\r\n  partyNameList: Party[] = [];\r\n  processNameList: DynamicProcessReq[] = [];\r\n  currentUserId: any;\r\n  currentUserHeadid: any;\r\n  currentUser$: Subscription;\r\n  currentUser: User;\r\n  currentUserGroupUserIds: any;\r\n  supplierItemList: SupplierItemRecord[] = [];\r\n  qualityViewReqObj = new ViewReqObj();\r\n  viewPartyReqOb = new ViewReqObj();\r\n  isSamePartyShadeNo = false;\r\n\r\n  columnDefs = [\r\n    { headerName: 'Actions', field: 'index' },\r\n    { headerName: 'Item Name', field: 'item_name' },\r\n    { headerName: 'Cocentration', field: 'concentration' },\r\n    { headerName: 'Supplier Name', field: 'supplier_name' },\r\n    { headerName: 'Rate', field: 'rate' },\r\n    { headerName: 'Amount', field: 'amount' },\r\n\r\n  ];\r\n  constructor(private toasterService: ToastrService, private route: ActivatedRoute, private supplierService: SupplierService,\r\n    private router: Router, private shadeService: ShadeService, private qualityService: QualityService,\r\n    private authService: AuthService, private partyService: PartyService, private processService: ProcessService) {\r\n    this.shadeModal = new Shade();\r\n    this.record = new ShadeRecord();\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\r\n        if (ele.user.user_name === \"admin\") {\r\n          this.isAdmin = true;\r\n        }\r\n      }\r\n    });\r\n    this.setColumns();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n  ngOnInit() {\r\n    this.getPartyList();\r\n    this.getQuality();\r\n    this.getSupplierItemList();\r\n    this.getProcessList();\r\n    this.onPageLoad();\r\n  }\r\n\r\n  setColumns() {\r\n    this.columnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'index') {\r\n        column.cellRendererFramework = CustomRendererShadeRecordComponent;\r\n        column.cellRendererParams = {\r\n          // inRouterLink: '/user/edit-user/',\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n  onPartyShadeChange(value) {\r\n    this.shadeService.checkPartyShadeNo(value).subscribe(\r\n      data => {\r\n        if (!data[0].error) {\r\n          this.isSamePartyShadeNo = data[0].data.length ? true : false;\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error(error);\r\n      });\r\n  }\r\n  getPartyList() {\r\n    this.partyNameList = [];\r\n    this.viewPartyReqOb.view_group = true;\r\n    this.viewPartyReqOb.current_user_id = this.currentUserId;\r\n    this.viewPartyReqOb.user_head_id = this.currentUser.user_head_id;\r\n    this.viewPartyReqOb.group_user_ids = this.currentUserGroupUserIds;\r\n    this.partyService.getPartyList(this.viewPartyReqOb).subscribe(\r\n      data => {\r\n        if (!data[0].error) {\r\n          this.partyNameList = data[0].data;\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error(error);\r\n      });\r\n  }\r\n  getProcessList() {\r\n    this.processNameList = [];\r\n    this.viewPartyReqOb.view_group = true;\r\n    this.viewPartyReqOb.current_user_id = this.currentUserId;\r\n    this.viewPartyReqOb.user_head_id = this.currentUser.user_head_id;\r\n    this.viewPartyReqOb.group_user_ids = this.currentUserGroupUserIds;\r\n    this.processService.getAllDynamicProcesss(this.viewPartyReqOb).subscribe(\r\n      data => {\r\n        if (!data[0].error) {\r\n          this.processNameList = data[0].data;\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error(error);\r\n      });\r\n  }\r\n  getQuality() {\r\n    this.qualityViewReqObj.current_user_id = this.currentUserId;\r\n    this.qualityViewReqObj.user_head_id = this.currentUser.user_head_id;\r\n    this.qualityViewReqObj.group_user_ids = this.currentUserGroupUserIds;\r\n    this.qualityViewReqObj.view_group = true;\r\n    this.qualityService.getAllQualityData(this.qualityViewReqObj).subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.qualityList = data[0].data;\r\n        if (this.qualityList.length) {\r\n          this.qualityList.forEach(ele => {\r\n            let partyIndex = this.partyNameList.findIndex(v => v.entry_id == ele.party_id);\r\n            if (partyIndex > -1) {\r\n              ele.party_name = this.partyNameList[partyIndex].party_name;\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getSupplierItemList() {\r\n    this.supplierService.getAllSupplierItemData().subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.supplierItemList = data[0].data;\r\n      }\r\n    })\r\n  }\r\n  selectItem(item) {\r\n    this.flagDivSubForm = false;\r\n    const i = this.supplierItemList.findIndex(v => v.entry_id == item.entry_id);\r\n    this.record.supplier_item_id = this.supplierItemList[i].entry_id;\r\n    this.record.item_name = this.supplierItemList[i].item_name;\r\n    this.record.supplier_name = this.supplierItemList[i].supplier_name;\r\n  }\r\n\r\n  selectQualityId(value) {\r\n    this.flagDiv = false;\r\n    let i = this.qualityList.findIndex(v => v.entry_id == value.entry_id);\r\n    this.shadeModal.quality_id = this.qualityList[i].quality_id;\r\n    this.shadeModal.quality_entry_id = this.qualityList[i].entry_id;\r\n    this.shadeModal.quality_type = this.qualityList[i].quality_type;\r\n    this.shadeModal.quality_name = this.qualityList[i].quality_name;\r\n    let partyIndex = this.partyNameList.findIndex(v => v.entry_id == this.qualityList[i].party_id);\r\n    if (partyIndex > -1) {\r\n      this.shadeModal.party_name = this.partyNameList[partyIndex].party_name;\r\n    }\r\n  }\r\n  HideShowSubForm() {\r\n    this.flagDivSubForm = !this.flagDivSubForm;\r\n  }\r\n  HideShow() {\r\n    this.flagDiv = !this.flagDiv;\r\n  }\r\n\r\n  onPageLoad() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    if (this.id != null) {\r\n      if (this.id) {\r\n        this.subBtnName = 'Update';\r\n        this.topHeader = 'Edit Shade';\r\n\r\n      } else {\r\n        this.topHeader = 'Shade View';\r\n        this.viewFlag = true;\r\n      }\r\n      this.shadeService.getShadeById(this.id).subscribe(\r\n        data => {\r\n          if (!data[0].error) {\r\n            this.shadeModal = data[0].data.shade[0];\r\n\r\n            this.shadeRecord = data[0].data.shade_record\r\n            let i = this.qualityList.findIndex(v => v.entry_id == this.shadeModal.quality_id);\r\n            this.shadeModal.quality_name = this.qualityList[i].quality_name;\r\n            this.shadeModal.quality_id = this.qualityList[i].quality_id;\r\n            this.shadeModal.quality_entry_id = this.qualityList[i].entry_id;\r\n            this.shadeModal.quality_type = this.qualityList[i].quality_type;\r\n            let partyIndex = this.partyNameList.findIndex(v => v.entry_id == this.qualityList[i].party_id);\r\n            if (partyIndex > -1) {\r\n              this.shadeModal.party_name = this.partyNameList[partyIndex].party_name;\r\n            }\r\n            this.shadeRecord.forEach((ele, index) => {\r\n              ele.index = index + 1;\r\n              // let i = this.supplierItemList.findIndex(v => v.item_name == ele.item_name);\r\n              // ele.supplier_name = this.supplierItemList[i].supplier_name;\r\n              // ele.item_name = this.supplierItemList[i].item_name;\r\n            })\r\n            this.rowData = [...this.shadeRecord]\r\n            this.shadeModal.shade_record = this.shadeRecord\r\n          } else {\r\n            this.toasterService.error(data.message);\r\n          }\r\n        }, error => {\r\n          this.toasterService.error('Server Error');\r\n        });\r\n    } else {\r\n      this.subBtnName = 'Save';\r\n      this.topHeader = 'Add Shade';\r\n    }\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && ((charCode < 46 || charCode > 57) || charCode == 47)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  onAddRecord(form: NgForm) {\r\n    let flag = 0;\r\n    let j = 1;\r\n    if (!this.shadeRecord.length) {\r\n      this.record.index = j;\r\n    } else if (this.record.index == undefined) {\r\n      this.record.index = this.shadeRecord.length + 1;\r\n    }\r\n    this.shadeRecord.forEach(ele => {\r\n      if (ele.index == this.record.index) {\r\n        ele = this.record\r\n        flag = 1;\r\n      }\r\n    });\r\n    if (!flag) {\r\n      this.shadeRecord.push(this.record);\r\n    }\r\n    this.rowData = [...this.shadeRecord];\r\n    this.record = new ShadeRecord();\r\n    form.resetForm();\r\n  }\r\n\r\n  onEditRecord(data) {\r\n    let i = this.shadeRecord.findIndex(v => v.index == data);\r\n    this.record = this.shadeRecord[i];\r\n  }\r\n\r\n  deleteRecord(data) {\r\n    let i = this.shadeRecord.findIndex(v => v.index == data);\r\n    this.shadeRecord.splice(i, 1);\r\n    this.rowData = [...this.shadeRecord]\r\n  }\r\n\r\n  onConcentrationChange(value) {\r\n    let i = this.supplierItemList.findIndex(v => v.entry_id == this.record.supplier_item_id);\r\n    this.record.rate = this.supplierItemList[i].gst_rate;\r\n    this.record.amount = this.supplierItemList[i].gst_rate * value;\r\n  }\r\n\r\n  onCustomFormSubmit(form: NgForm) {\r\n    this.shadeModal.quality_id = this.shadeModal.quality_entry_id;\r\n    this.shadeModal.shade_record = this.shadeRecord;\r\n    console.log('shade', this.shadeModal);\r\n    // for update\r\n    if (this.id) {\r\n      this.shadeModal.updated_by = this.currentUserId;\r\n      this.shadeService.updateShade(this.shadeModal).subscribe(data => {\r\n        console.log(data)\r\n        if (!data[0].error) {\r\n          this.toasterService.success(data[0].message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/shade/view-shade-list']);\r\n        } else {\r\n          this.toasterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    } else {\r\n      this.shadeModal.created_by = this.currentUserId;\r\n      this.shadeModal.user_head_id = this.currentUserHeadid;\r\n      console.log(this.shadeModal)\r\n      this.shadeService.addShade(this.shadeModal).subscribe(data => {\r\n        data = data[0]\r\n        if (!data.error) {\r\n          this.toasterService.success(data.message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/shade/view-shade-list']);\r\n        } else {\r\n          this.toasterService.error(data.message);\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    }\r\n  }\r\n}\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editRecord()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteRecord()\"></i>`,\r\n  styleUrls: ['./add-edit-shade.component.scss']\r\n})\r\n\r\nexport class CustomRendererShadeRecordComponent implements AgRendererComponent {\r\n  params: any;\r\n\r\n  constructor(private _modalService: NgbModal, private toasterService: ToastrService) {\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  editRecord() {\r\n    this.params.action.onEditRecord(this.params.value)\r\n  }\r\n  onDeleteRecord() {\r\n    const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n    modalRef.componentInstance.titleFrom = 'Delete record ';\r\n    modalRef.componentInstance.message = 'Are you sure you want to delete this record?';\r\n    modalRef.result\r\n      .then((result) => {\r\n        if (result) {\r\n          this.params.action.deleteRecord(this.params.value)\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ShadeComponent } from './shade.component';\r\nimport { AddEditShadeComponent } from './add-edit-shade/add-edit-shade.component';\r\nimport { ViewShadeListComponent } from './view-shade-list/view-shade-list.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ShadeComponent,\r\n    children: [\r\n      {\r\n        path: 'view-shade-list',\r\n        component: ViewShadeListComponent\r\n      },\r\n      {\r\n        path: 'add-shade',\r\n        component: AddEditShadeComponent,\r\n      },\r\n      {\r\n        path: 'edit-shade/:id',\r\n        component: AddEditShadeComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\n\r\nexport class ShadeRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NoYWRlL3NoYWRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-shade',\r\n  templateUrl: './shade.component.html',\r\n  styleUrls: ['./shade.component.scss']\r\n})\r\nexport class ShadeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShadeComponent } from './shade.component';\r\nimport { AddEditShadeComponent, CustomRendererShadeRecordComponent } from './add-edit-shade/add-edit-shade.component';\r\nimport { ViewShadeListComponent, CustomRendererShadeInComponent } from './view-shade-list/view-shade-list.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { ShadeRoutingModule } from './shade-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ShadeComponent,\r\n    AddEditShadeComponent,\r\n    ViewShadeListComponent,\r\n    CustomRendererShadeInComponent,\r\n    CustomRendererShadeRecordComponent\r\n  ],\r\n  entryComponents: [\r\n    CustomRendererShadeInComponent,\r\n    CustomRendererShadeRecordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AgGridModule,\r\n    NgbModule,\r\n    Ng2SmartTableModule,\r\n    NgxDatatableModule,\r\n    NgSelectModule,\r\n    ThemeModule,\r\n    ShadeRoutingModule\r\n  ]\r\n})\r\nexport class ShadeModule { }\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>Shade\\r\\n    <button style=\\\"float: right;margin-left: 10px\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onAddShade()\\\">\\r\\n      Add Shade\\r\\n    </button>\\r\\n    <button style=\\\"float: right;\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onExport()\\\">Export</button>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <div *ngIf=\\\"viewGroupDataPermission && !viewAllDataPermission\\\">\\r\\n      <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getShadeData($event)\\\">\\r\\n        <nb-radio [value]=\\\"1\\\">\\r\\n          View Own\\r\\n        </nb-radio>\\r\\n        <nb-radio [value]=\\\"2\\\">\\r\\n          View Group\\r\\n        </nb-radio>\\r\\n      </nb-radio-group>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"viewGroupDataPermission && viewAllDataPermission\\\">\\r\\n      <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getShadeData($event)\\\">\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"1\\\">\\r\\n          View Own\\r\\n        </nb-radio>\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"2\\\">\\r\\n          View Group\\r\\n        </nb-radio>\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"3\\\">\\r\\n          View All\\r\\n        </nb-radio>\\r\\n      </nb-radio-group>\\r\\n    </div>\\r\\n    <ag-grid-angular style=\\\"width: 100%; height:500px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowData\\\"\\r\\n      [columnDefs]=\\\"columnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='100' (gridReady)=\\\"onGridReady($event)\\\">\\r\\n    </ag-grid-angular>\\r\\n  </nb-card-body>\\r\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NoYWRlL3ZpZXctc2hhZGUtbGlzdC92aWV3LXNoYWRlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PermissionService } from '../../../@theme/services/permission.service';\r\nimport { Papa } from 'ngx-papaparse';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\nimport { ViewReqObj } from '../../../@theme/model/user-class';\r\nimport { Shade } from '../../../@theme/model/shade-class';\r\nimport { ShadeService } from '../../../@theme/services/shade.service';\r\nimport { Quality } from '../../../@theme/model/quality-class';\r\nimport { QualityService } from '../../../@theme/services/quality.service';\r\nimport { element } from '@angular/core/src/render3';\r\nimport { Party } from '../../../@theme/model/party-class';\r\nimport { PartyService } from '../../../@theme/services/party.service';\r\nimport { DynamicProcessReq } from '../../../@theme/model/process-planning-class';\r\nimport { ProcessPlanningService } from '../../../@theme/services/process-planning.service';\r\nimport { ProcessService } from '../../../@theme/services/process.service';\r\n\r\n@Component({\r\n  selector: 'ngx-view-shade-list',\r\n  templateUrl: './view-shade-list.component.html',\r\n  styleUrls: ['./view-shade-list.component.scss']\r\n})\r\nexport class ViewShadeListComponent implements OnInit {\r\n\r\n  shadeList: Shade[] = [];\r\n  rowData;\r\n  gridApi;\r\n  gridColumnApi;\r\n  addShadePermission = 1;\r\n  columnDefs = [\r\n    { headerName: 'Actions', field: 'entry_id', sortable: false, width: 100 },\r\n    { headerName: 'Party Shade No.', field: 'party_shade_no', sortable: true, filter: true, width: 150 },\r\n    { headerName: 'Process Name', field: 'process_name', sortable: true, filter: true },\r\n    { headerName: 'Quality Id', field: 'quality_id', sortable: true, filter: true, width: 100 },\r\n    { headerName: 'Quality Name', field: 'quality_name', sortable: true, filter: true },\r\n    { headerName: 'Quality Type', field: 'quality_type', sortable: true, filter: true },\r\n    { headerName: 'Party Name', field: 'party_name', sortable: true, filter: true },\r\n    { headerName: 'Colour Tone', field: 'colour_tone', sortable: true, filter: true },\r\n  ];\r\n  columnExportDefs = [\r\n    'party_shade_no', 'process_name', 'quality_id', 'quality_name', 'quality_type', 'party_name', 'colour_tone'];\r\n  currentUserId: any;\r\n  currentUserGroupUserIds: any;\r\n  currentUser$: Subscription;\r\n  currentUserPermission = [];\r\n  currentUser;\r\n  viewAllDataPermission: any = false;\r\n  viewOwnDataPermission: any = false;\r\n  viewGroupDataPermission = false;\r\n  radioSelected: any = 1;\r\n  shadeReqObj = new ViewReqObj();\r\n  qualityViewReqObj = new ViewReqObj();\r\n  qualityList: Quality[] = [];\r\n  partyNameList: Party[] = [];\r\n  processNameList: DynamicProcessReq[] = [];\r\n  viewPartyReqOb = new ViewReqObj();\r\n\r\n  constructor(private shadeService: ShadeService, private router: Router, private tosterService: ToastrService\r\n    , private permissionService: PermissionService, private papa: Papa, private authService: AuthService,\r\n    private qualityService: QualityService, private partyService: PartyService, private processService: ProcessService) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.currentUserPermission = ele.user_permission;\r\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\r\n      }\r\n    });\r\n    this.setColumns();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    if (this.currentUserPermission.length) {\r\n      this.currentUserPermission.forEach(ele => {\r\n        if (ele.form_name === 'Shade') {\r\n          // this.addUserPermission = ele.can_add;\r\n          this.addShadePermission = 1;\r\n          this.viewAllDataPermission = ele.can_view_all;\r\n          this.viewGroupDataPermission = ele.can_view_group;\r\n          this.viewOwnDataPermission = ele.can_view;\r\n\r\n          this.shadeReqObj.current_user_id = this.currentUserId;\r\n          this.shadeReqObj.user_head_id = this.currentUser.user_head_id;\r\n          this.shadeReqObj.group_user_ids = this.currentUserGroupUserIds;\r\n        }\r\n      })\r\n    }\r\n    this.getPartyList();\r\n    this.getQualityData();\r\n    this.getProcessList();\r\n  }\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n\r\n  getPartyList() {\r\n    this.partyNameList = [];\r\n    this.viewPartyReqOb.view_group = true;\r\n    this.viewPartyReqOb.current_user_id = this.currentUserId;\r\n    this.viewPartyReqOb.user_head_id = this.currentUser.user_head_id;\r\n    this.viewPartyReqOb.group_user_ids = this.currentUserGroupUserIds;\r\n    this.partyService.getPartyList(this.viewPartyReqOb).subscribe(\r\n      data => {\r\n        if (!data[0].error) {\r\n          this.partyNameList = data[0].data;\r\n        } else {\r\n          this.tosterService.error(data[0].message);\r\n        }\r\n      }, error => {\r\n        this.tosterService.error(error);\r\n      });\r\n  }\r\n  getQualityData() {\r\n    this.qualityViewReqObj.current_user_id = this.currentUserId;\r\n    this.qualityViewReqObj.user_head_id = this.currentUser.user_head_id;\r\n    this.qualityViewReqObj.group_user_ids = this.currentUserGroupUserIds;\r\n    this.qualityViewReqObj.view_group = true;\r\n    this.qualityService.getAllQualityData(this.qualityViewReqObj).subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.qualityList = data[0].data;\r\n        if (this.qualityList.length) {\r\n          this.getShadeData();\r\n        }\r\n      }\r\n    })\r\n  }\r\n  getProcessList() {\r\n    this.processNameList = [];\r\n    this.viewPartyReqOb.view_group = true;\r\n    this.viewPartyReqOb.current_user_id = this.currentUserId;\r\n    this.viewPartyReqOb.user_head_id = this.currentUser.user_head_id;\r\n    this.viewPartyReqOb.group_user_ids = this.currentUserGroupUserIds;\r\n    this.processService.getAllDynamicProcesss(this.viewPartyReqOb).subscribe(\r\n      data => {\r\n        if (!data[0].error) {\r\n          this.processNameList = data[0].data;\r\n        }\r\n      }, error => {\r\n      });\r\n  }\r\n  getShadeData(value?) {\r\n\r\n    this.shadeReqObj.view_all = false;\r\n    this.shadeReqObj.view_group = false;\r\n    this.shadeReqObj.view_own = false;\r\n\r\n    if (value)\r\n      this.radioSelected = value;\r\n\r\n    //check which radio button is selected\r\n    if (this.radioSelected == 1)\r\n      this.shadeReqObj.view_own = true;\r\n    else if (this.radioSelected == 2)\r\n      this.shadeReqObj.view_group = true;\r\n    else if (this.radioSelected == 3)\r\n      this.shadeReqObj.view_all = true;\r\n\r\n    this.shadeService.getAllShades(this.shadeReqObj).subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.shadeList = data[0].data;\r\n        this.shadeList.forEach(ele => {\r\n          const i = this.qualityList.findIndex(v => v.entry_id == ele.quality_id);\r\n          if (i > -1) {\r\n            let partyIndex = this.partyNameList.findIndex(v => v.entry_id == this.qualityList[i].party_id);\r\n            if (partyIndex > -1) {\r\n              ele.party_name = this.partyNameList[partyIndex].party_name;\r\n            }\r\n            // ele.party_name = this.qualityList[i].party_name;\r\n            ele.quality_name = this.qualityList[i].quality_name;\r\n            ele.quality_type = this.qualityList[i].quality_type;\r\n          }\r\n          const j = this.processNameList.findIndex(v => v.entry_id == ele.process_id);\r\n          if (j > -1) {\r\n            ele.process_name = this.processNameList[j].process_name;\r\n          }\r\n        });\r\n        this.rowData = this.shadeList;\r\n      } else {\r\n        this.tosterService.error(data[0].message);\r\n      }\r\n    });\r\n  }\r\n  setColumns() {\r\n    this.columnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'entry_id') {\r\n        column.cellRendererFramework = CustomRendererShadeInComponent;\r\n        column.cellRendererParams = {\r\n          inRouterLink: '/pages/shade/edit-shade/',\r\n          inViewLink: '/pages/shade/view-shade/',\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    // this.getUserList(this.currentUserId);\r\n  }\r\n  onAddShade() {\r\n    if (this.addShadePermission) {\r\n      this.router.navigate(['/pages/shade/add-shade']);\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to add shade. If you want to add shade ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n  onExport() {\r\n    var params = {\r\n      columnKeys: this.columnExportDefs\r\n    };\r\n    var data = this.gridApi.getDataAsCsv(params);\r\n    this.papa.parse(data, {\r\n      complete: (result) => {\r\n        this.exportExcel(result.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  exportExcel(data) {\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    XLSX.writeFile(workbook, 'my_file.xls', { bookType: 'xls', type: 'buffer' });\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editShade()\"></i>\r\n  <i class=\"ft-info font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"viewShade()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red\" (click)=\"onDeleteShade()\"></i>`,\r\n  styleUrls: ['./view-shade-list.component.scss']\r\n})\r\n\r\nexport class CustomRendererShadeInComponent implements AgRendererComponent, OnDestroy {\r\n  params: any;\r\n  editShadePermission = 1;\r\n  deleteShadePermission = 1;\r\n  currentUserId: any;\r\n  currentUser$: Subscription;\r\n  currentUserPermission = [];\r\n  currentUser;\r\n\r\n  constructor(private router: Router, private _modalService: NgbModal, private shadeService: ShadeService,\r\n    private toasterService: ToastrService, private permissionService: PermissionService, private authService: AuthService) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserPermission = ele.user_permission;\r\n      }\r\n    });\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.currentUserPermission.forEach(ele => {\r\n      if (ele.form_name === 'Shade') {\r\n        if (this.params.action.radioSelected == 1) {\r\n          this.editShadePermission = ele.can_edit;\r\n          this.deleteShadePermission = ele.can_delete;\r\n        } else if (this.params.action.radioSelected == 2) {\r\n          this.editShadePermission = ele.can_edit_group;\r\n          this.deleteShadePermission = ele.can_delete_group;\r\n        } else if (this.params.action.radioSelected == 3) {\r\n          this.editShadePermission = ele.can_edit_all;\r\n          this.deleteShadePermission = ele.can_delete_all;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  viewShade() {\r\n  }\r\n\r\n  editShade() {\r\n    if (this.editShadePermission) {\r\n      this.router.navigate([this.params.inRouterLink + this.params.value]);\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to edit shade. If you want to edit shade ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n  onDeleteShade() {\r\n    if (this.deleteShadePermission) {\r\n      const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n      modalRef.componentInstance.titleFrom = 'Delete Shade ';\r\n      modalRef.componentInstance.message = 'Are you sure you want to delete this shade?';\r\n      modalRef.result\r\n        .then((result) => {\r\n          if (result) {\r\n            const id = this.params.value;\r\n            this.shadeService.deleteShadeById(id).subscribe(data => {\r\n              if (!data[0].error) {\r\n                this.params.action.getShadeData();\r\n                this.toasterService.success(data[0].message);\r\n              } else {\r\n                this.toasterService.error(data[0].message);\r\n              }\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to delete shade. If you want to delete shade ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}