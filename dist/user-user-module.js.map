{"version":3,"sources":["webpack:///./src/app/pages/user/add-edit-user/add-edit-user.component.html","webpack:///./src/app/pages/user/add-edit-user/add-edit-user.component.scss","webpack:///./src/app/pages/user/add-edit-user/add-edit-user.component.ts","webpack:///./src/app/pages/user/user-routing.module.ts","webpack:///./src/app/pages/user/user.component.html","webpack:///./src/app/pages/user/user.component.scss","webpack:///./src/app/pages/user/user.component.ts","webpack:///./src/app/pages/user/user.module.ts","webpack:///./src/app/pages/user/view-user/view-user.component.html","webpack:///./src/app/pages/user/view-user/view-user.component.scss","webpack:///./src/app/pages/user/view-user/view-user.component.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"<nb-card>\\r\\n  <nb-card-header>{{topHeader}}\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <form (ngSubmit)=\\\"onCustomFormSubmit(vform)\\\" #vform=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>First Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.first_name\\\" name=\\\"firstName\\\"\\r\\n              #firstName=\\\"ngModel\\\" (keypress)=\\\"alphabetsOnly($event)\\\"  />\\r\\n            <div *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"firstName.errors && firstName.errors.required\\\">\\r\\n                First Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Last Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.last_name\\\" name=\\\"lastName\\\"\\r\\n              #lastName=\\\"ngModel\\\" (keypress)=\\\"alphabetsOnly($event)\\\"  />\\r\\n            <div *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"lastName.errors && lastName.errors.required\\\">\\r\\n                Last Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>User Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.user_name\\\" name=\\\"userName\\\"\\r\\n              #userName=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"userName.invalid  && (userName.dirty || userName.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                User Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.email_id\\\" name=\\\"email\\\" #email=\\\"ngModel\\\"\\r\\n               email />\\r\\n            <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                Email is required.\\r\\n              </div>\\r\\n              <div *ngIf=\\\"email.errors && !email.errors.required\\\">\\r\\n                Valid Email is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Mobile No.</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.mobile_no\\\" name=\\\"Telephoneno\\\"\\r\\n              #telephoneNo=\\\"ngModel\\\" (keypress)=\\\"numberOnly($event)\\\"  digits />\\r\\n            <div *ngIf=\\\"telephoneNo.invalid && (telephoneNo.dirty || telephoneNo.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"telephoneNo.errors && telephoneNo.errors.required\\\">\\r\\n                Mobile No. is required.\\r\\n              </div>\\r\\n              <div *ngIf=\\\"telephoneNo.errors && !telephoneNo.errors.required\\\">\\r\\n                Valid Mobile No. is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Password</label>\\r\\n            <!-- pattern -->\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.password\\\" name=\\\"password\\\"\\r\\n              #password=\\\"ngModel\\\" required />\\r\\n            <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"password.errors && password.errors.required\\\">\\r\\n                Password is required.\\r\\n              </div>\\r\\n              <div *ngIf=\\\"password.errors && !password.errors.required\\\">\\r\\n                Valid Password is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Company</label>\\r\\n            <!-- pattern -->\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.company_id\\\" name=\\\"company\\\" #company=\\\"ngModel\\\">\\r\\n              <!-- required -->\\r\\n              <option disabled value=\\\"\\\">Select Company\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let c of companyList\\\" [value]=\\\"c.CompanyId\\\">{{c.CompanyName}}</option>\\r\\n            </select>\\r\\n            <!-- <div *ngIf=\\\"company.invalid && (company.dirty || company.touched)\\\" class=\\\"errors\\\">\\r\\n                  <div *ngIf=\\\"company.errors && company.errors.required\\\">\\r\\n                    Company is required.\\r\\n                  </div>\\r\\n                </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Department</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.department\\\" name=\\\"department\\\" #dept=\\\"ngModel\\\"\\r\\n               />\\r\\n            <div *ngIf=\\\"dept.invalid  && (dept.dirty || dept.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"dept.errors && dept.errors.required\\\">\\r\\n                Department is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Designation</label>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.designation\\\" name=\\\"designation\\\" #desigNation=\\\"ngModel\\\">\\r\\n              <!-- required -->\\r\\n              <option disabled value=\\\"\\\">Select Designation\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let d of designation\\\" [value]=\\\"d\\\">{{d}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"desigNation.invalid  && (desigNation.dirty || desigNation.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"desigNation.errors && desigNation.errors.required\\\">\\r\\n                Designation is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"isAdmin\\\" class=\\\"col-md-4 mt-4\\\">\\r\\n          <nb-checkbox name=\\\"group_head_check_box\\\" [(ngModel)]=\\\"userModal.group_head_check_box\\\" (change)=\\\"onAssign($event)\\\">Assign Under group Head\\r\\n          </nb-checkbox>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\" *ngIf=\\\"showUserNameListFlag\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>User Head List</label>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"userModal.user_head_id\\\" name=\\\"username\\\" #user_head=\\\"ngModel\\\"\\r\\n              required>\\r\\n              <!-- required -->\\r\\n              <option disabled value=\\\"\\\">Select User Head\\r\\n              </option>\\r\\n              <option *ngFor=\\\"let user of usersList\\\" [value]=\\\"user.user_id\\\">{{user.user_name}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"user_head.invalid  && (user_head.dirty || user_head.touched)\\\" class=\\\"errors\\\">\\r\\n              <div *ngIf=\\\"user_head.errors && user_head.errors.required\\\">\\r\\n                User Head is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"row\\\"> -->\\r\\n      <nb-card>\\r\\n        <nb-card-header>\\r\\n          User Permissions\\r\\n        </nb-card-header>\\r\\n        <nb-card-body>\\r\\n          <table class=\\\"table responsive\\\">\\r\\n            <tr>\\r\\n              <th *ngFor=\\\"let data of tableHeading\\\">{{data}}</th>\\r\\n            </tr>\\r\\n            <tr *ngFor=\\\"let row of userPermissionData;let i = index\\\">\\r\\n              <th>{{row.form_name}}</th>\\r\\n              <th>\\r\\n                <nb-checkbox name=\\\"view{{i}}\\\" [(ngModel)]=\\\"row.can_view\\\">\\r\\n                </nb-checkbox>\\r\\n              </th>\\r\\n              <th>\\r\\n                <nb-checkbox name=\\\"add{{i}}\\\" [(ngModel)]=\\\"row.can_add\\\"></nb-checkbox>\\r\\n              </th>\\r\\n              <th>\\r\\n                <nb-checkbox name=\\\"edit{{i}}\\\" [(ngModel)]=\\\"row.can_edit\\\"></nb-checkbox>\\r\\n              </th>\\r\\n              <th>\\r\\n                <nb-checkbox name=\\\"delete{{i}}\\\" [(ngModel)]=\\\"row.can_delete\\\"></nb-checkbox>\\r\\n              </th>\\r\\n              <th>\\r\\n                <nb-checkbox name=\\\"view_group{{i}}\\\" [(ngModel)]=\\\"row.can_view_group\\\"></nb-checkbox>\\r\\n              </th>\\r\\n              <th *ngIf=\\\"isAdmin\\\">\\r\\n                <nb-checkbox name=\\\"view_all{{i}}\\\" [(ngModel)]=\\\"row.can_view_all\\\"></nb-checkbox>\\r\\n              </th>\\r\\n              <th>\\r\\n                <nb-checkbox name=\\\"edit_group{{i}}\\\" [(ngModel)]=\\\"row.can_edit_group\\\"></nb-checkbox>\\r\\n              </th>\\r\\n              <th *ngIf=\\\"isAdmin\\\">\\r\\n                <nb-checkbox name=\\\"edit_all{{i}}\\\" [(ngModel)]=\\\"row.can_edit_all\\\"></nb-checkbox>\\r\\n              </th>\\r\\n              <th>\\r\\n                <nb-checkbox name=\\\"delete_group{{i}}\\\" [(ngModel)]=\\\"row.can_delete_group\\\"></nb-checkbox>\\r\\n              </th>\\r\\n              <th *ngIf=\\\"isAdmin\\\">\\r\\n                <nb-checkbox name=\\\"delete_all{{i}}\\\" [(ngModel)]=\\\"row.can_delete_all\\\"></nb-checkbox>\\r\\n              </th>\\r\\n            </tr>\\r\\n          </table>\\r\\n          <!-- <ngx-treeview class=\\\"col-md-12\\\" [config]=\\\"config\\\" [items]=\\\"items\\\" (filterChange)=\\\"onFilterChange($event)\\\"\\r\\n            (selectedChange)=\\\"onPermissionChange($event)\\\">\\r\\n          </ngx-treeview> -->\\r\\n        </nb-card-body>\\r\\n      </nb-card>\\r\\n      <br>\\r\\n      <div class=\\\"box-footer\\\">\\r\\n        <button nbButton [disabled]=\\\"vform.invalid\\\" translate>{{subBtnName}}</button>\\r\\n        &nbsp;\\r\\n        <button nbButton type=\\\"reset\\\" routerLink='/pages/user/view-user' id=\\\"Cancel\\\">Cancel</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </nb-card-body>\\r\\n</nb-card>\"","module.exports = \".errors {\\n  color: red;\\n  font-size: 13px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdXNlci9hZGQtZWRpdC11c2VyL0M6XFxVc2Vyc1xcUENcXERlc2t0b3BcXGdmbFxcZ2ZsLWZyb250LWVuZFxcbmd4LXdpcmVmcmFtZS9zcmNcXGFwcFxccGFnZXNcXHVzZXJcXGFkZC1lZGl0LXVzZXJcXGFkZC1lZGl0LXVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFVO0VBQ1YsZ0JBQWUsRUFDbEIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy91c2VyL2FkZC1lZGl0LXVzZXIvYWRkLWVkaXQtdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvcnMge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { TreeviewItem, TreeviewConfig } from 'ngx-treeview';\r\nimport { element } from '@angular/core/src/render3';\r\nimport { User, UserPermission } from '../../../@theme/model/user-class';\r\nimport { UserService } from '../../../@theme/services/user.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-user',\r\n  templateUrl: './add-edit-user.component.html',\r\n  styleUrls: ['./add-edit-user.component.scss']\r\n})\r\nexport class AddEditUserComponent implements OnInit, OnDestroy {\r\n\r\n  tableForms = [\"Party\", \"Quality\", \"User\", \"Fabric In\", \"Batch\", \"Program\", \"Shade\", \"Supplier\", \"Supplier Rate\", \"Shade\", \"Colour Stock\", \"Process\", \"Process Planning\", \"Jet Planning\"];\r\n  designation = ['Manager', 'Master', 'Accountant', 'Staff', 'Helper']\r\n\r\n\r\n  // if ((JSON.parse(localStorage.getItem('currentUser')).user_name)) {\r\n\r\n  // }\r\n  @ViewChild('vform') validationForm: FormGroup;\r\n  userModal: User;\r\n  currentUser;\r\n  isAdmin: boolean = false;\r\n  companyList = [];\r\n  userRoleList = [];\r\n  tableHeading = [\"Forms\", \"View\", \"Add\", \"Edit\", \"Delete\", \"View Group\", \"Edit Group\", \"Delete Group\"];\r\n  subBtnName = 'Save';\r\n  topHeader = '';\r\n  source: LocalDataSource;\r\n  id;\r\n  values: any[];\r\n  items: TreeviewItem[];\r\n  config = TreeviewConfig.create({\r\n    hasAllCheckBox: true,\r\n    hasFilter: false,\r\n    hasCollapseExpand: true,\r\n    decoupleChildFromParent: false,\r\n    maxHeight: 400\r\n  });\r\n\r\n  disbaleFlag = true;\r\n  userHeadId: any;\r\n  currentUser$: Subscription;\r\n  currentUserPermission = [];\r\n  currentUserId: any;\r\n  userPermissionData: UserPermission[] = [];\r\n  showUserNameListFlag = false;\r\n  usersList: User[] = [];\r\n  checkBoxValue = false;\r\n  constructor(private userService: UserService, private toasterService: ToastrService,\r\n    private route: ActivatedRoute, private router: Router, private authService: AuthService) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        // console.log(\"in eleeeeeeee\",ele)\r\n        this.userHeadId = ele.user.user_head_id;\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.currentUser;\r\n        this.currentUserPermission = ele.user_permission;\r\n        if (ele.user.user_name === \"admin\") {\r\n          this.tableHeading = [];\r\n          this.tableHeading = [\"Forms\", \"View\", \"Add\", \"Edit\", \"Delete\", \"View Group\", \"View All\", \"Edit Group\", \"Edit All\", \"Delete Group\", \"Delete All\"];\r\n          this.isAdmin = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this.setUserPermissionForm();\r\n    this.userModal = new User();\r\n    this.getItems();\r\n    this.onPageLoad();\r\n    this.getUsers();\r\n  }\r\n  setUserPermissionForm() {\r\n    this.userPermissionData = [];\r\n    this.tableForms.forEach((ele, index) => {\r\n      let userObj = new UserPermission();\r\n      userObj.form_name = ele;\r\n      this.userPermissionData.push(userObj);\r\n    })\r\n  }\r\n  onPageLoad() {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    if (this.id != null) {\r\n      this.disbaleFlag = false;\r\n      this.subBtnName = 'Update';\r\n      this.topHeader = 'Edit User';\r\n      this.userService.getUserById(this.id).subscribe(\r\n        data => {\r\n          if (!data[0].error) {\r\n            // console.log(\"in update user\")\r\n            // console.log(data[0].data)\r\n            this.userModal = data[0].data.user[0];\r\n\r\n            this.showUserNameListFlag = data[0].data.user[0].group_head_check_box;\r\n            //this.userModal.group_head_check_box = true;\r\n            this.userPermissionData = [];\r\n            this.userPermissionData = data[0].data.user_permission\r\n\r\n          } else {\r\n            this.toasterService.error(data.message);\r\n          }\r\n        }, error => {\r\n          this.toasterService.error(error);\r\n        });\r\n    } else {\r\n      this.subBtnName = 'Save';\r\n      this.topHeader = 'Add User';\r\n    }\r\n  }\r\n  onAssign(value) {\r\n    this.showUserNameListFlag = value.returnValue;\r\n  }\r\n  getUsers() {\r\n    this.usersList = [];\r\n    this.userService.getUserNameIdList().subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.usersList = data[0].data;\r\n      }\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n\r\n  getItems() {\r\n    this.items = this.userService.getUserPermissionJson();\r\n  }\r\n\r\n\r\n  onCustomFormSubmit(form: NgForm) {\r\n\r\n    //if isadmin and goup check box is falsse then users head id should be null \r\n    // if is admin and under name is selected then selected user name's id should be there\r\n    //if not admin then head id should be current user's user id\r\n    if (this.isAdmin && !this.userModal.group_head_check_box) {\r\n      console.log(\"in admin plus not thick\")\r\n      this.userModal.user_head_id = null\r\n    }\r\n    else if (!this.isAdmin)\r\n      this.userModal.user_head_id = this.currentUserId\r\n\r\n    // console.log(\"before user submit\")\r\n    // console.log(this.userHeadId)\r\n    this.userModal.userPermission = this.userPermissionData;\r\n    if (this.id) {\r\n      this.userModal.updated_by = this.currentUserId;\r\n      this.userService.updateUser(this.userModal).subscribe(data => {\r\n        data = data[0]\r\n        if (!data.error) {\r\n          this.toasterService.success(data.message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/user/view-user']);\r\n        } else {\r\n          this.toasterService.error('User Not Updated Successfully!');\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    } else {\r\n      //for add\r\n      //console.log('uu', this.userModal)\r\n      this.userModal.created_by = this.currentUserId;\r\n      this.userService.addUser(this.userModal).subscribe(data => {\r\n        if (!data[0].error) {\r\n          this.toasterService.success(data[0].message);\r\n          form.resetForm();\r\n          this.router.navigate(['/pages/user/view-user']);\r\n          // } else {\r\n          //   this.toasterService.error('User Not Added Successfully!');\r\n        }\r\n      }, error => {\r\n        this.toasterService.error('Server Error');\r\n      });\r\n    }\r\n  }\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && ((charCode < 46 || charCode > 57) || charCode == 47)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  alphabetsOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if ((charCode >= 97 && charCode <= 122) || (charCode >= 65 && charCode <= 90)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddEditUserComponent } from './add-edit-user/add-edit-user.component';\r\nimport { UserComponent } from './user.component';\r\nimport { ViewUserComponent } from './view-user/view-user.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserComponent,\r\n    children: [\r\n      {\r\n        path: 'view-user',\r\n        component: ViewUserComponent,\r\n      },\r\n      {\r\n        path: 'add-user',\r\n        component: AddEditUserComponent,\r\n      },\r\n      {\r\n        path: 'edit-user/:id',\r\n        component: AddEditUserComponent,\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXIvdXNlci5jb21wb25lbnQuc2NzcyJ9 */\"","import * as _ from \"lodash\";\r\nimport { Component, OnInit, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n  ngOnInit() {\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { AddEditUserComponent } from './add-edit-user/add-edit-user.component';\r\nimport { UserComponent } from './user.component';\r\nimport { TreeviewModule } from 'ngx-treeview';\r\nimport { ViewUserComponent, CustomRendererUserComponent } from './view-user/view-user.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AgGridModule,\r\n    NgbModule,\r\n    Ng2SmartTableModule,\r\n    NgSelectModule,\r\n    ThemeModule,\r\n    UserRoutingModule,\r\n    TreeviewModule.forRoot(),\r\n  ],\r\n  declarations: [AddEditUserComponent, UserComponent, CustomRendererUserComponent, ViewUserComponent],\r\n  entryComponents: [CustomRendererUserComponent]\r\n})\r\nexport class UserModule { }\r\n","module.exports = \"<nb-card>\\r\\n  <nb-card-header>Users\\r\\n    <button style=\\\"float: right;margin-left: 10px\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onAddUser()\\\">\\r\\n      Add User\\r\\n    </button>\\r\\n    <button style=\\\"float: right;\\\" nbButton size=\\\"xsmall\\\" status=\\\"info\\\" (click)=\\\"onExport()\\\">Export</button>\\r\\n  </nb-card-header>\\r\\n  <nb-card-body>\\r\\n    <div *ngIf=\\\"viewGroupDataPermission && !viewAllDataPermission\\\">\\r\\n      <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getUserList($event)\\\">\\r\\n        <nb-radio [value]=\\\"1\\\">\\r\\n          View Own\\r\\n        </nb-radio>\\r\\n        <nb-radio [value]=\\\"2\\\">\\r\\n          View Group\\r\\n        </nb-radio>\\r\\n      </nb-radio-group>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"viewGroupDataPermission && viewAllDataPermission\\\">\\r\\n      <nb-radio-group class=\\\"row ml-2 mb-2\\\" [(ngModel)]=\\\"radioSelected\\\" (valueChange)=\\\"getUserList($event)\\\">\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"1\\\">\\r\\n          View Own\\r\\n        </nb-radio>\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"2\\\">\\r\\n          View Group\\r\\n        </nb-radio>\\r\\n        <nb-radio class=\\\"radio-inline\\\" [value]=\\\"3\\\">\\r\\n          View All\\r\\n        </nb-radio>\\r\\n      </nb-radio-group>\\r\\n    </div>\\r\\n    <ag-grid-angular style=\\\"width: 100%; height:500px\\\" class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowData\\\"\\r\\n      [columnDefs]=\\\"columnDefs\\\" [pagination]=\\\"true\\\" [paginationPageSize]='100' (gridReady)=\\\"onGridReady($event)\\\">\\r\\n    </ag-grid-angular>\\r\\n  </nb-card-body>\\r\\n</nb-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXIvdmlldy11c2VyL3ZpZXctdXNlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ConfirmDialogComponent } from '../../../@theme/components/confirm-dialog/confirm-dialog.component';\r\nimport { Router } from '@angular/router';\r\nimport { PermissionService } from '../../../@theme/services/permission.service';\r\nimport { Papa } from 'ngx-papaparse';\r\nimport { ColDef } from 'ag-grid-community';\r\nimport { AgRendererComponent } from 'ag-grid-angular';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as XLSX from 'xlsx';\r\nimport { User, ViewReqObj } from \"../../../@theme/model/user-class\";\r\nimport { UserService } from \"../../../@theme/services/user.service\";\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../../@theme/services/auth.service';\r\nimport { AnimationQueryMetadata } from '@angular/animations';\r\nimport { FixedSizeVirtualScrollStrategy } from '@angular/cdk/scrolling';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-view-user',\r\n  templateUrl: './view-user.component.html',\r\n  styleUrls: ['./view-user.component.scss']\r\n})\r\nexport class ViewUserComponent implements OnInit, OnDestroy {\r\n\r\n  userList: User[] = [];\r\n  currentUser$: Subscription;\r\n  currentUser: User;\r\n  addUserPermission = 0;\r\n  rowData;\r\n  gridApi;\r\n  gridColumnApi;\r\n  columnDefs = [\r\n    { headerName: 'Actions', field: 'user_id', width: 100 },\r\n    { headerName: 'User Name', field: 'user_name', sortable: true, filter: 'agTextColumnFilter' },\r\n    { headerName: 'First Name', field: 'first_name', sortable: true, filter: 'agDateColumnFilter' },\r\n    { headerName: 'last Name', field: 'last_name', sortable: true, filter: true },\r\n    { headerName: 'Company', field: 'company_id', sortable: true, filter: true },\r\n    { headerName: 'Designation', field: 'designation', sortable: true, filter: true },\r\n    { headerName: 'Contact', field: 'mobile_no', sortable: true, filter: true },\r\n  ];\r\n  columnExportDefs = [\r\n    'user_name', 'first_name', 'last_name', 'company_id'];\r\n  filtersettings: any;\r\n  currentUserId: any;\r\n  currentUserGroupUserIds : any;\r\n  userPermission = [];\r\n  \r\n  viewAllDataPermission: any = false;\r\n  viewOwnDataPermission: any = false;\r\n  viewGroupDataPermission = false;\r\n  radioSelected: any = 1;\r\n  userReqObj = new ViewReqObj();\r\n  constructor(private userService: UserService, private router: Router, private authService: AuthService,\r\n    private permissionService: PermissionService, private papa: Papa) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.currentUserId = ele.user.user_id;\r\n        this.userPermission = ele.user_permission;\r\n        this.currentUserGroupUserIds = ele.user.group_user_ids;\r\n      }\r\n    });\r\n    this.setColumns();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.userPermission = (JSON.parse(localStorage.getItem('currentUserPermission')));\r\n    if (this.userPermission.length) {\r\n      this.userPermission.forEach(ele => {\r\n        if (ele.form_name === 'User') {\r\n          // this.addUserPermission = ele.can_add;\r\n          this.addUserPermission = 1;\r\n          this.viewAllDataPermission = ele.can_view_all;\r\n          this.viewGroupDataPermission = ele.can_view_group;\r\n          this.viewOwnDataPermission = ele.can_view;\r\n          this.userReqObj.current_user_id = this.currentUserId;\r\n          this.userReqObj.user_head_id = this.currentUser.user_head_id;\r\n          this.userReqObj.group_user_ids = this.currentUserGroupUserIds;\r\n        }\r\n      })\r\n    }\r\n    // this.currentUserId = JSON.parse(localStorage.currentUser).user_id\r\n    this.getUserList();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.currentUser$.unsubscribe();\r\n  }\r\n  setColumns() {\r\n    this.columnDefs.forEach((column: ColDef) => {\r\n      if (column.field === 'user_id') {\r\n        column.cellRendererFramework = CustomRendererUserComponent;\r\n        column.cellRendererParams = {\r\n          inRouterLink: '/pages/user/edit-user/',\r\n          action: this\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  getUserList(value?) {\r\n    this.userList = [];\r\n    this.rowData = [];\r\n\r\n    this.userReqObj.view_all = false ;\r\n    this.userReqObj.view_group= false ;\r\n    this.userReqObj.view_own = false ;\r\n    \r\n    if (value)\r\n      this.radioSelected = value;\r\n\r\n    //check which radio button is selected\r\n    if (this.radioSelected == 1)\r\n      this.userReqObj.view_own = true ;\r\n    else if (this.radioSelected == 2)\r\n      this.userReqObj.view_group = true ;\r\n    else if (this.radioSelected == 3)\r\n      this.userReqObj.view_all = true ;\r\n  \r\n    this.userService.getUserList(this.userReqObj).subscribe(data => {\r\n      if (!data[0].error) {\r\n        this.userList = data[0].data;\r\n        this.rowData = data[0].data;\r\n        // this.source = new LocalDataSource(this.userList);\r\n      }\r\n    });\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    // this.getUserList(this.currentUserId);\r\n  }\r\n\r\n  onExport() {\r\n    var params = {\r\n      columnKeys: this.columnExportDefs\r\n    };\r\n    var data = this.gridApi.getDataAsCsv(params);\r\n    // console.log(data);\r\n    this.papa.parse(data, {\r\n      complete: (result) => {\r\n        // console.log('Parsed: ', result);\r\n        this.getObject(result.data);\r\n        this.exportExcel(result.data);\r\n      }\r\n    });\r\n  }\r\n  getObject(data) {\r\n    let obj: Object = {};\r\n    this.columnExportDefs.forEach(ele => {\r\n      obj[ele] = '';\r\n    });\r\n  }\r\n\r\n  exportExcel(data) {\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    XLSX.writeFile(workbook, 'my_file.xls', { bookType: 'xls', type: 'buffer' });\r\n  }\r\n  onAddUser() {\r\n    if (this.addUserPermission) {\r\n      this.router.navigate(['/pages/user/add-user']);\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to add user. If you want to add user ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n@Component({\r\n  template: `\r\n  <i class=\"ft-edit-2 font-medium-1 mr-2\" style=\"color:#4ca6ff\" (click)=\"editUser()\"></i>\r\n  <i class=\"ft-x font-medium-1 mr-2\" style=\"color:red;\" (click)=\"onDeleteUser()\"></i>`,\r\n  styleUrls: ['./view-user.component.scss']\r\n})\r\n\r\nexport class CustomRendererUserComponent implements AgRendererComponent {\r\n  params: any;\r\n  userPermission = [];\r\n  editUserPermission = 0;\r\n  deleteUserPermission = 0;\r\n  currentUser$: Subscription;\r\n  currentUser: User;\r\n\r\n  constructor(private router: Router, private _modalService: NgbModal, private userService: UserService,\r\n    private toasterService: ToastrService, private permissionService: PermissionService, private authService: AuthService) {\r\n    this.currentUser$ = this.authService.currentUser.subscribe(ele => {\r\n      if (ele != null) {\r\n        this.currentUser = ele.user;\r\n        this.userPermission = ele.user_permission;\r\n      }\r\n    });\r\n  }\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n    this.userPermission.forEach(ele => {\r\n      if (ele.form_name === 'User') {\r\n        if (this.params.action.radioSelected == 1) {\r\n          this.editUserPermission = ele.can_edit;\r\n          this.deleteUserPermission = ele.can_delete;\r\n        } else if (this.params.action.radioSelected == 2) {\r\n          this.editUserPermission = ele.can_edit_group;\r\n          this.deleteUserPermission = ele.can_delete_group;\r\n        } else if (this.params.action.radioSelected == 3) {\r\n          this.editUserPermission = ele.can_edit_all;\r\n          this.deleteUserPermission = ele.can_delete_all;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  refresh(): boolean {\r\n    return false;\r\n  }\r\n\r\n  editUser() {\r\n    if (this.editUserPermission) {\r\n      this.router.navigate([this.params.inRouterLink + this.params.value]);\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to edit user. If you want to edit user ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n  onDeleteUser() {\r\n    if (this.deleteUserPermission) {\r\n      const modalRef = this._modalService.open(ConfirmDialogComponent);\r\n      modalRef.componentInstance.titleFrom = 'Delete User ';\r\n      modalRef.componentInstance.message = 'Are you sure you want to delete this user?';\r\n      modalRef.result\r\n        .then((result) => {\r\n          if (result) {\r\n            const id = this.params.value;\r\n            this.userService.deleteUser(id).subscribe(data => {\r\n              if (!data[0].error) {\r\n                this.params.action.getUserList();\r\n                this.toasterService.success(data[0].message);\r\n              } else {\r\n                this.toasterService.error(data[0].message);\r\n              }\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      const res = this.permissionService.callPermissionView('Ask for Permission', 'You do not have access permission to delete user. If you want to delete user ask admin for permission.');\r\n      if (res) {\r\n\r\n      } else {\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}